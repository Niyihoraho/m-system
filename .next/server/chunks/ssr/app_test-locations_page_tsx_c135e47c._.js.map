{"version":3,"sources":["turbopack:///[project]/app/test-locations/page.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useState, useEffect } from 'react';\r\n\r\nexport default function TestLocationsPage() {\r\n  const [provinces, setProvinces] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const fetchProvinces = async () => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      console.log('Fetching provinces...');\r\n      const response = await fetch('/api/locations?type=provinces');\r\n      const data = await response.json();\r\n      console.log('Response:', { status: response.status, data });\r\n      \r\n      if (response.ok) {\r\n        setProvinces(data);\r\n      } else {\r\n        setError(data.error || 'Failed to fetch provinces');\r\n      }\r\n    } catch (err) {\r\n      console.error('Error:', err);\r\n      setError('Network error');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchProvinces();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"p-8\">\r\n      <h1 className=\"text-2xl font-bold mb-4\">Test Locations API</h1>\r\n      \r\n      <button \r\n        onClick={fetchProvinces}\r\n        disabled={loading}\r\n        className=\"mb-4 px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600 disabled:opacity-50\"\r\n      >\r\n        {loading ? 'Loading...' : 'Fetch Provinces'}\r\n      </button>\r\n\r\n      {error && (\r\n        <div className=\"mb-4 p-4 bg-red-100 border border-red-400 text-red-700 rounded\">\r\n          Error: {error}\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"mb-4\">\r\n        <h2 className=\"text-lg font-semibold mb-2\">Provinces ({provinces.length})</h2>\r\n        <pre className=\"bg-gray-100 p-4 rounded overflow-auto\">\r\n          {JSON.stringify(provinces, null, 2)}\r\n        </pre>\r\n      </div>\r\n\r\n      <div className=\"mb-4\">\r\n        <h2 className=\"text-lg font-semibold mb-2\">Console Logs</h2>\r\n        <p className=\"text-sm text-gray-600\">Check the browser console for detailed logs</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"+EAEA,EAAA,EAAA,CAAA,CAAA,OAEe,SAAS,IACtB,GAAM,CAAC,EAAW,EAAa,CAAG,CAAA,EAAA,EAAA,QAAA,AAAQ,EAAC,EAAE,EACvC,CAAC,EAAS,EAAW,CAAG,CAAA,EAAA,EAAA,QAAA,AAAQ,GAAC,GACjC,CAAC,EAAO,EAAS,CAAG,CAAA,EAAA,EAAA,QAAA,AAAQ,EAAC,MAE7B,EAAiB,UACrB,GAAW,GACX,EAAS,MACT,GAAI,CACF,QAAQ,GAAG,CAAC,yBACZ,IAAM,EAAW,MAAM,MAAM,iCACvB,EAAO,MAAM,EAAS,IAAI,GAChC,QAAQ,GAAG,CAAC,YAAa,CAAE,OAAQ,EAAS,MAAM,MAAE,CAAK,GAErD,EAAS,EAAE,CACb,CADe,CACF,GAEb,EAAS,EAAK,KAAK,EAAI,4BAE3B,CAAE,MAAO,EAAK,CACZ,QAAQ,KAAK,CAAC,SAAU,GACxB,EAAS,gBACX,QAAU,CACR,GAAW,EACb,CACF,EAMA,MAJA,CAAA,EAAA,EAAA,SAAA,AAAS,EAAC,KACR,GACF,EAAG,EAAE,EAGH,CAAA,EAAA,EAAA,IAAA,EAAC,MAAA,CAAI,UAAU,gBACb,CAAA,EAAA,EAAA,GAAA,EAAC,KAAA,CAAG,UAAU,mCAA0B,uBAExC,CAAA,EAAA,EAAA,GAAA,EAAC,SAAA,CACC,QAAS,EACT,SAAU,EACV,UAAU,+FAET,EAAU,aAAe,oBAG3B,GACC,CAAA,EAAA,EAAA,IAAA,EAAC,MAAA,CAAI,UAAU,2EAAiE,UACtE,KAIZ,CAAA,EAAA,EAAA,IAAA,EAAC,MAAA,CAAI,UAAU,iBACb,CAAA,EAAA,EAAA,IAAA,EAAC,KAAA,CAAG,UAAU,uCAA6B,cAAY,EAAU,MAAM,CAAC,OACxE,CAAA,EAAA,EAAA,GAAA,EAAC,MAAA,CAAI,UAAU,iDACZ,KAAK,SAAS,CAAC,EAAW,KAAM,QAIrC,CAAA,EAAA,EAAA,IAAA,EAAC,MAAA,CAAI,UAAU,iBACb,CAAA,EAAA,EAAA,GAAA,EAAC,KAAA,CAAG,UAAU,sCAA6B,iBAC3C,CAAA,EAAA,EAAA,GAAA,EAAC,IAAA,CAAE,UAAU,iCAAwB,qDAI7C"}