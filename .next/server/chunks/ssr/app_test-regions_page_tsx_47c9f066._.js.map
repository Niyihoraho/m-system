{"version":3,"sources":["turbopack:///[project]/app/test-regions/page.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useState, useEffect } from 'react';\r\n\r\nexport default function TestRegionsPage() {\r\n  const [regions, setRegions] = useState([]);\r\n  const [universities, setUniversities] = useState([]);\r\n  const [smallGroups, setSmallGroups] = useState([]);\r\n  const [alumniGroups, setAlumniGroups] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [selectedRegionId, setSelectedRegionId] = useState('');\r\n\r\n  const fetchRegions = async () => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      console.log('Fetching regions...');\r\n      const response = await fetch('/api/regions');\r\n      const data = await response.json();\r\n      console.log('Regions Response:', { status: response.status, data });\r\n      \r\n      if (response.ok) {\r\n        setRegions(data);\r\n      } else {\r\n        setError(data.error || 'Failed to fetch regions');\r\n      }\r\n    } catch (err) {\r\n      console.error('Error:', err);\r\n      setError('Network error');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const fetchUniversities = async (regionId) => {\r\n    try {\r\n      console.log('Fetching universities for region:', regionId);\r\n      const response = await fetch(`/api/universities?regionId=${regionId}`);\r\n      const data = await response.json();\r\n      console.log('Universities Response:', { status: response.status, data });\r\n      \r\n      if (response.ok) {\r\n        setUniversities(data);\r\n      } else {\r\n        console.error('Universities API Error:', data);\r\n      }\r\n    } catch (err) {\r\n      console.error('Universities Error:', err);\r\n    }\r\n  };\r\n\r\n  const _fetchSmallGroups = async (regionId, universityId) => {\r\n    try {\r\n      console.log('Fetching small groups for region:', regionId, 'university:', universityId);\r\n      const response = await fetch(`/api/small-groups?regionId=${regionId}&universityId=${universityId}`);\r\n      const data = await response.json();\r\n      console.log('Small Groups Response:', { status: response.status, data });\r\n      \r\n      if (response.ok) {\r\n        setSmallGroups(data);\r\n      } else {\r\n        console.error('Small Groups API Error:', data);\r\n      }\r\n    } catch (err) {\r\n      console.error('Small Groups Error:', err);\r\n    }\r\n  };\r\n\r\n  const fetchAlumniGroups = async (regionId) => {\r\n    try {\r\n      console.log('Fetching alumni groups for region:', regionId);\r\n      const response = await fetch(`/api/alumni-small-groups?regionId=${regionId}`);\r\n      const data = await response.json();\r\n      console.log('Alumni Groups Response:', { status: response.status, data });\r\n      \r\n      if (response.ok) {\r\n        setAlumniGroups(data);\r\n      } else {\r\n        console.error('Alumni Groups API Error:', data);\r\n      }\r\n    } catch (err) {\r\n      console.error('Alumni Groups Error:', err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchRegions();\r\n  }, []);\r\n\r\n  const handleRegionChange = (regionId) => {\r\n    setSelectedRegionId(regionId);\r\n    setUniversities([]);\r\n    setSmallGroups([]);\r\n    setAlumniGroups([]);\r\n    \r\n    if (regionId) {\r\n      fetchUniversities(regionId);\r\n      fetchAlumniGroups(regionId);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-8\">\r\n      <h1 className=\"text-2xl font-bold mb-4\">Test User Role APIs</h1>\r\n      \r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n        <div>\r\n          <h2 className=\"text-lg font-semibold mb-2\">Test Region Selection</h2>\r\n          <select \r\n            value={selectedRegionId} \r\n            onChange={(e) => handleRegionChange(e.target.value)}\r\n            className=\"w-full p-2 border rounded mb-4\"\r\n          >\r\n            <option value=\"\">Select a region</option>\r\n            {regions.map((region) => (\r\n              <option key={region.id} value={region.id}>\r\n                {region.name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n\r\n        <div>\r\n          <button \r\n            onClick={fetchRegions}\r\n            disabled={loading}\r\n            className=\"px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600 disabled:opacity-50\"\r\n          >\r\n            {loading ? 'Loading...' : 'Refresh Regions'}\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {error && (\r\n        <div className=\"mb-4 p-4 bg-red-100 border border-red-400 text-red-700 rounded\">\r\n          Error: {error}\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n        <div className=\"mb-4\">\r\n          <h2 className=\"text-lg font-semibold mb-2\">Regions ({regions.length})</h2>\r\n          <pre className=\"bg-gray-100 p-4 rounded overflow-auto max-h-40\">\r\n            {JSON.stringify(regions, null, 2)}\r\n          </pre>\r\n        </div>\r\n\r\n        <div className=\"mb-4\">\r\n          <h2 className=\"text-lg font-semibold mb-2\">Universities ({universities.length})</h2>\r\n          <pre className=\"bg-gray-100 p-4 rounded overflow-auto max-h-40\">\r\n            {JSON.stringify(universities, null, 2)}\r\n          </pre>\r\n        </div>\r\n\r\n        <div className=\"mb-4\">\r\n          <h2 className=\"text-lg font-semibold mb-2\">Small Groups ({smallGroups.length})</h2>\r\n          <pre className=\"bg-gray-100 p-4 rounded overflow-auto max-h-40\">\r\n            {JSON.stringify(smallGroups, null, 2)}\r\n          </pre>\r\n        </div>\r\n\r\n        <div className=\"mb-4\">\r\n          <h2 className=\"text-lg font-semibold mb-2\">Alumni Groups ({alumniGroups.length})</h2>\r\n          <pre className=\"bg-gray-100 p-4 rounded overflow-auto max-h-40\">\r\n            {JSON.stringify(alumniGroups, null, 2)}\r\n          </pre>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"mb-4\">\r\n        <h2 className=\"text-lg font-semibold mb-2\">Console Logs</h2>\r\n        <p className=\"text-sm text-gray-600\">Check the browser console for detailed logs</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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"}