{"version":3,"sources":["turbopack:///[project]/app/links/reports/engagement/page.tsx","turbopack:///[project]/node_modules/recharts/es6/chart/LineChart.js","turbopack:///[project]/node_modules/recharts/es6/cartesian/Line.js","turbopack:///[project]/node_modules/recharts/es6/state/selectors/lineSelectors.js"],"sourcesContent":["\"use client\";\n\nimport { useState, useEffect, useMemo, useRef } from 'react';\nimport { useSession } from 'next-auth/react';\nimport { useRouter } from 'next/navigation';\nimport html2canvas from 'html2canvas';\nimport jsPDF from 'jspdf';\nimport { \n  BarChart, \n  Bar, \n  XAxis, \n  YAxis, \n  CartesianGrid, \n  Tooltip, \n  ResponsiveContainer,\n  PieChart,\n  Pie,\n  Cell,\n  Area,\n  AreaChart,\n  LineChart,\n  Line\n} from 'recharts';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport { Label } from '@/components/ui/label';\nimport { Input } from '@/components/ui/input';\nimport { Button } from '@/components/ui/button';\nimport { SuperAdminScopeSelector } from '@/components/super-admin-scope-selector';\nimport { AppSidebar } from '@/components/app-sidebar';\nimport { LogoutButton } from '@/components/logout-button';\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbList,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n} from '@/components/ui/breadcrumb';\nimport { Separator } from '@/components/ui/separator';\nimport {\n  SidebarInset,\n  SidebarProvider,\n  SidebarTrigger,\n} from '@/components/ui/sidebar';\n\n// Icons\nconst UsersIcon = (props: React.SVGProps<SVGSVGElement>) => (\n  <svg width=\"24\" height=\"24\" fill=\"none\" viewBox=\"0 0 24 24\" {...props}>\n    <path d=\"M17 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n    <circle cx=\"9\" cy=\"7\" r=\"4\" stroke=\"currentColor\" strokeWidth=\"2\"/>\n    <path d=\"M23 21v-2a4 4 0 0 0-3-3.87\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n    <path d=\"M16 3.13a4 4 0 0 1 0 7.75\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n  </svg>\n);\n\nconst TrendingUpIcon = (props: React.SVGProps<SVGSVGElement>) => (\n  <svg width=\"24\" height=\"24\" fill=\"none\" viewBox=\"0 0 24 24\" {...props}>\n    <polyline points=\"23,6 13.5,15.5 8.5,10.5 1,18\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n    <polyline points=\"17,6 23,6 23,12\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n  </svg>\n);\n\nconst CalendarIcon = (props: React.SVGProps<SVGSVGElement>) => (\n  <svg width=\"24\" height=\"24\" fill=\"none\" viewBox=\"0 0 24 24\" {...props}>\n    <rect x=\"3\" y=\"4\" width=\"18\" height=\"18\" rx=\"2\" ry=\"2\" stroke=\"currentColor\" strokeWidth=\"2\"/>\n    <line x1=\"16\" y1=\"2\" x2=\"16\" y2=\"6\" stroke=\"currentColor\" strokeWidth=\"2\"/>\n    <line x1=\"8\" y1=\"2\" x2=\"8\" y2=\"6\" stroke=\"currentColor\" strokeWidth=\"2\"/>\n    <line x1=\"3\" y1=\"10\" x2=\"21\" y2=\"10\" stroke=\"currentColor\" strokeWidth=\"2\"/>\n  </svg>\n);\n\nconst AwardIcon = (props: React.SVGProps<SVGSVGElement>) => (\n  <svg width=\"24\" height=\"24\" fill=\"none\" viewBox=\"0 0 24 24\" {...props}>\n    <circle cx=\"12\" cy=\"8\" r=\"6\" stroke=\"currentColor\" strokeWidth=\"2\"/>\n    <path d=\"M15.477 12.89L17 22l-5-3-5 3 1.523-9.11\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n  </svg>\n);\n\nexport default function EngagementReportsPage() {\n  const { data: session, status } = useSession();\n  const router = useRouter();\n  const [dateRange, setDateRange] = useState('6months');\n  const [selectedRegion, setSelectedRegion] = useState('all');\n  const [selectedUniversity, setSelectedUniversity] = useState('all');\n  const [selectedSmallGroup, setSelectedSmallGroup] = useState('all');\n  const [selectedAlumniGroup, setSelectedAlumniGroup] = useState('all');\n  const [dateFrom, setDateFrom] = useState('');\n  const [dateTo, setDateTo] = useState('');\n  \n  // Engagement type selector - the main feature requested\n  const [engagementType, setEngagementType] = useState('event');\n  const [selectedEvent, setSelectedEvent] = useState('all');\n  const [selectedDesignation, setSelectedDesignation] = useState('all');\n  \n  const [isSuperAdmin, setIsSuperAdmin] = useState(false);\n  const [isClient, setIsClient] = useState(false);\n  const [isExporting, setIsExporting] = useState(false);\n  const [showFilters, setShowFilters] = useState(true);\n  const [showExportOptions, setShowExportOptions] = useState(false);\n  const reportRef = useRef<HTMLDivElement>(null);\n\n  // Cascading dropdown data\n  const [regions, setRegions] = useState<Array<{id: number; name: string}>>([]);\n  const [universities, setUniversities] = useState<Array<{id: number; name: string; regionId: number}>>([]);\n  const [smallGroups, setSmallGroups] = useState<Array<{id: number; name: string; regionId: number; universityId: number}>>([]);\n  const [alumniGroups, setAlumniGroups] = useState<Array<{id: number; name: string; regionId: number}>>([]);\n  const [events, setEvents] = useState<Array<{id: number; name: string; type: string}>>([]);\n  const [designations, setDesignations] = useState<Array<{id: number; name: string}>>([]);\n\n  // Authentication check\n  useEffect(() => {\n    if (status === \"unauthenticated\") {\n      router.push('/');\n    }\n  }, [status, router]);\n\n  // Mock data generators for engagement reports\n  const generateEngagementTrendsData = () => {\n    const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n    const currentMonth = new Date().getMonth();\n    \n    return months.slice(0, currentMonth + 1).map((month, index) => {\n      const eventAttendance = 120 + (index * 8) + (index % 3) * 15;\n      const designationParticipation = 45 + (index * 3) + (index % 2) * 8;\n      const totalEngagement = eventAttendance + designationParticipation;\n      const engagementRate = 75 + (index % 4) * 5;\n      \n      return {\n        month,\n        eventAttendance,\n        designationParticipation,\n        totalEngagement,\n        engagementRate,\n        activeMembers: 850 + (index * 25) + (index % 3) * 10\n      };\n    });\n  };\n\n  const generateEngagementTypeData = () => [\n    { name: 'Events', value: 65, color: '#3B82F6', count: 1250 },\n    { name: 'Designations', value: 35, color: '#10B981', count: 675 }\n  ];\n\n  const generateRegionalEngagementData = () => [\n    { region: 'North', totalEngagement: 450, eventEngagement: 320, designationEngagement: 130, engagementRate: 78 },\n    { region: 'South', totalEngagement: 380, eventEngagement: 280, designationEngagement: 100, engagementRate: 72 },\n    { region: 'East', totalEngagement: 520, eventEngagement: 380, designationEngagement: 140, engagementRate: 85 },\n    { region: 'West', totalEngagement: 340, eventEngagement: 250, designationEngagement: 90, engagementRate: 68 },\n    { region: 'Central', totalEngagement: 290, eventEngagement: 200, designationEngagement: 90, engagementRate: 65 }\n  ];\n\n  const generateEventEngagementData = () => [\n    { name: 'High Engagement', value: 40, color: '#10B981', count: 320 },\n    { name: 'Medium Engagement', value: 35, color: '#F59E0B', count: 280 },\n    { name: 'Low Engagement', value: 25, color: '#EF4444', count: 200 }\n  ];\n\n  // State for data\n  const [analyticsData, setAnalyticsData] = useState<{\n    totalEvents: number;\n    totalAttendance: number;\n    averageAttendance: number;\n    engagementTypeDistribution: Array<{name: string; value: number; color: string}>;\n    eventEngagementLevels: Array<{name: string; value: number; color: string}>;\n  } | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [loadingEvents, setLoadingEvents] = useState(false);\n  const [loadingDesignations, setLoadingDesignations] = useState(false);\n\n  // Initialize data on client side\n  useEffect(() => {\n    setIsClient(true);\n    fetchRegions();\n    fetchEvents(); // Fetch all events initially\n    fetchDesignations(); // Fetch all designations initially\n    fetchEngagementAnalytics();\n  }, []);\n\n  // Fetch engagement analytics data\n  const fetchEngagementAnalytics = async (showLoading = true) => {\n    try {\n      if (showLoading) {\n        setLoading(true);\n      }\n      setError(null);\n      \n      const params = new URLSearchParams();\n      if (selectedRegion && selectedRegion !== 'all') params.append('regionId', selectedRegion);\n      if (selectedUniversity && selectedUniversity !== 'all') params.append('universityId', selectedUniversity);\n      if (selectedSmallGroup && selectedSmallGroup !== 'all') params.append('smallGroupId', selectedSmallGroup);\n      if (selectedAlumniGroup && selectedAlumniGroup !== 'all') params.append('alumniGroupId', selectedAlumniGroup);\n      if (dateFrom) params.append('dateFrom', dateFrom);\n      if (dateTo) params.append('dateTo', dateTo);\n      if (engagementType) params.append('engagementType', engagementType);\n      if (selectedEvent && selectedEvent !== 'all') params.append('selectedEvent', selectedEvent);\n      if (selectedDesignation && selectedDesignation !== 'all') params.append('selectedDesignation', selectedDesignation);\n\n      const response = await fetch(`/api/engagement/analytics?${params.toString()}`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch engagement analytics data');\n      }\n      \n      const data = await response.json();\n      setAnalyticsData(data);\n    } catch (err) {\n      console.error('Error fetching engagement analytics:', err);\n      setError(err instanceof Error ? err.message : 'Failed to fetch engagement analytics data');\n      // Fallback to mock data on error\n      setAnalyticsData({\n        engagementTrends: generateEngagementTrendsData(),\n        engagementTypeDistribution: generateEngagementTypeData(),\n        regionalEngagement: generateRegionalEngagementData(),\n        eventEngagementLevels: generateEventEngagementData(),\n        keyMetrics: {\n          totalEngagement: 1980,\n          averageEngagementRate: 73.6,\n          eventParticipation: 1430,\n          designationParticipation: 550,\n          monthlyGrowth: 12.5\n        }\n      });\n    } finally {\n      if (showLoading) {\n        setLoading(false);\n      }\n    }\n  };\n\n  // Fetch regions on component mount\n  const fetchRegions = async () => {\n    try {\n      const response = await fetch('/api/regions');\n      const data = await response.json();\n      setRegions(data);\n    } catch (error) {\n      console.error('Error fetching regions:', error);\n    }\n  };\n\n  // Fetch universities when region changes\n  useEffect(() => {\n    if (selectedRegion && selectedRegion !== 'all') {\n      fetchUniversities(Number(selectedRegion));\n      fetchAlumniGroups(Number(selectedRegion));\n    } else {\n      setUniversities([]);\n      setAlumniGroups([]);\n      setSelectedUniversity('');\n      setSelectedAlumniGroup('');\n    }\n  }, [selectedRegion]);\n\n  // Fetch small groups when university changes\n  useEffect(() => {\n    if (selectedUniversity && selectedUniversity !== 'all') {\n      fetchSmallGroups(Number(selectedUniversity));\n    } else {\n      setSmallGroups([]);\n      setSelectedSmallGroup('');\n    }\n  }, [selectedUniversity]);\n\n  const fetchUniversities = async (regionId: number) => {\n    try {\n      const response = await fetch(`/api/universities?regionId=${regionId}`);\n      const data = await response.json();\n      setUniversities(data);\n    } catch (error) {\n      console.error('Error fetching universities:', error);\n    }\n  };\n\n  const fetchSmallGroups = async (universityId: number) => {\n    try {\n      const response = await fetch(`/api/small-groups?universityId=${universityId}`);\n      const data = await response.json();\n      setSmallGroups(data);\n    } catch (error) {\n      console.error('Error fetching small groups:', error);\n    }\n  };\n\n  const fetchAlumniGroups = async (regionId: number) => {\n    try {\n      const response = await fetch(`/api/alumni-small-groups?regionId=${regionId}`);\n      const data = await response.json();\n      setAlumniGroups(data);\n    } catch (error) {\n      console.error('Error fetching alumni groups:', error);\n    }\n  };\n\n  // Fetch events based on organizational filters\n  const fetchEvents = async (regionId?: string, universityId?: string, smallGroupId?: string, alumniGroupId?: string) => {\n    try {\n      setLoadingEvents(true);\n      const params = new URLSearchParams();\n      if (regionId && regionId !== 'all') params.append('regionId', regionId);\n      if (universityId && universityId !== 'all') params.append('universityId', universityId);\n      if (smallGroupId && smallGroupId !== 'all') params.append('smallGroupId', smallGroupId);\n      if (alumniGroupId && alumniGroupId !== 'all') params.append('alumniGroupId', alumniGroupId);\n\n      const response = await fetch(`/api/events?${params.toString()}`);\n      if (!response.ok) throw new Error('Failed to fetch events');\n      const data = await response.json();\n      setEvents(data.events || data || []);\n    } catch (error) {\n      console.error('Error fetching events:', error);\n    } finally {\n      setLoadingEvents(false);\n    }\n  };\n\n  // Fetch designations based on organizational filters\n  const fetchDesignations = async (regionId?: string, universityId?: string, smallGroupId?: string, alumniGroupId?: string) => {\n    try {\n      setLoadingDesignations(true);\n      const params = new URLSearchParams();\n      if (regionId && regionId !== 'all') params.append('regionId', regionId);\n      if (universityId && universityId !== 'all') params.append('universityId', universityId);\n      if (smallGroupId && smallGroupId !== 'all') params.append('smallGroupId', smallGroupId);\n      if (alumniGroupId && alumniGroupId !== 'all') params.append('alumniGroupId', alumniGroupId);\n\n      const response = await fetch(`/api/designations?${params.toString()}`);\n      if (!response.ok) throw new Error('Failed to fetch designations');\n      const data = await response.json();\n      setDesignations(data.designations || data || []);\n    } catch (error) {\n      console.error('Error fetching designations:', error);\n    } finally {\n      setLoadingDesignations(false);\n    }\n  };\n\n  // Refetch analytics when filters change (without loading state)\n  useEffect(() => {\n    if (isClient) {\n      fetchEngagementAnalytics(false);\n    }\n  }, [selectedRegion, selectedUniversity, selectedSmallGroup, selectedAlumniGroup, dateFrom, dateTo, engagementType, selectedEvent, selectedDesignation]);\n\n  // Refetch events and designations when organizational filters change\n  useEffect(() => {\n    if (isClient && (selectedRegion || selectedUniversity || selectedSmallGroup || selectedAlumniGroup)) {\n      fetchEvents(selectedRegion, selectedUniversity, selectedSmallGroup, selectedAlumniGroup);\n      fetchDesignations(selectedRegion, selectedUniversity, selectedSmallGroup, selectedAlumniGroup);\n    }\n  }, [selectedRegion, selectedUniversity, selectedSmallGroup, selectedAlumniGroup]);\n\n  // Check if user is super admin\n  useEffect(() => {\n    fetch(\"/api/members/current-user-scope\")\n      .then(res => res.json())\n      .then(data => {\n        if (data.scope) {\n          setIsSuperAdmin(data.scope.scope === 'superadmin');\n        }\n      })\n      .catch(err => {\n        console.error(\"Failed to fetch user scope:\", err);\n      });\n  }, []);\n\n  // Calculate key metrics from data\n  const keyMetrics = useMemo(() => {\n    if (!analyticsData || !analyticsData.keyMetrics) {\n      return {\n        totalEngagement: 0,\n        averageEngagementRate: 0,\n        eventParticipation: 0,\n        designationParticipation: 0,\n        monthlyGrowth: 0\n      };\n    }\n\n    return {\n      totalEngagement: analyticsData.keyMetrics.totalEngagement || 0,\n      averageEngagementRate: analyticsData.keyMetrics.averageEngagementRate || 0,\n      eventParticipation: analyticsData.keyMetrics.eventParticipation || 0,\n      designationParticipation: analyticsData.keyMetrics.designationParticipation || 0,\n      monthlyGrowth: analyticsData.keyMetrics.monthlyGrowth || 0\n    };\n  }, [analyticsData]);\n\n  // Fallback data for charts\n  const chartData = useMemo(() => {\n    if (!analyticsData) {\n      return {\n        engagementTrends: generateEngagementTrendsData(),\n        engagementTypeDistribution: generateEngagementTypeData(),\n        regionalEngagement: generateRegionalEngagementData(),\n        eventEngagementLevels: generateEventEngagementData()\n      };\n    }\n\n    return {\n      engagementTrends: analyticsData.engagementTrends || generateEngagementTrendsData(),\n      engagementTypeDistribution: analyticsData.engagementTypeDistribution || generateEngagementTypeData(),\n      regionalEngagement: analyticsData.regionalEngagement || generateRegionalEngagementData(),\n      eventEngagementLevels: analyticsData.eventEngagementLevels || generateEventEngagementData()\n    };\n  }, [analyticsData]);\n\n  const dateRangeOptions = [\n    { value: '3months', label: 'Last 3 Months' },\n    { value: '6months', label: 'Last 6 Months' },\n    { value: '1year', label: 'Last Year' },\n    { value: 'all', label: 'All Time' }\n  ];\n\n  const engagementTypeOptions = [\n    { value: 'event', label: 'Events' },\n    { value: 'designation', label: 'Designations' }\n  ];\n\n  // Handler functions for cascading dropdowns\n  const handleRegionChange = (value: string) => {\n    setSelectedRegion(value);\n    setSelectedUniversity('all');\n    setSelectedSmallGroup('all');\n    setSelectedAlumniGroup('all');\n    setSelectedEvent('all');\n    setSelectedDesignation('all');\n    \n    // Fetch events and designations for the selected region\n    fetchEvents(value);\n    fetchDesignations(value);\n  };\n\n  const handleUniversityChange = (value: string) => {\n    setSelectedUniversity(value);\n    setSelectedSmallGroup('all');\n    setSelectedAlumniGroup('all');\n    setSelectedEvent('all');\n    setSelectedDesignation('all');\n    \n    // Fetch events and designations for the selected university\n    fetchEvents(selectedRegion, value);\n    fetchDesignations(selectedRegion, value);\n  };\n\n  const handleSmallGroupChange = (value: string) => {\n    setSelectedSmallGroup(value);\n    setSelectedAlumniGroup('all');\n    setSelectedEvent('all');\n    setSelectedDesignation('all');\n    \n    // Fetch events and designations for the selected small group\n    fetchEvents(selectedRegion, selectedUniversity, value);\n    fetchDesignations(selectedRegion, selectedUniversity, value);\n  };\n\n  const handleAlumniGroupChange = (value: string) => {\n    setSelectedAlumniGroup(value);\n    setSelectedEvent('all');\n    setSelectedDesignation('all');\n    \n    // Fetch events and designations for the selected alumni group\n    fetchEvents(selectedRegion, selectedUniversity, selectedSmallGroup, value);\n    fetchDesignations(selectedRegion, selectedUniversity, selectedSmallGroup, value);\n  };\n\n  const handleEventChange = (value: string) => {\n    setSelectedEvent(value);\n  };\n\n  const handleDesignationChange = (value: string) => {\n    setSelectedDesignation(value);\n  };\n\n  // Fetch engagement details for export\n  const fetchEngagementDetails = async () => {\n    try {\n      const params = new URLSearchParams();\n      if (selectedRegion && selectedRegion !== 'all') params.append('regionId', selectedRegion);\n      if (selectedUniversity && selectedUniversity !== 'all') params.append('universityId', selectedUniversity);\n      if (selectedSmallGroup && selectedSmallGroup !== 'all') params.append('smallGroupId', selectedSmallGroup);\n      if (selectedAlumniGroup && selectedAlumniGroup !== 'all') params.append('alumniGroupId', selectedAlumniGroup);\n      if (dateFrom) params.append('dateFrom', dateFrom);\n      if (dateTo) params.append('dateTo', dateTo);\n      if (engagementType) params.append('engagementType', engagementType);\n      if (selectedEvent && selectedEvent !== 'all') params.append('selectedEvent', selectedEvent);\n      if (selectedDesignation && selectedDesignation !== 'all') params.append('selectedDesignation', selectedDesignation);\n\n      const response = await fetch(`/api/engagement/export-details?${params.toString()}`);\n      if (!response.ok) throw new Error('Failed to fetch engagement details');\n      \n      return await response.json();\n    } catch (error) {\n      console.error('Error fetching engagement details:', error);\n      return null;\n    }\n  };\n\n  // PDF Export Function\n  const exportToPDF = async () => {\n    if (!reportRef.current) return;\n    \n    setIsExporting(true);\n    try {\n      // Fetch engagement details\n      const engagementDetails = await fetchEngagementDetails();\n\n      const pdf = new jsPDF('p', 'mm', 'a4');\n      const pageWidth = pdf.internal.pageSize.getWidth();\n      const pageHeight = pdf.internal.pageSize.getHeight();\n      \n      // Add header\n      pdf.setFontSize(20);\n      pdf.setFont('helvetica', 'bold');\n      pdf.text('Ministry Management System', pageWidth / 2, 20, { align: 'center' });\n      \n      pdf.setFontSize(16);\n      pdf.setFont('helvetica', 'normal');\n      pdf.text('Engagement Reports & Analytics', pageWidth / 2, 30, { align: 'center' });\n      \n      // Add report metadata\n      pdf.setFontSize(10);\n      pdf.text(`Generated on: ${new Date().toLocaleDateString()}`, 20, 45);\n      pdf.text(`Report Period: ${dateRangeOptions.find(opt => opt.value === dateRange)?.label || 'Custom'}`, 20, 50);\n      pdf.text(`Engagement Type: ${engagementTypeOptions.find(opt => opt.value === engagementType)?.label}`, 20, 55);\n      if (engagementType === 'event' && selectedEvent !== 'all') {\n        const event = events.find(e => e.id.toString() === selectedEvent);\n        pdf.text(`Selected Event: ${event?.name || selectedEvent}`, 20, 60);\n      }\n      if (engagementType === 'designation' && selectedDesignation !== 'all') {\n        const designation = designations.find(d => d.id.toString() === selectedDesignation);\n        pdf.text(`Selected Designation: ${designation?.name || selectedDesignation}`, 20, 60);\n      }\n      \n      // Add key metrics summary\n      pdf.setFontSize(12);\n      pdf.setFont('helvetica', 'bold');\n      pdf.text('Executive Summary', 20, 70);\n      \n      pdf.setFontSize(10);\n      pdf.setFont('helvetica', 'normal');\n      pdf.text(`Total Engagement: ${keyMetrics.totalEngagement.toLocaleString()}`, 20, 80);\n      pdf.text(`Average Engagement Rate: ${keyMetrics.averageEngagementRate}%`, 20, 85);\n      pdf.text(`Event Participation: ${keyMetrics.eventParticipation}`, 20, 90);\n      pdf.text(`Designation Participation: ${keyMetrics.designationParticipation}`, 20, 95);\n      pdf.text(`Monthly Growth: ${keyMetrics.monthlyGrowth}%`, 20, 100);\n      \n      // Add engagement details if available\n      if (engagementDetails && engagementDetails.engagementDetails.length > 0) {\n        let yPosition = 120;\n        \n        // Check if we need a new page\n        if (yPosition > pageHeight - 50) {\n          pdf.addPage();\n          yPosition = 20;\n        }\n        \n        // Add engagement details section\n        pdf.setFontSize(14);\n        pdf.setFont('helvetica', 'bold');\n        pdf.text('Engagement Details', 20, yPosition);\n        yPosition += 10;\n        \n        // Add filter summary\n        pdf.setFontSize(10);\n        pdf.setFont('helvetica', 'normal');\n        const appliedFilters = engagementDetails.appliedFilters;\n        const activeFilters = Object.entries(appliedFilters)\n          .filter(([key, value]) => value && value !== 'all' && value !== '')\n          .map(([key, value]) => `${key}: ${value}`)\n          .join(', ');\n        \n        if (activeFilters) {\n          pdf.text(`Applied Filters: ${activeFilters}`, 20, yPosition);\n          yPosition += 8;\n        }\n        \n        pdf.text(`Total Engagement Records: ${engagementDetails.totalCount}`, 20, yPosition);\n        yPosition += 15;\n        \n        // Add engagement table headers\n        pdf.setFontSize(8);\n        pdf.setFont('helvetica', 'bold');\n        const headers = ['Type', 'Member', 'Event/Designation', 'Status', 'Date', 'Region'];\n        const colWidths = [15, 35, 40, 20, 25, 25];\n        let xPosition = 20;\n        \n        // Draw table headers\n        headers.forEach((header, index) => {\n          pdf.text(header, xPosition, yPosition);\n          xPosition += colWidths[index];\n        });\n        yPosition += 5;\n        \n        // Draw line under headers\n        pdf.line(20, yPosition, 20 + colWidths.reduce((a, b) => a + b, 0), yPosition);\n        yPosition += 3;\n        \n        // Add engagement data\n        pdf.setFont('helvetica', 'normal');\n        engagementDetails.engagementDetails.slice(0, 50).forEach((detail: { name: string; value: number }, _index: number) => {\n          // Check if we need a new page\n          if (yPosition > pageHeight - 20) {\n            pdf.addPage();\n            yPosition = 20;\n          }\n          \n          xPosition = 20;\n          const detailData = [\n            detail.type || 'N/A',\n            detail.memberName || 'N/A',\n            detail.eventName || detail.designationName || 'N/A',\n            detail.attendanceStatus || detail.status || 'N/A',\n            detail.recordedAt ? new Date(detail.recordedAt).toLocaleDateString() : \n              detail.createdAt ? new Date(detail.createdAt).toLocaleDateString() : 'N/A',\n            detail.region || 'N/A'\n          ];\n          \n          detailData.forEach((data, colIndex) => {\n            // Truncate long text\n            const truncatedData = data.length > 15 ? data.substring(0, 12) + '...' : data;\n            pdf.text(truncatedData, xPosition, yPosition);\n            xPosition += colWidths[colIndex];\n          });\n          \n          yPosition += 5;\n        });\n      }\n      \n      // Save the PDF\n      const fileName = `Engagement_Report_${engagementType}_${new Date().toISOString().split('T')[0]}.pdf`;\n      pdf.save(fileName);\n      \n    } catch (error) {\n      console.error('Error generating PDF:', error);\n      alert('Error generating PDF. Please try again.');\n    } finally {\n      setIsExporting(false);\n    }\n  };\n\n  // Show loading state\n  if (status === \"loading\") {\n    return (\n      <div className=\"flex items-center justify-center min-h-screen\">\n        <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-primary\"></div>\n      </div>\n    );\n  }\n\n  if (status === \"unauthenticated\") {\n    return (\n      <div className=\"flex items-center justify-center min-h-screen\">\n        <div className=\"text-center\">\n          <h1 className=\"text-2xl font-bold mb-4\">Redirecting...</h1>\n          <p className=\"text-muted-foreground mb-4\">Please wait while we redirect you to the login page.</p>\n        </div>\n      </div>\n    );\n  }\n\n  // Show loading state until client-side data is ready\n  if (!isClient || loading) {\n    return (\n      <div className=\"flex items-center justify-center min-h-[400px]\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600 mx-auto mb-4\"></div>\n          <p className=\"text-gray-500 dark:text-gray-400\">Loading engagement data...</p>\n          <p className=\"text-sm text-gray-400 dark:text-gray-500 mt-2\">Fetching analytics and chart data...</p>\n        </div>\n      </div>\n    );\n  }\n\n  // Show error state\n  if (error) {\n    return (\n      <div className=\"flex items-center justify-center min-h-[400px]\">\n        <div className=\"text-center\">\n          <div className=\"text-red-600 mb-4\">\n            <svg className=\"w-12 h-12 mx-auto\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z\" />\n            </svg>\n          </div>\n          <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-2\">Error Loading Data</h3>\n          <p className=\"text-gray-500 dark:text-gray-400 mb-4\">{error}</p>\n          <button \n            onClick={() => fetchEngagementAnalytics(true)}\n            className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700\"\n          >\n            Try Again\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <SidebarProvider>\n      <AppSidebar />\n      <SidebarInset>\n        <header className=\"flex h-16 shrink-0 items-center gap-2 transition-[width,height] ease-linear group-has-data-[collapsible=icon]/sidebar-wrapper:h-12\">\n          <div className=\"flex items-center gap-2 px-4\">\n            <SidebarTrigger className=\"-ml-1\" />\n            <Separator\n              orientation=\"vertical\"\n              className=\"mr-2 data-[orientation=vertical]:h-4\"\n            />\n            <Breadcrumb>\n              <BreadcrumbList>\n                <BreadcrumbItem className=\"hidden md:block\">\n                  <BreadcrumbLink href=\"/dashboard\">\n                    Dashboard\n                  </BreadcrumbLink>\n                </BreadcrumbItem>\n                <BreadcrumbSeparator className=\"hidden md:block\" />\n                <BreadcrumbItem>\n                  <BreadcrumbLink href=\"/links/reports\">\n                    Reports\n                  </BreadcrumbLink>\n                </BreadcrumbItem>\n                <BreadcrumbSeparator />\n                <BreadcrumbItem>\n                  <BreadcrumbPage>Engagement Analytics</BreadcrumbPage>\n                </BreadcrumbItem>\n              </BreadcrumbList>\n            </Breadcrumb>\n          </div>\n          <div className=\"ml-auto px-4\">\n            <LogoutButton />\n          </div>\n        </header>\n        <div className=\"flex flex-1 flex-col gap-4 p-4 pt-0\">\n          <div className=\"space-y-6\" ref={reportRef}>\n\n\n\n            {/* Filter Toggle Button */}\n            <div className=\"flex justify-between items-center\">\n              <div>\n                <h2 className=\"text-2xl font-bold text-white dark:text-white\">Engagement Analytics</h2>\n                <p className=\"text-gray-600 dark:text-gray-400\">Comprehensive engagement reports and insights</p>\n              </div>\n              <div className=\"flex items-center gap-4\">\n                <Button\n                  onClick={() => setShowFilters(!showFilters)}\n                  variant=\"outline\"\n                  className=\"flex items-center gap-2\"\n                >\n                  {showFilters ? (\n                    <>\n                      <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                      </svg>\n                      Hide Filters\n                    </>\n                  ) : (\n                    <>\n                      <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M3 4a1 1 0 011-1h16a1 1 0 011 1v2.586a1 1 0 01-.293.707l-6.414 6.414a1 1 0 00-.293.707V17l-4 4v-6.586a1 1 0 00-.293-.707L3.293 7.293A1 1 0 013 6.586V4z\" />\n                      </svg>\n                      Show Filters\n                    </>\n                  )}\n                </Button>\n                \n                {/* Export Options Dropdown */}\n                <div className=\"relative export-options-dropdown\">\n                  <Button\n                    onClick={() => setShowExportOptions(!showExportOptions)}\n                    variant=\"outline\"\n                    className=\"flex items-center gap-2\"\n                  >\n                    <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\n                    </svg>\n                    Export Options\n                    <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n                    </svg>\n                  </Button>\n                  \n                  {showExportOptions && (\n                    <div className=\"absolute right-0 mt-2 w-64 bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-lg shadow-lg z-10\">\n                      <div className=\"p-4 space-y-4\">\n                        <Button\n                          onClick={() => {\n                            setShowExportOptions(false);\n                            exportToPDF();\n                          }}\n                          disabled={isExporting}\n                          className=\"w-full flex items-center justify-center gap-2\"\n                        >\n                          {isExporting ? (\n                            <>\n                              <svg className=\"w-4 h-4 animate-spin\" fill=\"none\" viewBox=\"0 0 24 24\">\n                                <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n                                <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                              </svg>\n                              Exporting...\n                            </>\n                          ) : (\n                            <>\n                              <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\n                              </svg>\n                              Export PDF\n                            </>\n                          )}\n                        </Button>\n                      </div>\n                    </div>\n                  )}\n                </div>\n              </div>\n            </div>\n\n            {/* Professional Filters Section */}\n            {showFilters && (\n              <div className=\"space-y-6\">\n                {/* Engagement Type & Time Filters */}\n            \n\n                {/* Organizational Structure Filters */}\n                <Card>\n                  <CardHeader>\n                    <CardTitle className=\"flex items-center gap-2\">\n                      <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4\" />\n                      </svg>\n                      Organizational Structure\n                    </CardTitle>\n                  </CardHeader>\n                  <CardContent>\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n                      <div className=\"space-y-2\">\n                        <Label htmlFor=\"region\">Region</Label>\n                        <Select value={selectedRegion} onValueChange={handleRegionChange}>\n                          <SelectTrigger>\n                            <SelectValue placeholder=\"Select region\" />\n                          </SelectTrigger>\n                          <SelectContent>\n                            <SelectItem value=\"all\">All Regions</SelectItem>\n                            {regions.map((region) => (\n                              <SelectItem key={region.id} value={region.id.toString()}>\n                                {region.name}\n                              </SelectItem>\n                            ))}\n                          </SelectContent>\n                        </Select>\n                      </div>\n\n                      <div className=\"space-y-2\">\n                        <Label htmlFor=\"university\">University</Label>\n                        <Select \n                          value={selectedUniversity} \n                          onValueChange={handleUniversityChange}\n                          disabled={!selectedRegion || selectedRegion === 'all'}\n                        >\n                          <SelectTrigger>\n                            <SelectValue placeholder={selectedRegion && selectedRegion !== 'all' ? \"Select university\" : \"Select region first\"} />\n                          </SelectTrigger>\n                          <SelectContent>\n                            <SelectItem value=\"all\">All Universities</SelectItem>\n                            {universities.map((university) => (\n                              <SelectItem key={university.id} value={university.id.toString()}>\n                                {university.name}\n                              </SelectItem>\n                            ))}\n                          </SelectContent>\n                        </Select>\n                      </div>\n\n                      <div className=\"space-y-2\">\n                        <Label htmlFor=\"smallGroup\">Small Group</Label>\n                        <Select \n                          value={selectedSmallGroup} \n                          onValueChange={handleSmallGroupChange}\n                          disabled={!selectedUniversity || selectedUniversity === 'all'}\n                        >\n                          <SelectTrigger>\n                            <SelectValue placeholder={selectedUniversity && selectedUniversity !== 'all' ? \"Select small group\" : \"Select university first\"} />\n                          </SelectTrigger>\n                          <SelectContent>\n                            <SelectItem value=\"all\">All Small Groups</SelectItem>\n                            {smallGroups.map((smallGroup) => (\n                              <SelectItem key={smallGroup.id} value={smallGroup.id.toString()}>\n                                {smallGroup.name}\n                              </SelectItem>\n                            ))}\n                          </SelectContent>\n                        </Select>\n                      </div>\n\n                      <div className=\"space-y-2\">\n                        <Label htmlFor=\"alumniGroup\">Alumni Group</Label>\n                        <Select \n                          value={selectedAlumniGroup} \n                          onValueChange={handleAlumniGroupChange}\n                          disabled={!selectedRegion || selectedRegion === 'all'}\n                        >\n                          <SelectTrigger>\n                            <SelectValue placeholder={selectedRegion && selectedRegion !== 'all' ? \"Select alumni group\" : \"Select region first\"} />\n                          </SelectTrigger>\n                          <SelectContent>\n                            <SelectItem value=\"all\">All Alumni Groups</SelectItem>\n                            {alumniGroups.map((alumniGroup) => (\n                              <SelectItem key={alumniGroup.id} value={alumniGroup.id.toString()}>\n                                {alumniGroup.name}\n                              </SelectItem>\n                            ))}\n                          </SelectContent>\n                        </Select>\n                      </div>\n                    </div>\n                  </CardContent>\n                </Card>\n\n                <Card>\n                  <CardHeader>\n                    <CardTitle className=\"flex items-center gap-2\">\n                      <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\n                      </svg>\n                      Engagement Type & Time Range\n                    </CardTitle>\n                  </CardHeader>\n                  <CardContent>\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n                      <div className=\"space-y-2\">\n                        <Label htmlFor=\"engagementType\">Engagement Type</Label>\n                        <Select value={engagementType} onValueChange={setEngagementType}>\n                          <SelectTrigger>\n                            <SelectValue placeholder=\"Select engagement type\" />\n                          </SelectTrigger>\n                          <SelectContent>\n                            {engagementTypeOptions.map((option) => (\n                              <SelectItem key={option.value} value={option.value}>\n                                {option.label}\n                              </SelectItem>\n                            ))}\n                          </SelectContent>\n                        </Select>\n                      </div>\n                      \n                       {/* Dynamic select field based on engagement type */}\n                       {engagementType === 'event' && (\n                         <div className=\"space-y-2\">\n                           <Label htmlFor=\"selectedEvent\">Select Event</Label>\n                           <Select \n                             value={selectedEvent} \n                             onValueChange={handleEventChange}\n                             disabled={loadingEvents}\n                           >\n                             <SelectTrigger>\n                               <SelectValue placeholder={\n                                 loadingEvents \n                                   ? \"Loading events...\" \n                                   : selectedRegion && selectedRegion !== 'all' \n                                     ? \"Select event\" \n                                     : \"Select organizational structure first\"\n                               } />\n                             </SelectTrigger>\n                             <SelectContent>\n                               <SelectItem value=\"all\">All Events</SelectItem>\n                               {loadingEvents ? (\n                                 <SelectItem value=\"loading\" disabled>\n                                   Loading events...\n                                 </SelectItem>\n                               ) : events.length > 0 ? (\n                                 events.map((event) => (\n                                   <SelectItem key={event.id} value={event.id.toString()}>\n                                     {event.name}\n                                   </SelectItem>\n                                 ))\n                               ) : (\n                                 <SelectItem value=\"no-events\" disabled>\n                                   No events found for selected organization\n                                 </SelectItem>\n                               )}\n                             </SelectContent>\n                           </Select>\n                         </div>\n                       )}\n                       \n                       {engagementType === 'designation' && (\n                         <div className=\"space-y-2\">\n                           <Label htmlFor=\"selectedDesignation\">Select Designation</Label>\n                           <Select \n                             value={selectedDesignation} \n                             onValueChange={handleDesignationChange}\n                             disabled={loadingDesignations}\n                           >\n                             <SelectTrigger>\n                               <SelectValue placeholder={\n                                 loadingDesignations \n                                   ? \"Loading designations...\" \n                                   : selectedRegion && selectedRegion !== 'all' \n                                     ? \"Select designation\" \n                                     : \"Select organizational structure first\"\n                               } />\n                             </SelectTrigger>\n                             <SelectContent>\n                               <SelectItem value=\"all\">All Designations</SelectItem>\n                               {loadingDesignations ? (\n                                 <SelectItem value=\"loading\" disabled>\n                                   Loading designations...\n                                 </SelectItem>\n                               ) : designations.length > 0 ? (\n                                 designations.map((designation) => (\n                                   <SelectItem key={designation.id} value={designation.id.toString()}>\n                                     {designation.name}\n                                   </SelectItem>\n                                 ))\n                               ) : (\n                                 <SelectItem value=\"no-designations\" disabled>\n                                   No designations found for selected organization\n                                 </SelectItem>\n                               )}\n                             </SelectContent>\n                           </Select>\n                         </div>\n                       )}\n                      \n                      <div className=\"space-y-2\">\n                        <Label htmlFor=\"dateRange\">Time Period</Label>\n                        <Select value={dateRange} onValueChange={setDateRange}>\n                          <SelectTrigger>\n                            <SelectValue placeholder=\"Select period\" />\n                          </SelectTrigger>\n                          <SelectContent>\n                            {dateRangeOptions.map((option) => (\n                              <SelectItem key={option.value} value={option.value}>\n                                {option.label}\n                              </SelectItem>\n                            ))}\n                          </SelectContent>\n                        </Select>\n                      </div>\n                      <div className=\"space-y-2\">\n                        <Label htmlFor=\"dateFrom\">From Date</Label>\n                        <Input\n                          type=\"date\"\n                          value={dateFrom}\n                          onChange={(e) => setDateFrom(e.target.value)}\n                        />\n                      </div>\n                    </div>\n                  </CardContent>\n                </Card>\n\n                {/* Filter Actions */}\n                <div className=\"flex justify-between items-center\">\n                  <div className=\"text-sm text-gray-500 dark:text-gray-400\">\n                    Use filters to generate specific engagement reports for different audiences\n                  </div>\n                  <Button\n                    onClick={() => {\n                      setDateRange('6months');\n                      setSelectedRegion('all');\n                      setSelectedUniversity('all');\n                      setSelectedSmallGroup('all');\n                      setSelectedAlumniGroup('all');\n                      setDateFrom('');\n                      setDateTo('');\n                      setEngagementType('event');\n                      setSelectedEvent('all');\n                      setSelectedDesignation('all');\n                    }}\n                    variant=\"outline\"\n                    className=\"flex items-center gap-2\"\n                  >\n                    <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\" />\n                    </svg>\n                    Reset All Filters\n                  </Button>\n                </div>\n              </div>\n            )}\n\n            {/* Key Metrics */}\n            <div className={`grid grid-cols-1 md:grid-cols-2 gap-6 ${!engagementType ? 'lg:grid-cols-5' : 'lg:grid-cols-3'}`}>\n              <Card>\n                <CardContent className=\"p-6\">\n                  <div className=\"flex items-center justify-between\">\n                    <div>\n                      <p className=\"text-2xl font-bold text-blue-600 dark:text-blue-400\">{keyMetrics.totalEngagement.toLocaleString()}</p>\n                      <p className=\"text-sm text-blue-500 dark:text-blue-300\">\n                        {keyMetrics.monthlyGrowth > 0 ? '+' : ''}{keyMetrics.monthlyGrowth}% from last period\n                      </p>\n                    </div>\n                    <div className=\"p-3 bg-blue-100 dark:bg-blue-900 rounded-full\">\n                      <UsersIcon className=\"w-6 h-6 text-blue-600 dark:text-blue-400\" />\n                    </div>\n                  </div>\n                  <p className=\"text-sm font-medium text-blue-700 dark:text-blue-200 mt-2\">Total Engagement</p>\n                </CardContent>\n              </Card>\n\n              <Card>\n                <CardContent className=\"p-6\">\n                  <div className=\"flex items-center justify-between\">\n                    <div>\n                      <p className=\"text-2xl font-bold text-green-600 dark:text-green-400\">{keyMetrics.averageEngagementRate}%</p>\n                      <p className=\"text-sm text-green-500 dark:text-green-300\">Average rate</p>\n                    </div>\n                    <div className=\"p-3 bg-green-100 dark:bg-green-900 rounded-full\">\n                      <TrendingUpIcon className=\"w-6 h-6 text-green-600 dark:text-green-400\" />\n                    </div>\n                  </div>\n                  <p className=\"text-sm font-medium text-green-700 dark:text-green-200 mt-2\">Engagement Rate</p>\n                </CardContent>\n              </Card>\n\n              {/* Show Event Participation only if Events selected or no type selected */}\n              {(!engagementType || engagementType === 'event') && (\n                <Card>\n                  <CardContent className=\"p-6\">\n                    <div className=\"flex items-center justify-between\">\n                      <div>\n                        <p className=\"text-2xl font-bold text-purple-600 dark:text-purple-400\">{keyMetrics.eventParticipation}</p>\n                        <p className=\"text-sm text-purple-500 dark:text-purple-300\">Event participation</p>\n                      </div>\n                      <div className=\"p-3 bg-purple-100 dark:bg-purple-900 rounded-full\">\n                        <CalendarIcon className=\"w-6 h-6 text-purple-600 dark:text-purple-400\" />\n                      </div>\n                    </div>\n                    <p className=\"text-sm font-medium text-purple-700 dark:text-purple-200 mt-2\">Event Participation</p>\n                  </CardContent>\n                </Card>\n              )}\n\n              {/* Show Designation Participation only if Designations selected or no type selected */}\n              {(!engagementType || engagementType === 'designation') && (\n                <Card>\n                  <CardContent className=\"p-6\">\n                    <div className=\"flex items-center justify-between\">\n                      <div>\n                        <p className=\"text-2xl font-bold text-yellow-600 dark:text-yellow-400\">{keyMetrics.designationParticipation}</p>\n                        <p className=\"text-sm text-yellow-500 dark:text-yellow-300\">Designation participation</p>\n                      </div>\n                      <div className=\"p-3 bg-yellow-100 dark:bg-yellow-900 rounded-full\">\n                        <AwardIcon className=\"w-6 h-6 text-yellow-600 dark:text-yellow-400\" />\n                      </div>\n                    </div>\n                    <p className=\"text-sm font-medium text-yellow-700 dark:text-yellow-200 mt-2\">Designation Participation</p>\n                  </CardContent>\n                </Card>\n              )}\n\n              <Card>\n                <CardContent className=\"p-6\">\n                  <div className=\"flex items-center justify-between\">\n                    <div>\n                      <p className=\"text-2xl font-bold text-indigo-600 dark:text-indigo-400\">{keyMetrics.monthlyGrowth}%</p>\n                      <p className=\"text-sm text-indigo-500 dark:text-indigo-300\">Monthly growth</p>\n                    </div>\n                    <div className=\"p-3 bg-indigo-100 dark:bg-indigo-900 rounded-full\">\n                      <TrendingUpIcon className=\"w-6 h-6 text-indigo-600 dark:text-indigo-400\" />\n                    </div>\n                  </div>\n                  <p className=\"text-sm font-medium text-indigo-700 dark:text-indigo-200 mt-2\">Growth Rate</p>\n                </CardContent>\n              </Card>\n            </div>\n\n            {/* Charts Row 1 - Engagement Trends */}\n            <div className={`grid grid-cols-1 gap-6 ${!engagementType ? 'lg:grid-cols-2' : 'lg:grid-cols-1'}`}>\n              <Card>\n                <CardHeader>\n                  <CardTitle>\n                    {engagementType === 'event' ? 'Event Attendance Trends' : \n                     engagementType === 'designation' ? 'Designation Participation Trends' : \n                     'Engagement Trends Over Time'}\n                  </CardTitle>\n                  <p className=\"text-sm text-gray-600 dark:text-gray-400\">\n                    {engagementType === 'event' ? 'Monthly event attendance patterns' : \n                     engagementType === 'designation' ? 'Monthly designation participation patterns' : \n                     'Monthly engagement patterns for events and designations'}\n                  </p>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"h-80\">\n                    <ResponsiveContainer width=\"100%\" height=\"100%\">\n                      <AreaChart data={chartData.engagementTrends}>\n                        <CartesianGrid strokeDasharray=\"3 3\" />\n                        <XAxis dataKey=\"month\" />\n                        <YAxis />\n                        <Tooltip />\n                        {(!engagementType || engagementType === 'event') && (\n                          <Area \n                            type=\"monotone\" \n                            dataKey=\"eventAttendance\" \n                            stackId=\"1\" \n                            stroke=\"#3B82F6\" \n                            fill=\"#3B82F6\" \n                            fillOpacity={0.6}\n                            name=\"Event Attendance\"\n                          />\n                        )}\n                        {(!engagementType || engagementType === 'designation') && (\n                          <Area \n                            type=\"monotone\" \n                            dataKey=\"designationParticipation\" \n                            stackId=\"2\" \n                            stroke=\"#10B981\" \n                            fill=\"#10B981\" \n                            fillOpacity={0.6}\n                            name=\"Designation Participation\"\n                          />\n                        )}\n                      </AreaChart>\n                    </ResponsiveContainer>\n                  </div>\n                </CardContent>\n              </Card>\n\n              {/* Show Engagement Type Distribution only if no specific type selected */}\n              {!engagementType && (\n                <Card>\n                  <CardHeader>\n                    <CardTitle>Engagement Type Distribution</CardTitle>\n                    <p className=\"text-sm text-gray-600 dark:text-gray-400\">Breakdown of engagement by type</p>\n                  </CardHeader>\n                  <CardContent>\n                    <div className=\"h-80\">\n                      <ResponsiveContainer width=\"100%\" height=\"100%\">\n                        <PieChart>\n                          <Pie\n                            data={chartData.engagementTypeDistribution}\n                            cx=\"50%\"\n                            cy=\"50%\"\n                            labelLine={false}\n                            label={({ name, percent }: { name: string; percent?: number }) => `${name} ${((percent || 0) * 100).toFixed(0)}%`}\n                            outerRadius={80}\n                            fill=\"#8884d8\"\n                            dataKey=\"value\"\n                          >\n                            {chartData.engagementTypeDistribution.map((entry: { name: string; value: number }, index: number) => (\n                              <Cell key={`cell-${index}`} fill={entry.color} />\n                            ))}\n                          </Pie>\n                          <Tooltip />\n                        </PieChart>\n                      </ResponsiveContainer>\n                    </div>\n                  </CardContent>\n                </Card>\n              )}\n            </div>\n\n            {/* Charts Row 2 - Regional Analysis */}\n            <div className={`grid grid-cols-1 gap-6 ${!engagementType ? 'lg:grid-cols-2' : 'lg:grid-cols-1'}`}>\n              <Card>\n                <CardHeader>\n                  <CardTitle>\n                    {selectedRegion && selectedRegion !== 'all' ? \n                      (engagementType === 'event' ? 'University Event Attendance Comparison' : \n                       engagementType === 'designation' ? 'University Designation Participation Comparison' : \n                       'University Engagement Comparison') :\n                    selectedUniversity && selectedUniversity !== 'all' ?\n                      (engagementType === 'event' ? 'Small Group Event Attendance Comparison' : \n                       engagementType === 'designation' ? 'Small Group Designation Participation Comparison' : \n                       'Small Group Engagement Comparison') :\n                    (engagementType === 'event' ? 'Regional Event Attendance' : \n                     engagementType === 'designation' ? 'Regional Designation Participation' : \n                     'Regional Engagement Analysis')}\n                  </CardTitle>\n                  <p className=\"text-sm text-gray-600 dark:text-gray-400\">\n                    {selectedRegion && selectedRegion !== 'all' ? \n                      (engagementType === 'event' ? 'Event attendance levels across universities in the selected region' : \n                       engagementType === 'designation' ? 'Designation participation levels across universities in the selected region' : \n                       'Engagement levels across universities in the selected region') :\n                    selectedUniversity && selectedUniversity !== 'all' ?\n                      (engagementType === 'event' ? 'Event attendance levels across small groups in the selected university' : \n                       engagementType === 'designation' ? 'Designation participation levels across small groups in the selected university' : \n                       'Engagement levels across small groups in the selected university') :\n                    (engagementType === 'event' ? 'Event attendance levels across different regions' : \n                     engagementType === 'designation' ? 'Designation participation levels across different regions' : \n                     'Engagement levels across different regions')}\n                  </p>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"h-80\">\n                    <ResponsiveContainer width=\"100%\" height=\"100%\">\n                      <BarChart data={chartData.regionalEngagement}>\n                        <CartesianGrid strokeDasharray=\"3 3\" />\n                        <XAxis \n                          dataKey=\"region\" \n                          tick={{ fontSize: 12 }}\n                          angle={selectedRegion && selectedRegion !== 'all' || selectedUniversity && selectedUniversity !== 'all' ? -45 : 0}\n                          textAnchor={selectedRegion && selectedRegion !== 'all' || selectedUniversity && selectedUniversity !== 'all' ? 'end' : 'middle'}\n                          height={selectedRegion && selectedRegion !== 'all' || selectedUniversity && selectedUniversity !== 'all' ? 80 : 60}\n                        />\n                        <YAxis />\n                        <Tooltip />\n                        {(!engagementType || engagementType === 'event') && (\n                          <Bar dataKey=\"eventEngagement\" fill=\"#3B82F6\" name=\"Event Engagement\" />\n                        )}\n                        {(!engagementType || engagementType === 'designation') && (\n                          <Bar dataKey=\"designationEngagement\" fill=\"#10B981\" name=\"Designation Engagement\" />\n                        )}\n                        {!engagementType && (\n                          <Bar dataKey=\"totalEngagement\" fill=\"#8B5CF6\" name=\"Total Engagement\" />\n                        )}\n                      </BarChart>\n                    </ResponsiveContainer>\n                  </div>\n                </CardContent>\n              </Card>\n\n              {/* Show Engagement Rate Trends only if no specific type selected */}\n              {!engagementType && (\n                <Card>\n                  <CardHeader>\n                    <CardTitle>Engagement Rate Trends</CardTitle>\n                    <p className=\"text-sm text-gray-600 dark:text-gray-400\">Monthly engagement rate progression</p>\n                  </CardHeader>\n                  <CardContent>\n                    <div className=\"h-80\">\n                      <ResponsiveContainer width=\"100%\" height=\"100%\">\n                        <LineChart data={chartData.engagementTrends}>\n                          <CartesianGrid strokeDasharray=\"3 3\" />\n                          <XAxis dataKey=\"month\" />\n                          <YAxis />\n                          <Tooltip />\n                          <Line \n                            type=\"monotone\" \n                            dataKey=\"engagementRate\" \n                            stroke=\"#F59E0B\" \n                            strokeWidth={3}\n                            name=\"Engagement Rate %\"\n                          />\n                        </LineChart>\n                      </ResponsiveContainer>\n                    </div>\n                  </CardContent>\n                </Card>\n              )}\n            </div>\n\n            {/* Charts Row 3 - Engagement Levels */}\n            <div className={`grid grid-cols-1 gap-6 ${!engagementType ? 'lg:grid-cols-2' : 'lg:grid-cols-1'}`}>\n              <Card>\n                <CardHeader>\n                  <CardTitle>\n                    {engagementType === 'event' ? 'Event Engagement Levels' : \n                     engagementType === 'designation' ? 'Designation Engagement Levels' : \n                     'Engagement Levels'}\n                  </CardTitle>\n                  <p className=\"text-sm text-gray-600 dark:text-gray-400\">\n                    {engagementType === 'event' ? 'Distribution of event engagement intensity levels' : \n                     engagementType === 'designation' ? 'Distribution of designation engagement intensity levels' : \n                     'Distribution of engagement intensity levels'}\n                  </p>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"h-80\">\n                    <ResponsiveContainer width=\"100%\" height=\"100%\">\n                      <PieChart>\n                        <Pie\n                          data={chartData.eventEngagementLevels}\n                          cx=\"50%\"\n                          cy=\"50%\"\n                          labelLine={false}\n                          label={({ name, percent }: { name: string; percent?: number }) => `${name} ${((percent || 0) * 100).toFixed(0)}%`}\n                          outerRadius={80}\n                          fill=\"#8884d8\"\n                          dataKey=\"value\"\n                        >\n                          {chartData.eventEngagementLevels.map((entry: { name: string; value: number }, index: number) => (\n                            <Cell key={`cell-${index}`} fill={entry.color} />\n                          ))}\n                        </Pie>\n                        <Tooltip />\n                      </PieChart>\n                    </ResponsiveContainer>\n                  </div>\n                </CardContent>\n              </Card>\n\n              {/* Show Regional Engagement Rates only if no specific type selected */}\n              {!engagementType && (\n                <Card>\n                  <CardHeader>\n                    <CardTitle>\n                      {selectedRegion && selectedRegion !== 'all' ? 'University Engagement Rates' : \n                       selectedUniversity && selectedUniversity !== 'all' ? 'Small Group Engagement Rates' : \n                       'Regional Engagement Rates'}\n                    </CardTitle>\n                    <p className=\"text-sm text-gray-600 dark:text-gray-400\">\n                      {selectedRegion && selectedRegion !== 'all' ? 'Engagement rates by university in the selected region' : \n                       selectedUniversity && selectedUniversity !== 'all' ? 'Engagement rates by small group in the selected university' : \n                       'Engagement rates by region'}\n                    </p>\n                  </CardHeader>\n                  <CardContent>\n                    <div className=\"h-80\">\n                      <ResponsiveContainer width=\"100%\" height=\"100%\">\n                        <BarChart data={chartData.regionalEngagement}>\n                          <CartesianGrid strokeDasharray=\"3 3\" />\n                          <XAxis \n                            dataKey=\"region\" \n                            tick={{ fontSize: 12 }}\n                            angle={selectedRegion && selectedRegion !== 'all' || selectedUniversity && selectedUniversity !== 'all' ? -45 : 0}\n                            textAnchor={selectedRegion && selectedRegion !== 'all' || selectedUniversity && selectedUniversity !== 'all' ? 'end' : 'middle'}\n                            height={selectedRegion && selectedRegion !== 'all' || selectedUniversity && selectedUniversity !== 'all' ? 80 : 60}\n                          />\n                          <YAxis />\n                          <Tooltip />\n                          <Bar dataKey=\"engagementRate\" fill=\"#EC4899\" name=\"Engagement Rate %\" />\n                        </BarChart>\n                      </ResponsiveContainer>\n                    </div>\n                  </CardContent>\n                </Card>\n              )}\n            </div>\n\n          </div>\n        </div>\n      </SidebarInset>\n    </SidebarProvider>\n  );\n}","import * as React from 'react';\nimport { forwardRef } from 'react';\nimport { arrayTooltipSearcher } from '../state/optionsSlice';\nimport { CartesianChart } from './CartesianChart';\nvar allowedTooltipTypes = ['axis'];\nexport var LineChart = /*#__PURE__*/forwardRef((props, ref) => {\n  return /*#__PURE__*/React.createElement(CartesianChart, {\n    chartName: \"LineChart\",\n    defaultTooltipEventType: \"axis\",\n    validateTooltipEventTypes: allowedTooltipTypes,\n    tooltipPayloadSearcher: arrayTooltipSearcher,\n    categoricalChartProps: props,\n    ref: ref\n  });\n});","var _excluded = [\"id\"],\n  _excluded2 = [\"type\", \"layout\", \"connectNulls\", \"needClip\"],\n  _excluded3 = [\"activeDot\", \"animateNewValues\", \"animationBegin\", \"animationDuration\", \"animationEasing\", \"connectNulls\", \"dot\", \"hide\", \"isAnimationActive\", \"label\", \"legendType\", \"xAxisId\", \"yAxisId\", \"id\"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == typeof i ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != typeof i) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var n = Object.getOwnPropertySymbols(e); for (r = 0; r < n.length; r++) o = n[r], -1 === t.indexOf(o) && {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (-1 !== e.indexOf(n)) continue; t[n] = r[n]; } return t; }\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from 'react';\nimport { Component, useCallback, useMemo, useRef, useState } from 'react';\nimport { clsx } from 'clsx';\nimport { Curve } from '../shape/Curve';\nimport { Dot } from '../shape/Dot';\nimport { Layer } from '../container/Layer';\nimport { CartesianLabelListContextProvider, LabelListFromLabelProp } from '../component/LabelList';\nimport { interpolate, isNullish } from '../util/DataUtils';\nimport { filterProps, isClipDot } from '../util/ReactUtils';\nimport { Global } from '../util/Global';\nimport { getCateCoordinateOfLine, getTooltipNameProp, getValueByDataKey } from '../util/ChartUtils';\nimport { ActivePoints } from '../component/ActivePoints';\nimport { SetTooltipEntrySettings } from '../state/SetTooltipEntrySettings';\nimport { SetErrorBarContext } from '../context/ErrorBarContext';\nimport { GraphicalItemClipPath, useNeedsClip } from './GraphicalItemClipPath';\nimport { useChartLayout } from '../context/chartLayoutContext';\nimport { useIsPanorama } from '../context/PanoramaContext';\nimport { selectLinePoints } from '../state/selectors/lineSelectors';\nimport { useAppSelector } from '../state/hooks';\nimport { SetLegendPayload } from '../state/SetLegendPayload';\nimport { useAnimationId } from '../util/useAnimationId';\nimport { resolveDefaultProps } from '../util/resolveDefaultProps';\nimport { usePlotArea } from '../hooks';\nimport { RegisterGraphicalItemId } from '../context/RegisterGraphicalItemId';\nimport { SetCartesianGraphicalItem } from '../state/SetGraphicalItem';\nimport { svgPropertiesNoEvents } from '../util/svgPropertiesNoEvents';\nimport { JavascriptAnimate } from '../animation/JavascriptAnimate';\n\n/**\n * Internal props, combination of external props + defaultProps + private Recharts state\n */\n\n/**\n * External props, intended for end users to fill in\n */\n\n/**\n * Because of naming conflict, we are forced to ignore certain (valid) SVG attributes.\n */\n\nvar computeLegendPayloadFromAreaData = props => {\n  var {\n    dataKey,\n    name,\n    stroke,\n    legendType,\n    hide\n  } = props;\n  return [{\n    inactive: hide,\n    dataKey,\n    type: legendType,\n    color: stroke,\n    value: getTooltipNameProp(name, dataKey),\n    payload: props\n  }];\n};\nfunction getTooltipEntrySettings(props) {\n  var {\n    dataKey,\n    data,\n    stroke,\n    strokeWidth,\n    fill,\n    name,\n    hide,\n    unit\n  } = props;\n  return {\n    dataDefinedOnItem: data,\n    positions: undefined,\n    settings: {\n      stroke,\n      strokeWidth,\n      fill,\n      dataKey,\n      nameKey: undefined,\n      name: getTooltipNameProp(name, dataKey),\n      hide,\n      type: props.tooltipType,\n      color: props.stroke,\n      unit\n    }\n  };\n}\nvar generateSimpleStrokeDasharray = (totalLength, length) => {\n  return \"\".concat(length, \"px \").concat(totalLength - length, \"px\");\n};\nfunction repeat(lines, count) {\n  var linesUnit = lines.length % 2 !== 0 ? [...lines, 0] : lines;\n  var result = [];\n  for (var i = 0; i < count; ++i) {\n    result = [...result, ...linesUnit];\n  }\n  return result;\n}\nvar getStrokeDasharray = (length, totalLength, lines) => {\n  var lineLength = lines.reduce((pre, next) => pre + next);\n\n  // if lineLength is 0 return the default when no strokeDasharray is provided\n  if (!lineLength) {\n    return generateSimpleStrokeDasharray(totalLength, length);\n  }\n  var count = Math.floor(length / lineLength);\n  var remainLength = length % lineLength;\n  var restLength = totalLength - length;\n  var remainLines = [];\n  for (var i = 0, sum = 0; i < lines.length; sum += lines[i], ++i) {\n    if (sum + lines[i] > remainLength) {\n      remainLines = [...lines.slice(0, i), remainLength - sum];\n      break;\n    }\n  }\n  var emptyLines = remainLines.length % 2 === 0 ? [0, restLength] : [restLength];\n  return [...repeat(lines, count), ...remainLines, ...emptyLines].map(line => \"\".concat(line, \"px\")).join(', ');\n};\nfunction renderDotItem(option, props) {\n  var dotItem;\n  if (/*#__PURE__*/React.isValidElement(option)) {\n    dotItem = /*#__PURE__*/React.cloneElement(option, props);\n  } else if (typeof option === 'function') {\n    dotItem = option(props);\n  } else {\n    var className = clsx('recharts-line-dot', typeof option !== 'boolean' ? option.className : '');\n    dotItem = /*#__PURE__*/React.createElement(Dot, _extends({}, props, {\n      className: className\n    }));\n  }\n  return dotItem;\n}\nfunction shouldRenderDots(points, dot) {\n  if (points == null) {\n    return false;\n  }\n  if (dot) {\n    return true;\n  }\n  return points.length === 1;\n}\nfunction Dots(_ref) {\n  var {\n    clipPathId,\n    points,\n    props\n  } = _ref;\n  var {\n    dot,\n    dataKey,\n    needClip\n  } = props;\n  if (!shouldRenderDots(points, dot)) {\n    return null;\n  }\n\n  /*\n   * Exclude ID from the props passed to the Dots component\n   * because then the ID would be applied to multiple dots and it would no longer be unique.\n   */\n  var {\n      id\n    } = props,\n    propsWithoutId = _objectWithoutProperties(props, _excluded);\n  var clipDot = isClipDot(dot);\n  var lineProps = svgPropertiesNoEvents(propsWithoutId);\n  var customDotProps = filterProps(dot, true);\n  var dots = points.map((entry, i) => {\n    var dotProps = _objectSpread(_objectSpread(_objectSpread({\n      key: \"dot-\".concat(i),\n      r: 3\n    }, lineProps), customDotProps), {}, {\n      index: i,\n      cx: entry.x,\n      cy: entry.y,\n      dataKey,\n      value: entry.value,\n      payload: entry.payload,\n      points\n    });\n    return renderDotItem(dot, dotProps);\n  });\n  var dotsProps = {\n    clipPath: needClip ? \"url(#clipPath-\".concat(clipDot ? '' : 'dots-').concat(clipPathId, \")\") : undefined\n  };\n  return /*#__PURE__*/React.createElement(Layer, _extends({\n    className: \"recharts-line-dots\",\n    key: \"dots\"\n  }, dotsProps), dots);\n}\nfunction LineLabelListProvider(_ref2) {\n  var {\n    showLabels,\n    children,\n    points\n  } = _ref2;\n  var labelListEntries = useMemo(() => {\n    return points === null || points === void 0 ? void 0 : points.map(point => {\n      var viewBox = {\n        x: point.x,\n        y: point.y,\n        width: 0,\n        height: 0\n      };\n      return _objectSpread(_objectSpread({}, viewBox), {}, {\n        value: point.value,\n        payload: point.payload,\n        viewBox,\n        /*\n         * Line is not passing parentViewBox to the LabelList so the labels can escape - looks like a bug, should we pass parentViewBox?\n         * Or should this just be the root chart viewBox?\n         */\n        parentViewBox: undefined,\n        fill: undefined\n      });\n    });\n  }, [points]);\n  return /*#__PURE__*/React.createElement(CartesianLabelListContextProvider, {\n    value: showLabels ? labelListEntries : null\n  }, children);\n}\nfunction StaticCurve(_ref3) {\n  var {\n    clipPathId,\n    pathRef,\n    points,\n    strokeDasharray,\n    props\n  } = _ref3;\n  var {\n      type,\n      layout,\n      connectNulls,\n      needClip\n    } = props,\n    others = _objectWithoutProperties(props, _excluded2);\n  var curveProps = _objectSpread(_objectSpread({}, filterProps(others, true)), {}, {\n    fill: 'none',\n    className: 'recharts-line-curve',\n    clipPath: needClip ? \"url(#clipPath-\".concat(clipPathId, \")\") : undefined,\n    points,\n    type,\n    layout,\n    connectNulls,\n    strokeDasharray: strokeDasharray !== null && strokeDasharray !== void 0 ? strokeDasharray : props.strokeDasharray\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, (points === null || points === void 0 ? void 0 : points.length) > 1 && /*#__PURE__*/React.createElement(Curve, _extends({}, curveProps, {\n    pathRef: pathRef\n  })), /*#__PURE__*/React.createElement(Dots, {\n    points: points,\n    clipPathId: clipPathId,\n    props: props\n  }));\n}\nfunction getTotalLength(mainCurve) {\n  try {\n    return mainCurve && mainCurve.getTotalLength && mainCurve.getTotalLength() || 0;\n  } catch (_unused) {\n    return 0;\n  }\n}\nfunction CurveWithAnimation(_ref4) {\n  var {\n    clipPathId,\n    props,\n    pathRef,\n    previousPointsRef,\n    longestAnimatedLengthRef\n  } = _ref4;\n  var {\n    points,\n    strokeDasharray,\n    isAnimationActive,\n    animationBegin,\n    animationDuration,\n    animationEasing,\n    animateNewValues,\n    width,\n    height,\n    onAnimationEnd,\n    onAnimationStart\n  } = props;\n  var prevPoints = previousPointsRef.current;\n  var animationId = useAnimationId(props, 'recharts-line-');\n  var [isAnimating, setIsAnimating] = useState(false);\n  var showLabels = !isAnimating;\n  var handleAnimationEnd = useCallback(() => {\n    if (typeof onAnimationEnd === 'function') {\n      onAnimationEnd();\n    }\n    setIsAnimating(false);\n  }, [onAnimationEnd]);\n  var handleAnimationStart = useCallback(() => {\n    if (typeof onAnimationStart === 'function') {\n      onAnimationStart();\n    }\n    setIsAnimating(true);\n  }, [onAnimationStart]);\n  var totalLength = getTotalLength(pathRef.current);\n  /*\n   * Here we want to detect if the length animation has been interrupted.\n   * For that we keep a reference to the furthest length that has been animated.\n   *\n   * And then, to keep things smooth, we add to it the current length that is being animated right now.\n   *\n   * If we did Math.max then it makes the length animation \"pause\" but we want to keep it smooth\n   * so in case we have some \"leftover\" length from the previous animation we add it to the current length.\n   *\n   * This is not perfect because the animation changes speed due to easing. The default easing is 'ease' which is not linear\n   * and makes it stand out. But it's good enough I suppose.\n   * If we want to fix it then we need to keep track of multiple animations and their easing and timings.\n   *\n   * If you want to see this in action, try to change the dataKey of the line chart while the initial animation is running.\n   * The Line begins with zero length and slowly grows to the full length. While this growth is in progress,\n   * change the dataKey and the Line will continue growing from where it has grown so far.\n   */\n  var startingPoint = longestAnimatedLengthRef.current;\n  return /*#__PURE__*/React.createElement(LineLabelListProvider, {\n    points: points,\n    showLabels: showLabels\n  }, props.children, /*#__PURE__*/React.createElement(JavascriptAnimate, {\n    animationId: animationId,\n    begin: animationBegin,\n    duration: animationDuration,\n    isActive: isAnimationActive,\n    easing: animationEasing,\n    onAnimationEnd: handleAnimationEnd,\n    onAnimationStart: handleAnimationStart,\n    key: animationId\n  }, t => {\n    var lengthInterpolated = interpolate(startingPoint, totalLength + startingPoint, t);\n    var curLength = Math.min(lengthInterpolated, totalLength);\n    var currentStrokeDasharray;\n    if (isAnimationActive) {\n      if (strokeDasharray) {\n        var lines = \"\".concat(strokeDasharray).split(/[,\\s]+/gim).map(num => parseFloat(num));\n        currentStrokeDasharray = getStrokeDasharray(curLength, totalLength, lines);\n      } else {\n        currentStrokeDasharray = generateSimpleStrokeDasharray(totalLength, curLength);\n      }\n    } else {\n      currentStrokeDasharray = strokeDasharray == null ? undefined : String(strokeDasharray);\n    }\n    if (prevPoints) {\n      var prevPointsDiffFactor = prevPoints.length / points.length;\n      var stepData = t === 1 ? points : points.map((entry, index) => {\n        var prevPointIndex = Math.floor(index * prevPointsDiffFactor);\n        if (prevPoints[prevPointIndex]) {\n          var prev = prevPoints[prevPointIndex];\n          return _objectSpread(_objectSpread({}, entry), {}, {\n            x: interpolate(prev.x, entry.x, t),\n            y: interpolate(prev.y, entry.y, t)\n          });\n        }\n\n        // magic number of faking previous x and y location\n        if (animateNewValues) {\n          return _objectSpread(_objectSpread({}, entry), {}, {\n            x: interpolate(width * 2, entry.x, t),\n            y: interpolate(height / 2, entry.y, t)\n          });\n        }\n        return _objectSpread(_objectSpread({}, entry), {}, {\n          x: entry.x,\n          y: entry.y\n        });\n      });\n      // eslint-disable-next-line no-param-reassign\n      previousPointsRef.current = stepData;\n      return /*#__PURE__*/React.createElement(StaticCurve, {\n        props: props,\n        points: stepData,\n        clipPathId: clipPathId,\n        pathRef: pathRef,\n        strokeDasharray: currentStrokeDasharray\n      });\n    }\n\n    /*\n     * Here it is important to wait a little bit with updating the previousPointsRef\n     * before the animation has a time to initialize.\n     * If we set the previous pointsRef immediately, we set it before the Legend height it calculated\n     * and before pathRef is set.\n     * If that happens, the Line will re-render again after Legend had reported its height\n     * which will start a new animation with the previous points as the starting point\n     * which gives the effect of the Line animating slightly upwards (where the animation distance equals the Legend height).\n     * Waiting for t > 0 is indirect but good enough to ensure that the Legend height is calculated and animation works properly.\n     *\n     * Total length similarly is calculated from the pathRef. We should not update the previousPointsRef\n     * before the pathRef is set, otherwise we will have a wrong total length.\n     */\n    if (t > 0 && totalLength > 0) {\n      // eslint-disable-next-line no-param-reassign\n      previousPointsRef.current = points;\n      /*\n       * totalLength is set from a ref and is not updated in the first tick of the animation.\n       * It defaults to zero which is exactly what we want here because we want to grow from zero,\n       * however the same happens when the data change.\n       *\n       * In that case we want to remember the previous length and continue from there, and only animate the shape.\n       *\n       * Therefore the totalLength > 0 check.\n       *\n       * The Animate is about to fire handleAnimationStart which will update the state\n       * and cause a re-render and read a new proper totalLength which will be used in the next tick\n       * and update the longestAnimatedLengthRef.\n       */\n      // eslint-disable-next-line no-param-reassign\n      longestAnimatedLengthRef.current = curLength;\n    }\n    return /*#__PURE__*/React.createElement(StaticCurve, {\n      props: props,\n      points: points,\n      clipPathId: clipPathId,\n      pathRef: pathRef,\n      strokeDasharray: currentStrokeDasharray\n    });\n  }), /*#__PURE__*/React.createElement(LabelListFromLabelProp, {\n    label: props.label\n  }));\n}\nfunction RenderCurve(_ref5) {\n  var {\n    clipPathId,\n    props\n  } = _ref5;\n  var previousPointsRef = useRef(null);\n  var longestAnimatedLengthRef = useRef(0);\n  var pathRef = useRef(null);\n  return /*#__PURE__*/React.createElement(CurveWithAnimation, {\n    props: props,\n    clipPathId: clipPathId,\n    previousPointsRef: previousPointsRef,\n    longestAnimatedLengthRef: longestAnimatedLengthRef,\n    pathRef: pathRef\n  });\n}\nvar errorBarDataPointFormatter = (dataPoint, dataKey) => {\n  return {\n    x: dataPoint.x,\n    y: dataPoint.y,\n    value: dataPoint.value,\n    // @ts-expect-error getValueByDataKey does not validate the output type\n    errorVal: getValueByDataKey(dataPoint.payload, dataKey)\n  };\n};\n\n// eslint-disable-next-line react/prefer-stateless-function\nclass LineWithState extends Component {\n  render() {\n    var _filterProps;\n    var {\n      hide,\n      dot,\n      points,\n      className,\n      xAxisId,\n      yAxisId,\n      top,\n      left,\n      width,\n      height,\n      id,\n      needClip\n    } = this.props;\n    if (hide) {\n      return null;\n    }\n    var layerClass = clsx('recharts-line', className);\n    var clipPathId = id;\n    var {\n      r = 3,\n      strokeWidth = 2\n    } = (_filterProps = filterProps(dot, false)) !== null && _filterProps !== void 0 ? _filterProps : {\n      r: 3,\n      strokeWidth: 2\n    };\n    var clipDot = isClipDot(dot);\n    var dotSize = r * 2 + strokeWidth;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Layer, {\n      className: layerClass\n    }, needClip && /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(GraphicalItemClipPath, {\n      clipPathId: clipPathId,\n      xAxisId: xAxisId,\n      yAxisId: yAxisId\n    }), !clipDot && /*#__PURE__*/React.createElement(\"clipPath\", {\n      id: \"clipPath-dots-\".concat(clipPathId)\n    }, /*#__PURE__*/React.createElement(\"rect\", {\n      x: left - dotSize / 2,\n      y: top - dotSize / 2,\n      width: width + dotSize,\n      height: height + dotSize\n    }))), /*#__PURE__*/React.createElement(SetErrorBarContext, {\n      xAxisId: xAxisId,\n      yAxisId: yAxisId,\n      data: points,\n      dataPointFormatter: errorBarDataPointFormatter,\n      errorBarOffset: 0\n    }, /*#__PURE__*/React.createElement(RenderCurve, {\n      props: this.props,\n      clipPathId: clipPathId\n    }))), /*#__PURE__*/React.createElement(ActivePoints, {\n      activeDot: this.props.activeDot,\n      points: points,\n      mainColor: this.props.stroke,\n      itemDataKey: this.props.dataKey\n    }));\n  }\n}\nvar defaultLineProps = {\n  activeDot: true,\n  animateNewValues: true,\n  animationBegin: 0,\n  animationDuration: 1500,\n  animationEasing: 'ease',\n  connectNulls: false,\n  dot: true,\n  fill: '#fff',\n  hide: false,\n  isAnimationActive: !Global.isSsr,\n  label: false,\n  legendType: 'line',\n  stroke: '#3182bd',\n  strokeWidth: 1,\n  xAxisId: 0,\n  yAxisId: 0\n};\nfunction LineImpl(props) {\n  var _resolveDefaultProps = resolveDefaultProps(props, defaultLineProps),\n    {\n      activeDot,\n      animateNewValues,\n      animationBegin,\n      animationDuration,\n      animationEasing,\n      connectNulls,\n      dot,\n      hide,\n      isAnimationActive,\n      label,\n      legendType,\n      xAxisId,\n      yAxisId,\n      id\n    } = _resolveDefaultProps,\n    everythingElse = _objectWithoutProperties(_resolveDefaultProps, _excluded3);\n  var {\n    needClip\n  } = useNeedsClip(xAxisId, yAxisId);\n  var plotArea = usePlotArea();\n  var layout = useChartLayout();\n  var isPanorama = useIsPanorama();\n  var points = useAppSelector(state => selectLinePoints(state, xAxisId, yAxisId, isPanorama, id));\n  if (layout !== 'horizontal' && layout !== 'vertical' || points == null || plotArea == null) {\n    // Cannot render Line in an unsupported layout\n    return null;\n  }\n  var {\n    height,\n    width,\n    x: left,\n    y: top\n  } = plotArea;\n  return /*#__PURE__*/React.createElement(LineWithState, _extends({}, everythingElse, {\n    id: id,\n    connectNulls: connectNulls,\n    dot: dot,\n    activeDot: activeDot,\n    animateNewValues: animateNewValues,\n    animationBegin: animationBegin,\n    animationDuration: animationDuration,\n    animationEasing: animationEasing,\n    isAnimationActive: isAnimationActive,\n    hide: hide,\n    label: label,\n    legendType: legendType,\n    xAxisId: xAxisId,\n    yAxisId: yAxisId,\n    points: points,\n    layout: layout,\n    height: height,\n    width: width,\n    left: left,\n    top: top,\n    needClip: needClip\n  }));\n}\nexport function computeLinePoints(_ref6) {\n  var {\n    layout,\n    xAxis,\n    yAxis,\n    xAxisTicks,\n    yAxisTicks,\n    dataKey,\n    bandSize,\n    displayedData\n  } = _ref6;\n  return displayedData.map((entry, index) => {\n    // @ts-expect-error getValueByDataKey does not validate the output type\n    var value = getValueByDataKey(entry, dataKey);\n    if (layout === 'horizontal') {\n      var _x = getCateCoordinateOfLine({\n        axis: xAxis,\n        ticks: xAxisTicks,\n        bandSize,\n        entry,\n        index\n      });\n      var _y = isNullish(value) ? null : yAxis.scale(value);\n      return {\n        x: _x,\n        y: _y,\n        value,\n        payload: entry\n      };\n    }\n    var x = isNullish(value) ? null : xAxis.scale(value);\n    var y = getCateCoordinateOfLine({\n      axis: yAxis,\n      ticks: yAxisTicks,\n      bandSize,\n      entry,\n      index\n    });\n    if (x == null || y == null) {\n      return null;\n    }\n    return {\n      x,\n      y,\n      value,\n      payload: entry\n    };\n  }).filter(Boolean);\n}\nexport function Line(outsideProps) {\n  var props = resolveDefaultProps(outsideProps, defaultLineProps);\n  var isPanorama = useIsPanorama();\n  return /*#__PURE__*/React.createElement(RegisterGraphicalItemId, {\n    id: props.id,\n    type: \"line\"\n  }, id => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(SetLegendPayload, {\n    legendPayload: computeLegendPayloadFromAreaData(props)\n  }), /*#__PURE__*/React.createElement(SetTooltipEntrySettings, {\n    fn: getTooltipEntrySettings,\n    args: props\n  }), /*#__PURE__*/React.createElement(SetCartesianGraphicalItem, {\n    type: \"line\",\n    id: id,\n    data: props.data,\n    xAxisId: props.xAxisId,\n    yAxisId: props.yAxisId,\n    zAxisId: 0,\n    dataKey: props.dataKey,\n    hide: props.hide,\n    isPanorama: isPanorama\n  }), /*#__PURE__*/React.createElement(LineImpl, _extends({}, props, {\n    id: id\n  }))));\n}\nLine.displayName = 'Line';","import { createSelector } from 'reselect';\nimport { computeLinePoints } from '../../cartesian/Line';\nimport { selectChartDataWithIndexesIfNotInPanorama } from './dataSelectors';\nimport { selectChartLayout } from '../../context/chartLayoutContext';\nimport { selectAxisWithScale, selectTicksOfGraphicalItem, selectUnfilteredCartesianItems } from './axisSelectors';\nimport { getBandSizeOfAxis, isCategoricalAxis } from '../../util/ChartUtils';\nvar selectXAxisWithScale = (state, xAxisId, _yAxisId, isPanorama) => selectAxisWithScale(state, 'xAxis', xAxisId, isPanorama);\nvar selectXAxisTicks = (state, xAxisId, _yAxisId, isPanorama) => selectTicksOfGraphicalItem(state, 'xAxis', xAxisId, isPanorama);\nvar selectYAxisWithScale = (state, _xAxisId, yAxisId, isPanorama) => selectAxisWithScale(state, 'yAxis', yAxisId, isPanorama);\nvar selectYAxisTicks = (state, _xAxisId, yAxisId, isPanorama) => selectTicksOfGraphicalItem(state, 'yAxis', yAxisId, isPanorama);\nvar selectBandSize = createSelector([selectChartLayout, selectXAxisWithScale, selectYAxisWithScale, selectXAxisTicks, selectYAxisTicks], (layout, xAxis, yAxis, xAxisTicks, yAxisTicks) => {\n  if (isCategoricalAxis(layout, 'xAxis')) {\n    return getBandSizeOfAxis(xAxis, xAxisTicks, false);\n  }\n  return getBandSizeOfAxis(yAxis, yAxisTicks, false);\n});\nvar pickLineId = (_state, _xAxisId, _yAxisId, _isPanorama, id) => id;\nfunction isLineSettings(item) {\n  return item.type === 'line';\n}\n\n/*\n * There is a race condition problem because we read some data from props and some from the state.\n * The state is updated through a dispatch and is one render behind,\n * and so we have this weird one tick render where the displayedData in one selector have the old dataKey\n * but the new dataKey in another selector.\n *\n * So here instead of reading the dataKey from the props, we always read it from the state.\n */\nvar selectSynchronisedLineSettings = createSelector([selectUnfilteredCartesianItems, pickLineId], (graphicalItems, id) => graphicalItems.filter(isLineSettings).find(x => x.id === id));\nexport var selectLinePoints = createSelector([selectChartLayout, selectXAxisWithScale, selectYAxisWithScale, selectXAxisTicks, selectYAxisTicks, selectSynchronisedLineSettings, selectBandSize, selectChartDataWithIndexesIfNotInPanorama], (layout, xAxis, yAxis, xAxisTicks, yAxisTicks, lineSettings, bandSize, _ref) => {\n  var {\n    chartData,\n    dataStartIndex,\n    dataEndIndex\n  } = _ref;\n  if (lineSettings == null || xAxis == null || yAxis == null || xAxisTicks == null || yAxisTicks == null || xAxisTicks.length === 0 || yAxisTicks.length === 0 || bandSize == null) {\n    return undefined;\n  }\n  var {\n    dataKey,\n    data\n  } = lineSettings;\n  var displayedData;\n  if (data != null && data.length > 0) {\n    displayedData = data;\n  } else {\n    displayedData = chartData === null || chartData === void 0 ? void 0 : chartData.slice(dataStartIndex, dataEndIndex + 1);\n  }\n  if (displayedData == null) {\n    return undefined;\n  }\n  return computeLinePoints({\n    layout,\n    xAxis,\n    yAxis,\n    xAxisTicks,\n    yAxisTicks,\n    dataKey,\n    bandSize,\n    displayedData\n  });\n});"],"names":[],"mappings":"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","ignoreList":[1,2,3]}