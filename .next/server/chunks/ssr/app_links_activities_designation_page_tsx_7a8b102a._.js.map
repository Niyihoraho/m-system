{"version":3,"sources":["turbopack:///[project]/app/links/activities/designation/page.tsx","turbopack:///[project]/components/add-designation-modal.tsx","turbopack:///[project]/components/delete-designation-modal.tsx","turbopack:///[project]/components/edit-designation-modal.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Search, RefreshCw, Plus, Edit, Trash2, Target, AlertCircle } from 'lucide-react';\r\nimport { AppSidebar } from \"@/components/app-sidebar\";\r\nimport { AddDesignationModal } from \"@/components/add-designation-modal\";\r\nimport { DeleteDesignationModal } from \"@/components/delete-designation-modal\";\r\nimport { EditDesignationModal } from \"@/components/edit-designation-modal\";\r\nimport {\r\n  Breadcrumb,\r\n  BreadcrumbItem,\r\n  BreadcrumbLink,\r\n  BreadcrumbList,\r\n  BreadcrumbPage,\r\n  BreadcrumbSeparator,\r\n} from \"@/components/ui/breadcrumb\";\r\nimport { Separator } from \"@/components/ui/separator\";\r\nimport {\r\n  SidebarInset,\r\n  SidebarProvider,\r\n  SidebarTrigger,\r\n} from \"@/components/ui/sidebar\";\r\n\r\ninterface Designation {\r\n  id: number;\r\n  name: string;\r\n  description: string | null;\r\n  targetAmount: number | null;\r\n  currentAmount: number;\r\n  isActive: boolean;\r\n  regionId: number | null;\r\n  universityId: number | null;\r\n  smallGroupId: number | null;\r\n  region: { name: string } | null;\r\n  university: { name: string } | null;\r\n  smallgroup: { name: string } | null;\r\n}\r\n\r\nexport default function DesignationPage() {\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [designations, setDesignations] = useState<Designation[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [deleteModal, setDeleteModal] = useState<{\r\n    isOpen: boolean;\r\n    designationId: number | null;\r\n    designationName: string;\r\n  }>({\r\n    isOpen: false,\r\n    designationId: null,\r\n    designationName: ''\r\n  });\r\n  const [deleting, setDeleting] = useState(false);\r\n  const [editingDesignation, setEditingDesignation] = useState<Designation | null>(null);\r\n\r\n  // Fetch designations from API\r\n  const fetchDesignations = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      const response = await axios.get('/api/designations');\r\n      setDesignations(response.data);\r\n    } catch (err) {\r\n      console.error('Error fetching designations:', err);\r\n      setError('Failed to fetch designations. Please try again.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Open delete confirmation modal\r\n  const openDeleteModal = (designationId: number, designationName: string) => {\r\n    setDeleteModal({\r\n      isOpen: true,\r\n      designationId,\r\n      designationName\r\n    });\r\n  };\r\n\r\n  // Close delete confirmation modal\r\n  const closeDeleteModal = () => {\r\n    setDeleteModal({\r\n      isOpen: false,\r\n      designationId: null,\r\n      designationName: ''\r\n    });\r\n  };\r\n\r\n  // Open edit modal\r\n  const openEditModal = (designation: Designation) => {\r\n    setEditingDesignation(designation);\r\n  };\r\n\r\n  // Close edit modal\r\n  const closeEditModal = () => {\r\n    setEditingDesignation(null);\r\n  };\r\n\r\n  // Delete designation function\r\n  const deleteDesignation = async () => {\r\n    if (!deleteModal.designationId) return;\r\n\r\n    setDeleting(true);\r\n    \r\n    try {\r\n      const response = await axios.delete(`/api/designations/${deleteModal.designationId}`);\r\n      \r\n      if (response.status === 200) {\r\n        // Remove the designation from the local state\r\n        setDesignations(prev => prev.filter(designation => designation.id !== deleteModal.designationId));\r\n        \r\n        // Close the modal\r\n        closeDeleteModal();\r\n        \r\n        // Show success message (you could add a toast notification here)\r\n        console.log('Designation deleted successfully');\r\n      }\r\n    } catch (err) {\r\n      console.error('Error deleting designation:', err);\r\n      alert('Failed to delete designation. Please try again.');\r\n    } finally {\r\n      setDeleting(false);\r\n    }\r\n  };\r\n\r\n  // Load designations on component mount\r\n  useEffect(() => {\r\n    fetchDesignations();\r\n  }, []);\r\n\r\n  const filteredDesignations = designations.filter(designation => {\r\n    if (!searchTerm) return true;\r\n    \r\n    const searchLower = searchTerm.toLowerCase();\r\n    \r\n    return (\r\n      designation.name?.toLowerCase().includes(searchLower) ||\r\n      designation.description?.toLowerCase().includes(searchLower) ||\r\n      designation.region?.name?.toLowerCase().includes(searchLower) ||\r\n      designation.university?.name?.toLowerCase().includes(searchLower) ||\r\n      designation.smallgroup?.name?.toLowerCase().includes(searchLower)\r\n    );\r\n  });\r\n\r\n  return (\r\n    <SidebarProvider>\r\n      <AppSidebar />\r\n      <SidebarInset>\r\n        <header className=\"flex h-16 shrink-0 items-center gap-2 transition-[width,height] ease-linear group-has-data-[collapsible=icon]/sidebar-wrapper:h-12\">\r\n          <div className=\"flex items-center gap-2 px-4\">\r\n            <SidebarTrigger className=\"-ml-1\" />\r\n            <Separator\r\n              orientation=\"vertical\"\r\n              className=\"mr-2 data-[orientation=vertical]:h-4\"\r\n            />\r\n            <Breadcrumb>\r\n              <BreadcrumbList>\r\n                <BreadcrumbItem className=\"hidden md:block\">\r\n                  <BreadcrumbLink href=\"/dashboard\">\r\n                    Dashboard\r\n                  </BreadcrumbLink>\r\n                </BreadcrumbItem>\r\n                <BreadcrumbSeparator className=\"hidden md:block\" />\r\n                <BreadcrumbItem>\r\n                  <BreadcrumbLink href=\"/links/activities\">\r\n                    Activities\r\n                  </BreadcrumbLink>\r\n                </BreadcrumbItem>\r\n                <BreadcrumbSeparator />\r\n                <BreadcrumbItem>\r\n                  <BreadcrumbPage>Designations</BreadcrumbPage>\r\n                </BreadcrumbItem>\r\n              </BreadcrumbList>\r\n            </Breadcrumb>\r\n          </div>\r\n        </header>\r\n        <div className=\"flex flex-1 flex-col gap-4 p-2 sm:p-4 pt-0\">\r\n          <div className=\"max-w-7xl mx-auto w-full\">\r\n            {/* Header */}\r\n            <div className=\"mb-4 sm:mb-6 lg:mb-8\">\r\n              <h1 className=\"text-2xl sm:text-3xl font-bold text-foreground mb-1 sm:mb-2\">Designation Management</h1>\r\n              <p className=\"text-sm sm:text-base text-muted-foreground\">Manage contribution designations and their information across the organization</p>\r\n            </div>\r\n\r\n            {/* Search and Actions */}\r\n            <div className=\"flex flex-col sm:flex-row gap-3 sm:gap-4 items-stretch sm:items-center justify-between mb-4 sm:mb-6\">\r\n              <div className=\"flex flex-col sm:flex-row gap-2 sm:gap-3 flex-1\">\r\n                {/* Search */}\r\n                <div className=\"relative flex-1 max-w-md\">\r\n                  <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-muted-foreground w-4 h-4\" />\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Search designations...\"\r\n                    value={searchTerm}\r\n                    onChange={(e) => setSearchTerm(e.target.value)}\r\n                    className=\"w-full pl-10 pr-4 py-2 sm:py-2.5 bg-muted/30 border border-border/20 rounded-lg focus:ring-2 focus:ring-primary/20 focus:border-primary/50 focus:bg-muted/50 transition-all duration-200 text-foreground placeholder:text-muted-foreground text-sm sm:text-base\"\r\n                  />\r\n                </div>\r\n\r\n                {/* Refresh Button */}\r\n                <button \r\n                  onClick={fetchDesignations}\r\n                  disabled={loading}\r\n                  className=\"flex items-center justify-center gap-2 px-3 sm:px-4 py-2 sm:py-2.5 text-foreground bg-muted/30 hover:bg-muted/50 border border-border/20 hover:border-border/40 rounded-lg transition-all duration-200 text-sm sm:text-base disabled:opacity-50 disabled:cursor-not-allowed\"\r\n                >\r\n                  <RefreshCw className={`w-4 h-4 ${loading ? 'animate-spin' : ''}`} />\r\n                  <span className=\"hidden sm:inline\">{loading ? 'Loading...' : 'Refresh'}</span>\r\n                </button>\r\n              </div>\r\n\r\n              {/* Add New Designation Button */}\r\n              <AddDesignationModal onDesignationAdded={fetchDesignations}>\r\n                <button className=\"flex items-center justify-center gap-2 px-4 sm:px-6 py-2 sm:py-2.5 bg-muted text-foreground hover:bg-muted/80 rounded-md transition-all duration-200 shadow-sm text-sm sm:text-base\">\r\n                  <Plus className=\"w-4 h-4\" />\r\n                  <span className=\"hidden sm:inline\">Add New Designation</span>\r\n                  <span className=\"sm:hidden\">Add Designation</span>\r\n                </button>\r\n              </AddDesignationModal>\r\n            </div>\r\n\r\n            {/* Error State */}\r\n            {error && (\r\n              <div className=\"bg-destructive/10 border border-destructive/20 rounded-lg p-4 mb-6\">\r\n                <div className=\"flex items-center gap-2 text-destructive\">\r\n                  <span className=\"text-sm font-medium\">Error:</span>\r\n                  <span className=\"text-sm\">{error}</span>\r\n                </div>\r\n                <button \r\n                  onClick={fetchDesignations}\r\n                  className=\"mt-2 text-sm text-destructive hover:text-destructive/80 underline\"\r\n                >\r\n                  Try again\r\n                </button>\r\n              </div>\r\n            )}\r\n\r\n            {/* Designations Table */}\r\n            <div className=\"bg-card rounded-lg shadow-sm border border-border overflow-hidden\">\r\n              {loading ? (\r\n                <div className=\"flex items-center justify-center py-12\">\r\n                  <div className=\"flex items-center gap-2 text-muted-foreground\">\r\n                    <RefreshCw className=\"w-4 h-4 animate-spin\" />\r\n                    <span>Loading designations...</span>\r\n                  </div>\r\n                </div>\r\n              ) : (\r\n                <div className=\"overflow-x-auto\">\r\n                  <table className=\"w-full min-w-[800px]\">\r\n                    <thead className=\"bg-muted/50 border-b border-border\">\r\n                      <tr>\r\n                        <th className=\"px-3 sm:px-6 py-3 text-left text-xs font-medium text-muted-foreground uppercase tracking-wider\">\r\n                          ID\r\n                        </th>\r\n                        <th className=\"px-3 sm:px-6 py-3 text-left text-xs font-medium text-muted-foreground uppercase tracking-wider\">\r\n                          Designation Name\r\n                        </th>\r\n                        <th className=\"px-3 sm:px-6 py-3 text-left text-xs font-medium text-muted-foreground uppercase tracking-wider\">\r\n                          Description\r\n                        </th>\r\n                        <th className=\"px-3 sm:px-6 py-3 text-left text-xs font-medium text-muted-foreground uppercase tracking-wider\">\r\n                          Amounts\r\n                        </th>\r\n                        <th className=\"px-3 sm:px-6 py-3 text-left text-xs font-medium text-muted-foreground uppercase tracking-wider\">\r\n                          Organization\r\n                        </th>\r\n                        <th className=\"px-3 sm:px-6 py-3 text-left text-xs font-medium text-muted-foreground uppercase tracking-wider\">\r\n                          Status\r\n                        </th>\r\n                        <th className=\"px-3 sm:px-6 py-3 text-left text-xs font-medium text-muted-foreground uppercase tracking-wider\">\r\n                          Actions\r\n                        </th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody className=\"bg-card divide-y divide-border\">\r\n                    {filteredDesignations.map((designation) => (\r\n                      <tr key={designation.id} className=\"hover:bg-muted/50\">\r\n                        <td className=\"px-3 sm:px-6 py-3 sm:py-4 text-sm font-medium text-foreground\">\r\n                          {designation.id}\r\n                        </td>\r\n                        <td className=\"px-3 sm:px-6 py-3 sm:py-4 text-sm text-foreground\">\r\n                          <div className=\"font-medium\">{designation.name}</div>\r\n                        </td>\r\n                        <td className=\"px-3 sm:px-6 py-3 sm:py-4 text-sm text-muted-foreground\">\r\n                          <div className=\"max-w-xs truncate\">\r\n                            {designation.description || 'No description'}\r\n                          </div>\r\n                        </td>\r\n                        <td className=\"px-3 sm:px-6 py-3 sm:py-4 text-sm text-muted-foreground\">\r\n                          <div className=\"space-y-1\">\r\n                            {designation.targetAmount && (\r\n                              <div className=\"text-xs\">\r\n                                Target: <span className=\"font-medium\">${designation.targetAmount.toLocaleString()}</span>\r\n                              </div>\r\n                            )}\r\n                            <div className=\"text-xs\">\r\n                              Current: <span className=\"font-medium\">${designation.currentAmount.toLocaleString()}</span>\r\n                            </div>\r\n                            {designation.targetAmount && (\r\n                              <div className=\"text-xs\">\r\n                                Progress: <span className=\"font-medium\">\r\n                                  {Math.round((designation.currentAmount / designation.targetAmount) * 100)}%\r\n                                </span>\r\n                              </div>\r\n                            )}\r\n                          </div>\r\n                        </td>\r\n                        <td className=\"px-3 sm:px-6 py-3 sm:py-4 text-sm text-muted-foreground\">\r\n                          <div className=\"space-y-1\">\r\n                            {designation.region && (\r\n                              <div className=\"font-medium\">{designation.region.name}</div>\r\n                            )}\r\n                            {designation.university && (\r\n                              <div className=\"text-xs text-muted-foreground\">University: {designation.university.name}</div>\r\n                            )}\r\n                            {designation.smallgroup && (\r\n                              <div className=\"text-xs text-muted-foreground\">Small Group: {designation.smallgroup.name}</div>\r\n                            )}\r\n                            {!designation.region && !designation.university && !designation.smallgroup && (\r\n                              <div className=\"text-xs text-muted-foreground\">Global</div>\r\n                            )}\r\n                          </div>\r\n                        </td>\r\n                        <td className=\"px-3 sm:px-6 py-3 sm:py-4 text-sm\">\r\n                          <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${\r\n                            designation.isActive \r\n                              ? 'bg-green-100 text-green-800 dark:bg-green-900/20 dark:text-green-400' \r\n                              : 'bg-gray-100 text-gray-800 dark:bg-gray-900/20 dark:text-gray-400'\r\n                          }`}>\r\n                            {designation.isActive ? 'Active' : 'Inactive'}\r\n                          </span>\r\n                        </td>\r\n                        <td className=\"px-3 sm:px-6 py-3 sm:py-4 text-sm font-medium\">\r\n                          <div className=\"flex items-center gap-1 sm:gap-2\">\r\n                            <button \r\n                              onClick={() => openEditModal(designation)}\r\n                              className=\"text-muted-foreground hover:text-foreground p-1 rounded\" \r\n                              title=\"Edit\"\r\n                            >\r\n                              <Edit className=\"w-4 h-4\" />\r\n                            </button>\r\n                            <button \r\n                              onClick={() => openDeleteModal(designation.id, designation.name)}\r\n                              className=\"text-destructive hover:text-destructive/80 p-1 rounded\" \r\n                              title=\"Delete\"\r\n                            >\r\n                              <Trash2 className=\"w-4 h-4\" />\r\n                            </button>\r\n                          </div>\r\n                        </td>\r\n                      </tr>\r\n                    ))}\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              )}\r\n\r\n              {/* Empty State */}\r\n              {!loading && filteredDesignations.length === 0 && !error && (\r\n                <div className=\"flex flex-col items-center justify-center py-12\">\r\n                  <Target className=\"w-12 h-12 text-muted-foreground mb-4\" />\r\n                  <h3 className=\"text-lg font-medium text-foreground mb-2\">No designations found</h3>\r\n                  <p className=\"text-muted-foreground text-center mb-4\">\r\n                    {searchTerm ? 'No designations match your search criteria.' : 'No designations have been added yet.'}\r\n                  </p>\r\n                  {!searchTerm && (\r\n                    <AddDesignationModal onDesignationAdded={fetchDesignations}>\r\n                      <button className=\"flex items-center gap-2 px-4 py-2 bg-primary text-primary-foreground rounded-md hover:bg-primary/90 transition-colors\">\r\n                        <Plus className=\"w-4 h-4\" />\r\n                        Add First Designation\r\n                      </button>\r\n                    </AddDesignationModal>\r\n                  )}\r\n                </div>\r\n              )}\r\n\r\n              {/* Table Footer */}\r\n              {!loading && filteredDesignations.length > 0 && (\r\n                <div className=\"bg-muted/50 px-3 sm:px-6 py-3 border-t border-border\">\r\n                  <div className=\"flex flex-col sm:flex-row items-center justify-between gap-2 sm:gap-0\">\r\n                    <div className=\"text-xs sm:text-sm text-muted-foreground text-center sm:text-left\">\r\n                      Showing <span className=\"font-medium text-foreground\">{filteredDesignations.length}</span> of <span className=\"font-medium text-foreground\">{designations.length}</span> designations\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </SidebarInset>\r\n      \r\n      {/* Delete Confirmation Modal */}\r\n      <DeleteDesignationModal\r\n        isOpen={deleteModal.isOpen}\r\n        onClose={closeDeleteModal}\r\n        onConfirm={deleteDesignation}\r\n        designationName={deleteModal.designationName}\r\n        isLoading={deleting}\r\n      />\r\n      \r\n      {/* Edit Designation Modal */}\r\n      <EditDesignationModal\r\n        designation={editingDesignation}\r\n        onDesignationUpdated={fetchDesignations}\r\n        isOpen={editingDesignation !== null}\r\n        onClose={closeEditModal}\r\n      />\r\n    </SidebarProvider>\r\n  );\r\n}\r\n","\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport { Button } from \"@/components/ui/ui copy/button\"\r\nimport { Card, CardContent, CardHeader } from \"@/components/ui/ui copy/card\"\r\nimport { Input } from \"@/components/ui/ui copy/input\"\r\nimport { Label } from \"@/components/ui/ui copy/label\"\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/ui copy/select\"\r\nimport { Checkbox } from \"@/components/ui/ui copy/checkbox\"\r\nimport {\r\n  Sheet,\r\n  SheetContent,\r\n  SheetDescription,\r\n  SheetHeader,\r\n  SheetTitle,\r\n  SheetTrigger,\r\n} from \"@/components/ui/ui copy/sheet\"\r\nimport { Plus, Target, MapPin, Building2, Users, DollarSign, FileText } from \"lucide-react\"\r\n\r\ninterface Region {\r\n  id: number;\r\n  name: string;\r\n}\r\n\r\ninterface University {\r\n  id: number;\r\n  name: string;\r\n  regionId: number;\r\n}\r\n\r\ninterface SmallGroup {\r\n  id: number;\r\n  name: string;\r\n  universityId: number;\r\n  regionId: number;\r\n}\r\n\r\ninterface AddDesignationModalProps {\r\n  children: React.ReactNode\r\n  onDesignationAdded?: () => void\r\n}\r\n\r\nexport function AddDesignationModal({ children, onDesignationAdded }: AddDesignationModalProps) {\r\n  const [open, setOpen] = React.useState(false)\r\n  const [isLoading, setIsLoading] = React.useState(false)\r\n  const [errors, setErrors] = React.useState<Record<string, string>>({})\r\n  const [success, setSuccess] = React.useState(false)\r\n  const [regions, setRegions] = React.useState<Region[]>([])\r\n  const [universities, setUniversities] = React.useState<University[]>([])\r\n  const [smallGroups, setSmallGroups] = React.useState<SmallGroup[]>([])\r\n  const [formData, setFormData] = React.useState({\r\n    name: \"\",\r\n    description: \"\",\r\n    targetAmount: \"\",\r\n    currentAmount: \"\",\r\n    regionId: \"\",\r\n    universityId: \"\",\r\n    smallGroupId: \"\",\r\n    isActive: true,\r\n  })\r\n\r\n  // Fetch regions on modal open\r\n  React.useEffect(() => {\r\n    if (open) {\r\n      fetchRegions()\r\n    }\r\n  }, [open])\r\n\r\n  // Fetch universities when region changes\r\n  React.useEffect(() => {\r\n    if (formData.regionId) {\r\n      fetchUniversities(Number(formData.regionId))\r\n    } else {\r\n      setUniversities([])\r\n      setFormData(prev => ({ ...prev, universityId: \"\", smallGroupId: \"\" }))\r\n    }\r\n  }, [formData.regionId])\r\n\r\n  // Fetch small groups when university changes\r\n  React.useEffect(() => {\r\n    if (formData.universityId) {\r\n      fetchSmallGroups(Number(formData.universityId))\r\n    } else {\r\n      setSmallGroups([])\r\n      setFormData(prev => ({ ...prev, smallGroupId: \"\" }))\r\n    }\r\n  }, [formData.universityId])\r\n\r\n  const fetchRegions = async () => {\r\n    try {\r\n      const response = await fetch('/api/regions')\r\n      const data = await response.json()\r\n      setRegions(data)\r\n    } catch (error) {\r\n      console.error('Error fetching regions:', error)\r\n    }\r\n  }\r\n\r\n  const fetchUniversities = async (regionId: number) => {\r\n    try {\r\n      const response = await fetch(`/api/universities?regionId=${regionId}`)\r\n      const data = await response.json()\r\n      setUniversities(data)\r\n    } catch (error) {\r\n      console.error('Error fetching universities:', error)\r\n    }\r\n  }\r\n\r\n  const fetchSmallGroups = async (universityId: number) => {\r\n    try {\r\n      const response = await fetch(`/api/small-groups?universityId=${universityId}`)\r\n      const data = await response.json()\r\n      setSmallGroups(data)\r\n    } catch (error) {\r\n      console.error('Error fetching small groups:', error)\r\n    }\r\n  }\r\n\r\n  const handleInputChange = (field: string, value: string | boolean) => {\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      [field]: value\r\n    }))\r\n    \r\n    // Clear error for this field when user starts typing\r\n    if (errors[field]) {\r\n      setErrors(prev => ({\r\n        ...prev,\r\n        [field]: \"\"\r\n      }))\r\n    }\r\n    \r\n    // Clear success state when user starts typing\r\n    if (success) {\r\n      setSuccess(false)\r\n    }\r\n  }\r\n\r\n  const validateForm = (): boolean => {\r\n    const newErrors: Record<string, string> = {}\r\n    \r\n    if (!formData.name.trim()) {\r\n      newErrors.name = \"Designation name is required\"\r\n    }\r\n    \r\n    if (formData.targetAmount && isNaN(Number(formData.targetAmount))) {\r\n      newErrors.targetAmount = \"Target amount must be a valid number\"\r\n    }\r\n    \r\n    if (formData.currentAmount && isNaN(Number(formData.currentAmount))) {\r\n      newErrors.currentAmount = \"Current amount must be a valid number\"\r\n    }\r\n    \r\n    if (Number(formData.targetAmount) < 0) {\r\n      newErrors.targetAmount = \"Target amount must be non-negative\"\r\n    }\r\n    \r\n    if (Number(formData.currentAmount) < 0) {\r\n      newErrors.currentAmount = \"Current amount must be non-negative\"\r\n    }\r\n    \r\n    setErrors(newErrors)\r\n    return Object.keys(newErrors).length === 0\r\n  }\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault()\r\n    \r\n    if (!validateForm()) {\r\n      return\r\n    }\r\n\r\n    setIsLoading(true)\r\n    \r\n    try {\r\n      console.log('Creating designation data:', formData)\r\n      \r\n      const response = await fetch('/api/designations', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          name: formData.name,\r\n          description: formData.description || null,\r\n          targetAmount: formData.targetAmount ? Number(formData.targetAmount) : null,\r\n          currentAmount: formData.currentAmount ? Number(formData.currentAmount) : 0,\r\n          regionId: formData.regionId ? Number(formData.regionId) : null,\r\n          universityId: formData.universityId ? Number(formData.universityId) : null,\r\n          smallGroupId: formData.smallGroupId ? Number(formData.smallGroupId) : null,\r\n          isActive: formData.isActive\r\n        })\r\n      })\r\n      const data = await response.json()\r\n      \r\n      console.log('API response:', { status: response.status, data })\r\n      \r\n      if (response.ok) {\r\n        // Show success message\r\n        setSuccess(true)\r\n        setErrors({})\r\n        \r\n        // Reset form\r\n        setFormData({\r\n          name: \"\",\r\n          description: \"\",\r\n          targetAmount: \"\",\r\n          currentAmount: \"\",\r\n          regionId: \"\",\r\n          universityId: \"\",\r\n          smallGroupId: \"\",\r\n          isActive: true,\r\n        })\r\n        \r\n        // Call the callback to refresh the designations list\r\n        if (onDesignationAdded) {\r\n          onDesignationAdded()\r\n        }\r\n        \r\n        // Close modal after a short delay\r\n        setTimeout(() => {\r\n          setOpen(false)\r\n          setSuccess(false)\r\n        }, 1500)\r\n      } else {\r\n        // Handle API errors\r\n        console.error('API Error:', data)\r\n        setErrors({ general: data.error || \"Failed to create designation\" })\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error creating designation:\", error)\r\n      setErrors({ general: \"An unexpected error occurred\" })\r\n    } finally {\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Sheet open={open} onOpenChange={setOpen}>\r\n      <SheetTrigger asChild>\r\n        {children}\r\n      </SheetTrigger>\r\n      <SheetContent side=\"top\" className=\"h-full w-full max-w-none overflow-y-auto\">\r\n        <div className=\"container mx-auto max-w-2xl py-8\">\r\n          <SheetHeader className=\"pb-8 text-center\">\r\n            <SheetTitle className=\"flex items-center justify-center gap-3 text-2xl\">\r\n              <div className=\"flex h-12 w-12 items-center justify-center rounded-lg bg-primary/10\">\r\n                <Plus className=\"h-6 w-6 text-primary\" />\r\n              </div>\r\n              Add New Designation\r\n            </SheetTitle>\r\n            <SheetDescription className=\"text-lg text-muted-foreground\">\r\n              Add a new contribution designation to your organization.\r\n            </SheetDescription>\r\n          </SheetHeader>\r\n          \r\n          <Card className=\"shadow-lg\">\r\n            <CardHeader className=\"pb-6\">\r\n              <div className=\"text-center\">\r\n                <h3 className=\"text-lg font-semibold\">Designation Information</h3>\r\n                <p className=\"text-sm text-muted-foreground\">Fill in the details below to add a new designation</p>\r\n              </div>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <form onSubmit={handleSubmit} className=\"flex flex-col gap-6\">\r\n                {errors.general && (\r\n                  <div className=\"p-3 text-sm text-red-600 bg-red-50 border border-red-200 rounded-md\">\r\n                    {errors.general}\r\n                  </div>\r\n                )}\r\n\r\n                {/* Designation Information */}\r\n                <div className=\"space-y-4\">\r\n                  <h4 className=\"text-md font-semibold text-foreground border-b pb-2\">Designation Details</h4>\r\n                  \r\n                  <div className=\"space-y-2\">\r\n                    <Label htmlFor=\"name\" className=\"text-sm font-medium flex items-center gap-2\">\r\n                      <Target className=\"h-4 w-4\" />\r\n                      Designation Name *\r\n                    </Label>\r\n                    <Input\r\n                      id=\"name\"\r\n                      placeholder=\"Enter designation name\"\r\n                      className=\"h-11\"\r\n                      value={formData.name}\r\n                      onChange={(e) => handleInputChange(\"name\", e.target.value)}\r\n                      required\r\n                    />\r\n                    {errors.name && <p className=\"text-sm text-red-600\">{errors.name}</p>}\r\n                  </div>\r\n\r\n                  <div className=\"space-y-2\">\r\n                    <Label htmlFor=\"description\" className=\"text-sm font-medium flex items-center gap-2\">\r\n                      <FileText className=\"h-4 w-4\" />\r\n                      Description (Optional)\r\n                    </Label>\r\n                    <Input\r\n                      id=\"description\"\r\n                      placeholder=\"Enter designation description\"\r\n                      className=\"h-11\"\r\n                      value={formData.description}\r\n                      onChange={(e) => handleInputChange(\"description\", e.target.value)}\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                    <div className=\"space-y-2\">\r\n                      <Label htmlFor=\"targetAmount\" className=\"text-sm font-medium flex items-center gap-2\">\r\n                        <DollarSign className=\"h-4 w-4\" />\r\n                        Target Amount (Optional)\r\n                      </Label>\r\n                      <Input\r\n                        id=\"targetAmount\"\r\n                        type=\"number\"\r\n                        step=\"0.01\"\r\n                        min=\"0\"\r\n                        placeholder=\"0.00\"\r\n                        className=\"h-11\"\r\n                        value={formData.targetAmount}\r\n                        onChange={(e) => handleInputChange(\"targetAmount\", e.target.value)}\r\n                      />\r\n                      {errors.targetAmount && <p className=\"text-sm text-red-600\">{errors.targetAmount}</p>}\r\n                    </div>\r\n\r\n                    <div className=\"space-y-2\">\r\n                      <Label htmlFor=\"currentAmount\" className=\"text-sm font-medium flex items-center gap-2\">\r\n                        <DollarSign className=\"h-4 w-4\" />\r\n                        Current Amount (Optional)\r\n                      </Label>\r\n                      <Input\r\n                        id=\"currentAmount\"\r\n                        type=\"number\"\r\n                        step=\"0.01\"\r\n                        min=\"0\"\r\n                        placeholder=\"0.00\"\r\n                        className=\"h-11\"\r\n                        value={formData.currentAmount}\r\n                        onChange={(e) => handleInputChange(\"currentAmount\", e.target.value)}\r\n                      />\r\n                      {errors.currentAmount && <p className=\"text-sm text-red-600\">{errors.currentAmount}</p>}\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"space-y-2\">\r\n                    <Label htmlFor=\"regionId\" className=\"text-sm font-medium flex items-center gap-2\">\r\n                      <MapPin className=\"h-4 w-4\" />\r\n                      Region (Optional)\r\n                    </Label>\r\n                    <Select\r\n                      value={formData.regionId}\r\n                      onValueChange={(value) => handleInputChange(\"regionId\", value)}\r\n                    >\r\n                      <SelectTrigger className=\"h-11\">\r\n                        <SelectValue placeholder=\"Select a region (optional)\" />\r\n                      </SelectTrigger>\r\n                      <SelectContent>\r\n                        {regions.map((region) => (\r\n                          <SelectItem key={region.id} value={region.id.toString()}>\r\n                            {region.name}\r\n                          </SelectItem>\r\n                        ))}\r\n                      </SelectContent>\r\n                    </Select>\r\n                  </div>\r\n\r\n                  <div className=\"space-y-2\">\r\n                    <Label htmlFor=\"universityId\" className=\"text-sm font-medium flex items-center gap-2\">\r\n                      <Building2 className=\"h-4 w-4\" />\r\n                      University (Optional)\r\n                    </Label>\r\n                    <Select\r\n                      value={formData.universityId}\r\n                      onValueChange={(value) => handleInputChange(\"universityId\", value)}\r\n                      disabled={!formData.regionId}\r\n                    >\r\n                      <SelectTrigger className=\"h-11\">\r\n                        <SelectValue placeholder={formData.regionId ? \"Select a university (optional)\" : \"Select a region first\"} />\r\n                      </SelectTrigger>\r\n                      <SelectContent>\r\n                        {universities.map((university) => (\r\n                          <SelectItem key={university.id} value={university.id.toString()}>\r\n                            {university.name}\r\n                          </SelectItem>\r\n                        ))}\r\n                      </SelectContent>\r\n                    </Select>\r\n                  </div>\r\n\r\n                  <div className=\"space-y-2\">\r\n                    <Label htmlFor=\"smallGroupId\" className=\"text-sm font-medium flex items-center gap-2\">\r\n                      <Users className=\"h-4 w-4\" />\r\n                      Small Group (Optional)\r\n                    </Label>\r\n                    <Select\r\n                      value={formData.smallGroupId}\r\n                      onValueChange={(value) => handleInputChange(\"smallGroupId\", value)}\r\n                      disabled={!formData.universityId}\r\n                    >\r\n                      <SelectTrigger className=\"h-11\">\r\n                        <SelectValue placeholder={formData.universityId ? \"Select a small group (optional)\" : \"Select a university first\"} />\r\n                      </SelectTrigger>\r\n                      <SelectContent>\r\n                        {smallGroups.map((smallGroup) => (\r\n                          <SelectItem key={smallGroup.id} value={smallGroup.id.toString()}>\r\n                            {smallGroup.name}\r\n                          </SelectItem>\r\n                        ))}\r\n                      </SelectContent>\r\n                    </Select>\r\n                  </div>\r\n\r\n                  <div className=\"flex items-center space-x-2\">\r\n                    <Checkbox\r\n                      id=\"isActive\"\r\n                      checked={formData.isActive}\r\n                      onCheckedChange={(checked) => handleInputChange(\"isActive\", checked as boolean)}\r\n                    />\r\n                    <Label htmlFor=\"isActive\" className=\"text-sm font-medium\">\r\n                      Designation is active\r\n                    </Label>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"flex gap-3 pt-6 border-t\">\r\n                  <Button \r\n                    type=\"button\" \r\n                    variant=\"outline\" \r\n                    className=\"flex-1 h-11\" \r\n                    onClick={() => setOpen(false)}\r\n                    disabled={isLoading}\r\n                  >\r\n                    Cancel\r\n                  </Button>\r\n                  <Button \r\n                    type=\"submit\" \r\n                    className=\"flex-1 h-11\" \r\n                    disabled={isLoading || success}\r\n                  >\r\n                    {isLoading ? (\r\n                      \"Creating...\"\r\n                    ) : success ? (\r\n                      \"✅ Created Successfully!\"\r\n                    ) : (\r\n                      <>\r\n                        <Plus className=\"mr-2 h-4 w-4\" />\r\n                        Add Designation\r\n                      </>\r\n                    )}\r\n                  </Button>\r\n                </div>\r\n              </form>\r\n            </CardContent>\r\n          </Card>\r\n        </div>\r\n      </SheetContent>\r\n    </Sheet>\r\n  )\r\n}\r\n","\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport { Button } from \"@/components/ui/ui copy/button\"\r\nimport { Card, CardContent, CardHeader } from \"@/components/ui/ui copy/card\"\r\nimport {\r\n  Sheet,\r\n  SheetContent,\r\n  SheetDescription,\r\n  SheetHeader,\r\n  SheetTitle,\r\n} from \"@/components/ui/ui copy/sheet\"\r\nimport { AlertTriangle, Trash2, X } from \"lucide-react\"\r\n\r\ninterface DeleteDesignationModalProps {\r\n  isOpen: boolean\r\n  onClose: () => void\r\n  onConfirm: () => void\r\n  designationName: string\r\n  isLoading?: boolean\r\n}\r\n\r\nexport function DeleteDesignationModal({ \r\n  isOpen, \r\n  onClose, \r\n  onConfirm, \r\n  designationName, \r\n  isLoading = false \r\n}: DeleteDesignationModalProps) {\r\n  const [isDeleting, setIsDeleting] = React.useState(false)\r\n\r\n  const handleConfirm = async () => {\r\n    setIsDeleting(true)\r\n    try {\r\n      await onConfirm()\r\n    } finally {\r\n      setIsDeleting(false)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Sheet open={isOpen} onOpenChange={onClose}>\r\n      <SheetContent side=\"top\" className=\"h-full w-full max-w-none overflow-y-auto\">\r\n        <div className=\"container mx-auto max-w-md py-8\">\r\n          <SheetHeader className=\"pb-8 text-center\">\r\n            <SheetTitle className=\"flex items-center justify-center gap-3 text-2xl text-destructive\">\r\n              <div className=\"flex h-12 w-12 items-center justify-center rounded-lg bg-destructive/10\">\r\n                <AlertTriangle className=\"h-6 w-6 text-destructive\" />\r\n              </div>\r\n              Delete Designation\r\n            </SheetTitle>\r\n            <SheetDescription className=\"text-lg text-muted-foreground\">\r\n              This action cannot be undone. This will permanently delete the designation.\r\n            </SheetDescription>\r\n          </SheetHeader>\r\n          \r\n          <Card className=\"shadow-lg border-destructive/20\">\r\n            <CardHeader className=\"pb-6\">\r\n              <div className=\"text-center\">\r\n                <h3 className=\"text-lg font-semibold text-destructive\">Confirm Deletion</h3>\r\n                <p className=\"text-sm text-muted-foreground\">\r\n                  Are you sure you want to delete this designation?\r\n                </p>\r\n              </div>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"space-y-6\">\r\n                {/* Warning Message */}\r\n                <div className=\"p-4 bg-destructive/5 border border-destructive/20 rounded-lg\">\r\n                  <div className=\"flex items-start gap-3\">\r\n                    <AlertTriangle className=\"h-5 w-5 text-destructive mt-0.5 flex-shrink-0\" />\r\n                    <div className=\"space-y-2\">\r\n                      <p className=\"text-sm font-medium text-destructive\">\r\n                        Warning: This action cannot be undone\r\n                      </p>\r\n                      <p className=\"text-sm text-muted-foreground\">\r\n                        You are about to delete the designation: <span className=\"font-semibold text-foreground\">\"{designationName}\"</span>\r\n                      </p>\r\n                      <p className=\"text-sm text-muted-foreground\">\r\n                        This designation will be permanently removed from the system. If there are any contributions associated with this designation, the deletion will be prevented.\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Action Buttons */}\r\n                <div className=\"flex gap-3\">\r\n                  <Button \r\n                    type=\"button\" \r\n                    variant=\"outline\" \r\n                    className=\"flex-1 h-11\" \r\n                    onClick={onClose}\r\n                    disabled={isDeleting || isLoading}\r\n                  >\r\n                    <X className=\"mr-2 h-4 w-4\" />\r\n                    Cancel\r\n                  </Button>\r\n                  <Button \r\n                    type=\"button\" \r\n                    variant=\"destructive\" \r\n                    className=\"flex-1 h-11\" \r\n                    onClick={handleConfirm}\r\n                    disabled={isDeleting || isLoading}\r\n                  >\r\n                    {isDeleting || isLoading ? (\r\n                      <>\r\n                        <div className=\"mr-2 h-4 w-4 animate-spin rounded-full border-2 border-white border-t-transparent\" />\r\n                        Deleting...\r\n                      </>\r\n                    ) : (\r\n                      <>\r\n                        <Trash2 className=\"mr-2 h-4 w-4\" />\r\n                        Delete Designation\r\n                      </>\r\n                    )}\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </div>\r\n      </SheetContent>\r\n    </Sheet>\r\n  )\r\n}\r\n","\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport { Button } from \"@/components/ui/ui copy/button\"\r\nimport { Card, CardContent, CardHeader } from \"@/components/ui/ui copy/card\"\r\nimport { Input } from \"@/components/ui/ui copy/input\"\r\nimport { Label } from \"@/components/ui/ui copy/label\"\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/ui copy/select\"\r\nimport { Checkbox } from \"@/components/ui/ui copy/checkbox\"\r\nimport {\r\n  Sheet,\r\n  SheetContent,\r\n  SheetDescription,\r\n  SheetHeader,\r\n  SheetTitle,\r\n} from \"@/components/ui/ui copy/sheet\"\r\nimport { Edit, Target, MapPin, Building2, Users, DollarSign, FileText } from \"lucide-react\"\r\n\r\ninterface Region {\r\n  id: number;\r\n  name: string;\r\n}\r\n\r\ninterface University {\r\n  id: number;\r\n  name: string;\r\n  regionId: number;\r\n}\r\n\r\ninterface SmallGroup {\r\n  id: number;\r\n  name: string;\r\n  universityId: number;\r\n  regionId: number;\r\n}\r\n\r\ninterface Designation {\r\n  id: number;\r\n  name: string;\r\n  description: string | null;\r\n  targetAmount: number | null;\r\n  currentAmount: number;\r\n  isActive: boolean;\r\n  regionId: number | null;\r\n  universityId: number | null;\r\n  smallGroupId: number | null;\r\n  region: { name: string } | null;\r\n  university: { name: string } | null;\r\n  smallgroup: { name: string } | null;\r\n}\r\n\r\ninterface EditDesignationModalProps {\r\n  designation: Designation | null\r\n  isOpen: boolean\r\n  onClose: () => void\r\n  onDesignationUpdated?: () => void\r\n}\r\n\r\nexport function EditDesignationModal({ designation, isOpen, onClose, onDesignationUpdated }: EditDesignationModalProps) {\r\n  const [isLoading, setIsLoading] = React.useState(false)\r\n  const [errors, setErrors] = React.useState<Record<string, string>>({})\r\n  const [success, setSuccess] = React.useState(false)\r\n  const [regions, setRegions] = React.useState<Region[]>([])\r\n  const [universities, setUniversities] = React.useState<University[]>([])\r\n  const [smallGroups, setSmallGroups] = React.useState<SmallGroup[]>([])\r\n  const [formData, setFormData] = React.useState({\r\n    name: \"\",\r\n    description: \"\",\r\n    targetAmount: \"\",\r\n    currentAmount: \"\",\r\n    regionId: \"\",\r\n    universityId: \"\",\r\n    smallGroupId: \"\",\r\n    isActive: true,\r\n  })\r\n\r\n  // Update form data when designation changes\r\n  React.useEffect(() => {\r\n    if (designation) {\r\n      setFormData({\r\n        name: designation.name || \"\",\r\n        description: designation.description || \"\",\r\n        targetAmount: designation.targetAmount?.toString() || \"\",\r\n        currentAmount: designation.currentAmount?.toString() || \"\",\r\n        regionId: designation.regionId?.toString() || \"\",\r\n        universityId: designation.universityId?.toString() || \"\",\r\n        smallGroupId: designation.smallGroupId?.toString() || \"\",\r\n        isActive: designation.isActive,\r\n      })\r\n    }\r\n  }, [designation])\r\n\r\n  // Fetch regions when modal opens\r\n  React.useEffect(() => {\r\n    if (isOpen) {\r\n      fetchRegions()\r\n    }\r\n  }, [isOpen])\r\n\r\n  // Fetch universities when region changes\r\n  React.useEffect(() => {\r\n    if (formData.regionId) {\r\n      fetchUniversities(Number(formData.regionId))\r\n    } else {\r\n      setUniversities([])\r\n      setFormData(prev => ({ ...prev, universityId: \"\", smallGroupId: \"\" }))\r\n    }\r\n  }, [formData.regionId])\r\n\r\n  // Fetch small groups when university changes\r\n  React.useEffect(() => {\r\n    if (formData.universityId) {\r\n      fetchSmallGroups(Number(formData.universityId))\r\n    } else {\r\n      setSmallGroups([])\r\n      setFormData(prev => ({ ...prev, smallGroupId: \"\" }))\r\n    }\r\n  }, [formData.universityId])\r\n\r\n  const fetchRegions = async () => {\r\n    try {\r\n      const response = await fetch('/api/regions')\r\n      const data = await response.json()\r\n      setRegions(data)\r\n    } catch (error) {\r\n      console.error('Error fetching regions:', error)\r\n    }\r\n  }\r\n\r\n  const fetchUniversities = async (regionId: number) => {\r\n    try {\r\n      const response = await fetch(`/api/universities?regionId=${regionId}`)\r\n      const data = await response.json()\r\n      setUniversities(data)\r\n    } catch (error) {\r\n      console.error('Error fetching universities:', error)\r\n    }\r\n  }\r\n\r\n  const fetchSmallGroups = async (universityId: number) => {\r\n    try {\r\n      const response = await fetch(`/api/small-groups?universityId=${universityId}`)\r\n      const data = await response.json()\r\n      setSmallGroups(data)\r\n    } catch (error) {\r\n      console.error('Error fetching small groups:', error)\r\n    }\r\n  }\r\n\r\n  const handleInputChange = (field: string, value: string | boolean) => {\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      [field]: value\r\n    }))\r\n    \r\n    // Clear error for this field when user starts typing\r\n    if (errors[field]) {\r\n      setErrors(prev => ({\r\n        ...prev,\r\n        [field]: \"\"\r\n      }))\r\n    }\r\n    \r\n    // Clear success state when user starts typing\r\n    if (success) {\r\n      setSuccess(false)\r\n    }\r\n  }\r\n\r\n  const validateForm = (): boolean => {\r\n    const newErrors: Record<string, string> = {}\r\n    \r\n    if (!formData.name.trim()) {\r\n      newErrors.name = \"Designation name is required\"\r\n    }\r\n    \r\n    if (formData.targetAmount && isNaN(Number(formData.targetAmount))) {\r\n      newErrors.targetAmount = \"Target amount must be a valid number\"\r\n    }\r\n    \r\n    if (formData.currentAmount && isNaN(Number(formData.currentAmount))) {\r\n      newErrors.currentAmount = \"Current amount must be a valid number\"\r\n    }\r\n    \r\n    if (Number(formData.targetAmount) < 0) {\r\n      newErrors.targetAmount = \"Target amount must be non-negative\"\r\n    }\r\n    \r\n    if (Number(formData.currentAmount) < 0) {\r\n      newErrors.currentAmount = \"Current amount must be non-negative\"\r\n    }\r\n    \r\n    setErrors(newErrors)\r\n    return Object.keys(newErrors).length === 0\r\n  }\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault()\r\n    \r\n    if (!designation) return\r\n    \r\n    if (!validateForm()) {\r\n      return\r\n    }\r\n\r\n    setIsLoading(true)\r\n    \r\n    try {\r\n      console.log('Updating designation data:', formData)\r\n      \r\n      const response = await fetch(`/api/designations/${designation.id}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          name: formData.name,\r\n          description: formData.description || null,\r\n          targetAmount: formData.targetAmount ? Number(formData.targetAmount) : null,\r\n          currentAmount: formData.currentAmount ? Number(formData.currentAmount) : 0,\r\n          regionId: formData.regionId ? Number(formData.regionId) : null,\r\n          universityId: formData.universityId ? Number(formData.universityId) : null,\r\n          smallGroupId: formData.smallGroupId ? Number(formData.smallGroupId) : null,\r\n          isActive: formData.isActive\r\n        })\r\n      })\r\n      const data = await response.json()\r\n      \r\n      console.log('API response:', { status: response.status, data })\r\n      \r\n      if (response.ok) {\r\n        // Show success message\r\n        setSuccess(true)\r\n        setErrors({})\r\n        \r\n        // Call the callback to refresh the designations list\r\n        if (onDesignationUpdated) {\r\n          onDesignationUpdated()\r\n        }\r\n        \r\n        // Close modal after a short delay\r\n        setTimeout(() => {\r\n          onClose()\r\n          setSuccess(false)\r\n        }, 1500)\r\n      } else {\r\n        // Handle API errors\r\n        console.error('API Error:', data)\r\n        setErrors({ general: data.error || \"Failed to update designation\" })\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error updating designation:\", error)\r\n      setErrors({ general: \"An unexpected error occurred\" })\r\n    } finally {\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n\r\n  if (!designation) return null\r\n\r\n  return (\r\n    <Sheet open={isOpen} onOpenChange={onClose}>\r\n      <SheetContent side=\"top\" className=\"h-full w-full max-w-none overflow-y-auto\">\r\n        <div className=\"container mx-auto max-w-2xl py-8\">\r\n          <SheetHeader className=\"pb-8 text-center\">\r\n            <SheetTitle className=\"flex items-center justify-center gap-3 text-2xl\">\r\n              <div className=\"flex h-12 w-12 items-center justify-center rounded-lg bg-primary/10\">\r\n                <Edit className=\"h-6 w-6 text-primary\" />\r\n              </div>\r\n              Edit Designation\r\n            </SheetTitle>\r\n            <SheetDescription className=\"text-lg text-muted-foreground\">\r\n              Update the designation information below.\r\n            </SheetDescription>\r\n          </SheetHeader>\r\n          \r\n          <Card className=\"shadow-lg\">\r\n            <CardHeader className=\"pb-6\">\r\n              <div className=\"text-center\">\r\n                <h3 className=\"text-lg font-semibold\">Designation Information</h3>\r\n                <p className=\"text-sm text-muted-foreground\">Update the details below to modify this designation</p>\r\n              </div>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <form onSubmit={handleSubmit} className=\"flex flex-col gap-6\">\r\n                {errors.general && (\r\n                  <div className=\"p-3 text-sm text-red-600 bg-red-50 border border-red-200 rounded-md\">\r\n                    {errors.general}\r\n                  </div>\r\n                )}\r\n\r\n                {/* Designation Information */}\r\n                <div className=\"space-y-4\">\r\n                  <h4 className=\"text-md font-semibold text-foreground border-b pb-2\">Designation Details</h4>\r\n                  \r\n                  <div className=\"space-y-2\">\r\n                    <Label htmlFor=\"name\" className=\"text-sm font-medium flex items-center gap-2\">\r\n                      <Target className=\"h-4 w-4\" />\r\n                      Designation Name *\r\n                    </Label>\r\n                    <Input\r\n                      id=\"name\"\r\n                      placeholder=\"Enter designation name\"\r\n                      className=\"h-11\"\r\n                      value={formData.name}\r\n                      onChange={(e) => handleInputChange(\"name\", e.target.value)}\r\n                      required\r\n                    />\r\n                    {errors.name && <p className=\"text-sm text-red-600\">{errors.name}</p>}\r\n                  </div>\r\n\r\n                  <div className=\"space-y-2\">\r\n                    <Label htmlFor=\"description\" className=\"text-sm font-medium flex items-center gap-2\">\r\n                      <FileText className=\"h-4 w-4\" />\r\n                      Description (Optional)\r\n                    </Label>\r\n                    <Input\r\n                      id=\"description\"\r\n                      placeholder=\"Enter designation description\"\r\n                      className=\"h-11\"\r\n                      value={formData.description}\r\n                      onChange={(e) => handleInputChange(\"description\", e.target.value)}\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                    <div className=\"space-y-2\">\r\n                      <Label htmlFor=\"targetAmount\" className=\"text-sm font-medium flex items-center gap-2\">\r\n                        <DollarSign className=\"h-4 w-4\" />\r\n                        Target Amount (Optional)\r\n                      </Label>\r\n                      <Input\r\n                        id=\"targetAmount\"\r\n                        type=\"number\"\r\n                        step=\"0.01\"\r\n                        min=\"0\"\r\n                        placeholder=\"0.00\"\r\n                        className=\"h-11\"\r\n                        value={formData.targetAmount}\r\n                        onChange={(e) => handleInputChange(\"targetAmount\", e.target.value)}\r\n                      />\r\n                      {errors.targetAmount && <p className=\"text-sm text-red-600\">{errors.targetAmount}</p>}\r\n                    </div>\r\n\r\n                    <div className=\"space-y-2\">\r\n                      <Label htmlFor=\"currentAmount\" className=\"text-sm font-medium flex items-center gap-2\">\r\n                        <DollarSign className=\"h-4 w-4\" />\r\n                        Current Amount (Optional)\r\n                      </Label>\r\n                      <Input\r\n                        id=\"currentAmount\"\r\n                        type=\"number\"\r\n                        step=\"0.01\"\r\n                        min=\"0\"\r\n                        placeholder=\"0.00\"\r\n                        className=\"h-11\"\r\n                        value={formData.currentAmount}\r\n                        onChange={(e) => handleInputChange(\"currentAmount\", e.target.value)}\r\n                      />\r\n                      {errors.currentAmount && <p className=\"text-sm text-red-600\">{errors.currentAmount}</p>}\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"space-y-2\">\r\n                    <Label htmlFor=\"regionId\" className=\"text-sm font-medium flex items-center gap-2\">\r\n                      <MapPin className=\"h-4 w-4\" />\r\n                      Region (Optional)\r\n                    </Label>\r\n                    <Select\r\n                      value={formData.regionId}\r\n                      onValueChange={(value) => handleInputChange(\"regionId\", value)}\r\n                    >\r\n                      <SelectTrigger className=\"h-11\">\r\n                        <SelectValue placeholder=\"Select a region (optional)\" />\r\n                      </SelectTrigger>\r\n                      <SelectContent>\r\n                        {regions.map((region) => (\r\n                          <SelectItem key={region.id} value={region.id.toString()}>\r\n                            {region.name}\r\n                          </SelectItem>\r\n                        ))}\r\n                      </SelectContent>\r\n                    </Select>\r\n                  </div>\r\n\r\n                  <div className=\"space-y-2\">\r\n                    <Label htmlFor=\"universityId\" className=\"text-sm font-medium flex items-center gap-2\">\r\n                      <Building2 className=\"h-4 w-4\" />\r\n                      University (Optional)\r\n                    </Label>\r\n                    <Select\r\n                      value={formData.universityId}\r\n                      onValueChange={(value) => handleInputChange(\"universityId\", value)}\r\n                      disabled={!formData.regionId}\r\n                    >\r\n                      <SelectTrigger className=\"h-11\">\r\n                        <SelectValue placeholder={formData.regionId ? \"Select a university (optional)\" : \"Select a region first\"} />\r\n                      </SelectTrigger>\r\n                      <SelectContent>\r\n                        {universities.map((university) => (\r\n                          <SelectItem key={university.id} value={university.id.toString()}>\r\n                            {university.name}\r\n                          </SelectItem>\r\n                        ))}\r\n                      </SelectContent>\r\n                    </Select>\r\n                  </div>\r\n\r\n                  <div className=\"space-y-2\">\r\n                    <Label htmlFor=\"smallGroupId\" className=\"text-sm font-medium flex items-center gap-2\">\r\n                      <Users className=\"h-4 w-4\" />\r\n                      Small Group (Optional)\r\n                    </Label>\r\n                    <Select\r\n                      value={formData.smallGroupId}\r\n                      onValueChange={(value) => handleInputChange(\"smallGroupId\", value)}\r\n                      disabled={!formData.universityId}\r\n                    >\r\n                      <SelectTrigger className=\"h-11\">\r\n                        <SelectValue placeholder={formData.universityId ? \"Select a small group (optional)\" : \"Select a university first\"} />\r\n                      </SelectTrigger>\r\n                      <SelectContent>\r\n                        {smallGroups.map((smallGroup) => (\r\n                          <SelectItem key={smallGroup.id} value={smallGroup.id.toString()}>\r\n                            {smallGroup.name}\r\n                          </SelectItem>\r\n                        ))}\r\n                      </SelectContent>\r\n                    </Select>\r\n                  </div>\r\n\r\n                  <div className=\"flex items-center space-x-2\">\r\n                    <Checkbox\r\n                      id=\"isActive\"\r\n                      checked={formData.isActive}\r\n                      onCheckedChange={(checked) => handleInputChange(\"isActive\", checked as boolean)}\r\n                    />\r\n                    <Label htmlFor=\"isActive\" className=\"text-sm font-medium\">\r\n                      Designation is active\r\n                    </Label>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"flex gap-3 pt-6 border-t\">\r\n                  <Button \r\n                    type=\"button\" \r\n                    variant=\"outline\" \r\n                    className=\"flex-1 h-11\" \r\n                    onClick={onClose}\r\n                    disabled={isLoading}\r\n                  >\r\n                    Cancel\r\n                  </Button>\r\n                  <Button \r\n                    type=\"submit\" \r\n                    className=\"flex-1 h-11\" \r\n                    disabled={isLoading || success}\r\n                  >\r\n                    {isLoading ? (\r\n                      \"Updating...\"\r\n                    ) : success ? (\r\n                      \"✅ Updated Successfully!\"\r\n                    ) : (\r\n                      <>\r\n                        <Edit className=\"mr-2 h-4 w-4\" />\r\n                        Update Designation\r\n                      </>\r\n                    )}\r\n                  </Button>\r\n                </div>\r\n              </form>\r\n            </CardContent>\r\n          </Card>\r\n        </div>\r\n      </SheetContent>\r\n    </Sheet>\r\n  )\r\n}\r\n"],"names":[],"mappings":"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"}