{"version":3,"sources":["turbopack:///[project]/app/links/organization/regions/page.tsx","turbopack:///[project]/components/add-region-modal.tsx","turbopack:///[project]/components/delete-region-modal.tsx","turbopack:///[project]/components/edit-region-modal.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Search, RefreshCw, Plus, Edit, Trash2, MapPin } from 'lucide-react';\nimport { AppSidebar } from \"@/components/app-sidebar\";\nimport { AddRegionModal } from \"@/components/add-region-modal\";\nimport { DeleteRegionModal } from \"@/components/delete-region-modal\";\nimport { EditRegionModal } from \"@/components/edit-region-modal\";\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbList,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n} from \"@/components/ui/breadcrumb\";\nimport { Separator } from \"@/components/ui/separator\";\nimport {\n  SidebarInset,\n  SidebarProvider,\n  SidebarTrigger,\n} from \"@/components/ui/sidebar\";\n\ninterface Region {\n  id: number;\n  name: string;\n}\n\nexport default function RegionsPage() {\n  const [searchTerm, setSearchTerm] = useState('');\n  const [regions, setRegions] = useState<Region[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [deleteModal, setDeleteModal] = useState<{\n    isOpen: boolean;\n    regionId: number | null;\n    regionName: string;\n  }>({\n    isOpen: false,\n    regionId: null,\n    regionName: ''\n  });\n  const [deleting, setDeleting] = useState(false);\n  const [editingRegion, setEditingRegion] = useState<Region | null>(null);\n\n  // Fetch regions from API\n  const fetchRegions = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const response = await axios.get('/api/regions');\n      setRegions(response.data);\n    } catch (err) {\n      console.error('Error fetching regions:', err);\n      setError('Failed to fetch regions. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Open delete confirmation modal\n  const openDeleteModal = (regionId: number, regionName: string) => {\n    setDeleteModal({\n      isOpen: true,\n      regionId,\n      regionName\n    });\n  };\n\n  // Close delete confirmation modal\n  const closeDeleteModal = () => {\n    setDeleteModal({\n      isOpen: false,\n      regionId: null,\n      regionName: ''\n    });\n  };\n\n  // Open edit modal\n  const openEditModal = (region: Region) => {\n    setEditingRegion(region);\n  };\n\n  // Close edit modal\n  const closeEditModal = () => {\n    setEditingRegion(null);\n  };\n\n  // Delete region function\n  const deleteRegion = async () => {\n    if (!deleteModal.regionId) return;\n\n    setDeleting(true);\n    \n    try {\n      const response = await axios.delete(`/api/regions?id=${deleteModal.regionId}`);\n      \n      if (response.status === 200) {\n        // Remove the region from the local state\n        setRegions(prev => prev.filter(region => region.id !== deleteModal.regionId));\n        \n        // Close the modal\n        closeDeleteModal();\n        \n        // Show success message (you could add a toast notification here)\n        console.log('Region deleted successfully');\n      }\n    } catch (err) {\n      console.error('Error deleting region:', err);\n      alert('Failed to delete region. Please try again.');\n    } finally {\n      setDeleting(false);\n    }\n  };\n\n  // Load regions on component mount\n  useEffect(() => {\n    fetchRegions();\n  }, []);\n\n  const filteredRegions = regions.filter(region => {\n    if (!searchTerm) return true;\n    \n    const searchLower = searchTerm.toLowerCase();\n    \n    return (\n      region.name?.toLowerCase().includes(searchLower)\n    );\n  });\n\n  return (\n    <SidebarProvider>\n      <AppSidebar />\n      <SidebarInset>\n        <header className=\"flex h-16 shrink-0 items-center gap-2 transition-[width,height] ease-linear group-has-data-[collapsible=icon]/sidebar-wrapper:h-12\">\n          <div className=\"flex items-center gap-2 px-4\">\n            <SidebarTrigger className=\"-ml-1\" />\n            <Separator\n              orientation=\"vertical\"\n              className=\"mr-2 data-[orientation=vertical]:h-4\"\n            />\n            <Breadcrumb>\n              <BreadcrumbList>\n                <BreadcrumbItem className=\"hidden md:block\">\n                  <BreadcrumbLink href=\"/dashboard\">\n                    Dashboard\n                  </BreadcrumbLink>\n                </BreadcrumbItem>\n                <BreadcrumbSeparator className=\"hidden md:block\" />\n                <BreadcrumbItem>\n                  <BreadcrumbLink href=\"/links/organization\">\n                    Organization\n                  </BreadcrumbLink>\n                </BreadcrumbItem>\n                <BreadcrumbSeparator />\n                <BreadcrumbItem>\n                  <BreadcrumbPage>Regions</BreadcrumbPage>\n                </BreadcrumbItem>\n              </BreadcrumbList>\n            </Breadcrumb>\n          </div>\n        </header>\n        <div className=\"flex flex-1 flex-col gap-4 p-2 sm:p-4 pt-0\">\n          <div className=\"max-w-7xl mx-auto w-full\">\n            {/* Header */}\n            <div className=\"mb-4 sm:mb-6 lg:mb-8\">\n              <h1 className=\"text-2xl sm:text-3xl font-bold text-foreground mb-1 sm:mb-2\">Regions Management</h1>\n              <p className=\"text-sm sm:text-base text-muted-foreground\">Manage regions and their information across the organization</p>\n            </div>\n\n            {/* Search and Actions */}\n            <div className=\"flex flex-col sm:flex-row gap-3 sm:gap-4 items-stretch sm:items-center justify-between mb-4 sm:mb-6\">\n              <div className=\"flex flex-col sm:flex-row gap-2 sm:gap-3 flex-1\">\n                {/* Search */}\n                <div className=\"relative flex-1 max-w-md\">\n                  <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-muted-foreground w-4 h-4\" />\n                  <input\n                    type=\"text\"\n                    placeholder=\"Search regions...\"\n                    value={searchTerm}\n                    onChange={(e) => setSearchTerm(e.target.value)}\n                    className=\"w-full pl-10 pr-4 py-2 sm:py-2.5 bg-muted/30 border border-border/20 rounded-lg focus:ring-2 focus:ring-primary/20 focus:border-primary/50 focus:bg-muted/50 transition-all duration-200 text-foreground placeholder:text-muted-foreground text-sm sm:text-base\"\n                  />\n                </div>\n\n                {/* Refresh Button */}\n                <button \n                  onClick={fetchRegions}\n                  disabled={loading}\n                  className=\"flex items-center justify-center gap-2 px-3 sm:px-4 py-2 sm:py-2.5 text-foreground bg-muted/30 hover:bg-muted/50 border border-border/20 hover:border-border/40 rounded-lg transition-all duration-200 text-sm sm:text-base disabled:opacity-50 disabled:cursor-not-allowed\"\n                >\n                  <RefreshCw className={`w-4 h-4 ${loading ? 'animate-spin' : ''}`} />\n                  <span className=\"hidden sm:inline\">{loading ? 'Loading...' : 'Refresh'}</span>\n                </button>\n              </div>\n\n              {/* Add New Region Button */}\n              <AddRegionModal onRegionAdded={fetchRegions}>\n                <button className=\"flex items-center justify-center gap-2 px-4 sm:px-6 py-2 sm:py-2.5 bg-muted text-foreground hover:bg-muted/80 rounded-md transition-all duration-200 shadow-sm text-sm sm:text-base\">\n                  <Plus className=\"w-4 h-4\" />\n                  <span className=\"hidden sm:inline\">Add New Region</span>\n                  <span className=\"sm:hidden\">Add Region</span>\n                </button>\n              </AddRegionModal>\n            </div>\n\n            {/* Error State */}\n            {error && (\n              <div className=\"bg-destructive/10 border border-destructive/20 rounded-lg p-4 mb-6\">\n                <div className=\"flex items-center gap-2 text-destructive\">\n                  <span className=\"text-sm font-medium\">Error:</span>\n                  <span className=\"text-sm\">{error}</span>\n                </div>\n                <button \n                  onClick={fetchRegions}\n                  className=\"mt-2 text-sm text-destructive hover:text-destructive/80 underline\"\n                >\n                  Try again\n                </button>\n              </div>\n            )}\n\n            {/* Regions Table */}\n            <div className=\"bg-card rounded-lg shadow-sm border border-border overflow-hidden\">\n              {loading ? (\n                <div className=\"flex items-center justify-center py-12\">\n                  <div className=\"flex items-center gap-2 text-muted-foreground\">\n                    <RefreshCw className=\"w-4 h-4 animate-spin\" />\n                    <span>Loading regions...</span>\n                  </div>\n                </div>\n              ) : (\n                <div className=\"overflow-x-auto\">\n                  <table className=\"w-full min-w-[600px]\">\n                    <thead className=\"bg-muted/50 border-b border-border\">\n                      <tr>\n                        <th className=\"px-3 sm:px-6 py-3 text-left text-xs font-medium text-muted-foreground uppercase tracking-wider\">\n                          ID\n                        </th>\n                        <th className=\"px-3 sm:px-6 py-3 text-left text-xs font-medium text-muted-foreground uppercase tracking-wider\">\n                          Region Name\n                        </th>\n                        <th className=\"px-3 sm:px-6 py-3 text-left text-xs font-medium text-muted-foreground uppercase tracking-wider\">\n                          Actions\n                        </th>\n                      </tr>\n                    </thead>\n                    <tbody className=\"bg-card divide-y divide-border\">\n                    {filteredRegions.map((region) => (\n                      <tr key={region.id} className=\"hover:bg-muted/50\">\n                        <td className=\"px-3 sm:px-6 py-3 sm:py-4 text-sm font-medium text-foreground\">\n                          {region.id}\n                        </td>\n                        <td className=\"px-3 sm:px-6 py-3 sm:py-4 text-sm text-foreground\">\n                          {region.name}\n                        </td>\n                        <td className=\"px-3 sm:px-6 py-3 sm:py-4 text-sm font-medium\">\n                          <div className=\"flex items-center gap-1 sm:gap-2\">\n                            <button \n                              onClick={() => openEditModal(region)}\n                              className=\"text-muted-foreground hover:text-foreground p-1 rounded\" \n                              title=\"Edit\"\n                            >\n                              <Edit className=\"w-4 h-4\" />\n                            </button>\n                            <button \n                              onClick={() => openDeleteModal(region.id, region.name)}\n                              className=\"text-destructive hover:text-destructive/80 p-1 rounded\" \n                              title=\"Delete\"\n                            >\n                              <Trash2 className=\"w-4 h-4\" />\n                            </button>\n                          </div>\n                        </td>\n                      </tr>\n                    ))}\n                    </tbody>\n                  </table>\n                </div>\n              )}\n\n              {/* Empty State */}\n              {!loading && filteredRegions.length === 0 && !error && (\n                <div className=\"flex flex-col items-center justify-center py-12\">\n                  <MapPin className=\"w-12 h-12 text-muted-foreground mb-4\" />\n                  <h3 className=\"text-lg font-medium text-foreground mb-2\">No regions found</h3>\n                  <p className=\"text-muted-foreground text-center mb-4\">\n                    {searchTerm ? 'No regions match your search criteria.' : 'No regions have been added yet.'}\n                  </p>\n                  {!searchTerm && (\n                    <AddRegionModal onRegionAdded={fetchRegions}>\n                      <button className=\"flex items-center gap-2 px-4 py-2 bg-primary text-primary-foreground rounded-md hover:bg-primary/90 transition-colors\">\n                        <Plus className=\"w-4 h-4\" />\n                        Add First Region\n                      </button>\n                    </AddRegionModal>\n                  )}\n                </div>\n              )}\n\n              {/* Table Footer */}\n              {!loading && filteredRegions.length > 0 && (\n                <div className=\"bg-muted/50 px-3 sm:px-6 py-3 border-t border-border\">\n                  <div className=\"flex flex-col sm:flex-row items-center justify-between gap-2 sm:gap-0\">\n                    <div className=\"text-xs sm:text-sm text-muted-foreground text-center sm:text-left\">\n                      Showing <span className=\"font-medium text-foreground\">{filteredRegions.length}</span> of <span className=\"font-medium text-foreground\">{regions.length}</span> regions\n                    </div>\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </SidebarInset>\n      \n      {/* Delete Confirmation Modal */}\n      <DeleteRegionModal\n        isOpen={deleteModal.isOpen}\n        onClose={closeDeleteModal}\n        onConfirm={deleteRegion}\n        regionName={deleteModal.regionName}\n        isLoading={deleting}\n      />\n      \n      {/* Edit Region Modal */}\n      <EditRegionModal\n        region={editingRegion}\n        onRegionUpdated={fetchRegions}\n        isOpen={editingRegion !== null}\n        onClose={closeEditModal}\n      />\n    </SidebarProvider>\n  );\n}\n","\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport { Button } from \"@/components/ui/ui copy/button\"\r\nimport { Card, CardContent, CardHeader } from \"@/components/ui/ui copy/card\"\r\nimport { Input } from \"@/components/ui/ui copy/input\"\r\nimport { Label } from \"@/components/ui/ui copy/label\"\r\nimport {\r\n  Sheet,\r\n  SheetContent,\r\n  SheetDescription,\r\n  SheetHeader,\r\n  SheetTitle,\r\n  SheetTrigger,\r\n} from \"@/components/ui/ui copy/sheet\"\r\nimport { Plus, MapPin } from \"lucide-react\"\r\n\r\ninterface AddRegionModalProps {\r\n  children: React.ReactNode\r\n  onRegionAdded?: () => void\r\n}\r\n\r\nexport function AddRegionModal({ children, onRegionAdded }: AddRegionModalProps) {\r\n  const [open, setOpen] = React.useState(false)\r\n  const [isLoading, setIsLoading] = React.useState(false)\r\n  const [errors, setErrors] = React.useState<Record<string, string>>({})\r\n  const [success, setSuccess] = React.useState(false)\r\n  const [formData, setFormData] = React.useState({\r\n    name: \"\",\r\n  })\r\n\r\n  const handleInputChange = (field: string, value: string) => {\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      [field]: value\r\n    }))\r\n    \r\n    // Clear error for this field when user starts typing\r\n    if (errors[field]) {\r\n      setErrors(prev => ({\r\n        ...prev,\r\n        [field]: \"\"\r\n      }))\r\n    }\r\n    \r\n    // Clear success state when user starts typing\r\n    if (success) {\r\n      setSuccess(false)\r\n    }\r\n  }\r\n\r\n  const validateForm = (): boolean => {\r\n    if (!formData.name.trim()) {\r\n      setErrors({ name: \"Region name is required\" })\r\n      return false\r\n    }\r\n    setErrors({})\r\n    return true\r\n  }\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault()\r\n    \r\n    if (!validateForm()) {\r\n      return\r\n    }\r\n\r\n    setIsLoading(true)\r\n    \r\n    try {\r\n      console.log('Creating region data:', formData)\r\n      \r\n      const response = await fetch('/api/regions', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(formData)\r\n      })\r\n      const data = await response.json()\r\n      \r\n      console.log('API response:', { status: response.status, data })\r\n      \r\n      if (response.ok) {\r\n        // Show success message\r\n        setSuccess(true)\r\n        setErrors({})\r\n        \r\n        // Reset form\r\n        setFormData({\r\n          name: \"\",\r\n        })\r\n        \r\n        // Call the callback to refresh the regions list\r\n        if (onRegionAdded) {\r\n          onRegionAdded()\r\n        }\r\n        \r\n        // Close modal after a short delay\r\n        setTimeout(() => {\r\n          setOpen(false)\r\n          setSuccess(false)\r\n        }, 1500)\r\n      } else {\r\n        // Handle API errors\r\n        console.error('API Error:', data)\r\n        setErrors({ general: data.error || \"Failed to create region\" })\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error creating region:\", error)\r\n      setErrors({ general: \"An unexpected error occurred\" })\r\n    } finally {\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Sheet open={open} onOpenChange={setOpen}>\r\n      <SheetTrigger asChild>\r\n        {children}\r\n      </SheetTrigger>\r\n      <SheetContent side=\"top\" className=\"h-full w-full max-w-none overflow-y-auto\">\r\n        <div className=\"container mx-auto max-w-2xl py-8\">\r\n          <SheetHeader className=\"pb-8 text-center\">\r\n            <SheetTitle className=\"flex items-center justify-center gap-3 text-2xl\">\r\n              <div className=\"flex h-12 w-12 items-center justify-center rounded-lg bg-primary/10\">\r\n                <Plus className=\"h-6 w-6 text-primary\" />\r\n              </div>\r\n              Add New Region\r\n            </SheetTitle>\r\n            <SheetDescription className=\"text-lg text-muted-foreground\">\r\n              Add a new region to your organization.\r\n            </SheetDescription>\r\n          </SheetHeader>\r\n          \r\n          <Card className=\"shadow-lg\">\r\n            <CardHeader className=\"pb-6\">\r\n              <div className=\"text-center\">\r\n                <h3 className=\"text-lg font-semibold\">Region Information</h3>\r\n                <p className=\"text-sm text-muted-foreground\">Fill in the details below to add a new region</p>\r\n              </div>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <form onSubmit={handleSubmit} className=\"flex flex-col gap-6\">\r\n                {errors.general && (\r\n                  <div className=\"p-3 text-sm text-red-600 bg-red-50 border border-red-200 rounded-md\">\r\n                    {errors.general}\r\n                  </div>\r\n                )}\r\n\r\n                {/* Region Information */}\r\n                <div className=\"space-y-4\">\r\n                  <h4 className=\"text-md font-semibold text-foreground border-b pb-2\">Region Details</h4>\r\n                  \r\n                  <div className=\"space-y-2\">\r\n                    <Label htmlFor=\"name\" className=\"text-sm font-medium flex items-center gap-2\">\r\n                      <MapPin className=\"h-4 w-4\" />\r\n                      Region Name *\r\n                    </Label>\r\n                    <Input\r\n                      id=\"name\"\r\n                      placeholder=\"Enter region name\"\r\n                      className=\"h-11\"\r\n                      value={formData.name}\r\n                      onChange={(e) => handleInputChange(\"name\", e.target.value)}\r\n                      required\r\n                    />\r\n                    {errors.name && <p className=\"text-sm text-red-600\">{errors.name}</p>}\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"flex gap-3 pt-6 border-t\">\r\n                  <Button \r\n                    type=\"button\" \r\n                    variant=\"outline\" \r\n                    className=\"flex-1 h-11\" \r\n                    onClick={() => setOpen(false)}\r\n                    disabled={isLoading}\r\n                  >\r\n                    Cancel\r\n                  </Button>\r\n                  <Button \r\n                    type=\"submit\" \r\n                    className=\"flex-1 h-11\" \r\n                    disabled={isLoading || success}\r\n                  >\r\n                    {isLoading ? (\r\n                      \"Creating...\"\r\n                    ) : success ? (\r\n                      \"✅ Created Successfully!\"\r\n                    ) : (\r\n                      <>\r\n                        <Plus className=\"mr-2 h-4 w-4\" />\r\n                        Add Region\r\n                      </>\r\n                    )}\r\n                  </Button>\r\n                </div>\r\n              </form>\r\n            </CardContent>\r\n          </Card>\r\n        </div>\r\n      </SheetContent>\r\n    </Sheet>\r\n  )\r\n}\r\n","\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport { Button } from \"@/components/ui/ui copy/button\"\r\nimport {\r\n  Sheet,\r\n  SheetContent,\r\n  SheetDescription,\r\n  SheetHeader,\r\n  SheetTitle,\r\n} from \"@/components/ui/ui copy/sheet\"\r\nimport { Trash2, AlertTriangle } from \"lucide-react\"\r\n\r\ninterface DeleteRegionModalProps {\r\n  isOpen: boolean\r\n  onClose: () => void\r\n  onConfirm: () => void\r\n  regionName: string\r\n  isLoading?: boolean\r\n}\r\n\r\nexport function DeleteRegionModal({ \r\n  isOpen, \r\n  onClose, \r\n  onConfirm, \r\n  regionName, \r\n  isLoading = false \r\n}: DeleteRegionModalProps) {\r\n  return (\r\n    <Sheet open={isOpen} onOpenChange={onClose}>\r\n      <SheetContent side=\"top\" className=\"h-auto w-full max-w-md mx-auto\">\r\n        <div className=\"py-8\">\r\n          <SheetHeader className=\"pb-6 text-center\">\r\n            <div className=\"flex justify-center mb-4\">\r\n              <div className=\"flex h-16 w-16 items-center justify-center rounded-full bg-destructive/10\">\r\n                <AlertTriangle className=\"h-8 w-8 text-destructive\" />\r\n              </div>\r\n            </div>\r\n            <SheetTitle className=\"text-xl text-destructive\">Delete Region</SheetTitle>\r\n            <SheetDescription className=\"text-base\">\r\n              Are you sure you want to delete <strong>{regionName}</strong>? This action cannot be undone.\r\n            </SheetDescription>\r\n          </SheetHeader>\r\n          \r\n          <div className=\"space-y-4\">\r\n            <div className=\"p-4 bg-destructive/5 border border-destructive/20 rounded-lg\">\r\n              <div className=\"flex items-start gap-3\">\r\n                <Trash2 className=\"h-5 w-5 text-destructive mt-0.5\" />\r\n                <div className=\"text-sm text-destructive\">\r\n                  <p className=\"font-medium mb-1\">Warning:</p>\r\n                  <p>This will permanently remove the region and all associated data from the system.</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"flex gap-3 pt-4\">\r\n              <Button \r\n                type=\"button\" \r\n                variant=\"outline\" \r\n                className=\"flex-1\" \r\n                onClick={onClose}\r\n                disabled={isLoading}\r\n              >\r\n                Cancel\r\n              </Button>\r\n              <Button \r\n                type=\"button\" \r\n                variant=\"destructive\" \r\n                className=\"flex-1\" \r\n                onClick={onConfirm}\r\n                disabled={isLoading}\r\n              >\r\n                {isLoading ? (\r\n                  \"Deleting...\"\r\n                ) : (\r\n                  <>\r\n                    <Trash2 className=\"mr-2 h-4 w-4\" />\r\n                    Delete Region\r\n                  </>\r\n                )}\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </SheetContent>\r\n    </Sheet>\r\n  )\r\n}\r\n","\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport { Button } from \"@/components/ui/ui copy/button\"\r\nimport { Card, CardContent, CardHeader } from \"@/components/ui/ui copy/card\"\r\nimport { Input } from \"@/components/ui/ui copy/input\"\r\nimport { Label } from \"@/components/ui/ui copy/label\"\r\nimport {\r\n  Sheet,\r\n  SheetContent,\r\n  SheetDescription,\r\n  SheetHeader,\r\n  SheetTitle,\r\n  \r\n} from \"@/components/ui/ui copy/sheet\"\r\nimport { Edit, MapPin } from \"lucide-react\"\r\n\r\ninterface Region {\r\n  id: number;\r\n  name: string;\r\n}\r\n\r\ninterface EditRegionModalProps {\r\n  region: Region | null\r\n  onRegionUpdated?: () => void\r\n  isOpen: boolean\r\n  onClose: () => void\r\n}\r\n\r\nexport function EditRegionModal({ region, onRegionUpdated, isOpen, onClose }: EditRegionModalProps) {\r\n  const [isLoading, setIsLoading] = React.useState(false)\r\n  const [errors, setErrors] = React.useState<Record<string, string>>({})\r\n  const [success, setSuccess] = React.useState(false)\r\n  const [formData, setFormData] = React.useState({\r\n    name: \"\",\r\n  })\r\n\r\n  // Populate form data when region changes\r\n  React.useEffect(() => {\r\n    if (region) {\r\n      setFormData({\r\n        name: region.name || \"\",\r\n      })\r\n    }\r\n  }, [region])\r\n\r\n  const handleInputChange = (field: string, value: string) => {\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      [field]: value\r\n    }))\r\n    \r\n    // Clear error for this field when user starts typing\r\n    if (errors[field]) {\r\n      setErrors(prev => ({\r\n        ...prev,\r\n        [field]: \"\"\r\n      }))\r\n    }\r\n    \r\n    // Clear success state when user starts typing\r\n    if (success) {\r\n      setSuccess(false)\r\n    }\r\n  }\r\n\r\n  const validateForm = (): boolean => {\r\n    if (!formData.name.trim()) {\r\n      setErrors({ name: \"Region name is required\" })\r\n      return false\r\n    }\r\n    setErrors({})\r\n    return true\r\n  }\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault()\r\n    \r\n    if (!region) return\r\n    \r\n    if (!validateForm()) {\r\n      return\r\n    }\r\n\r\n    setIsLoading(true)\r\n    \r\n    try {\r\n      console.log('Updating region data:', formData)\r\n      \r\n      const response = await fetch(`/api/regions?id=${region.id}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(formData)\r\n      })\r\n      const data = await response.json()\r\n      \r\n      console.log('API response:', { status: response.status, data })\r\n      \r\n      if (response.ok) {\r\n        // Show success message\r\n        setSuccess(true)\r\n        setErrors({})\r\n        \r\n        // Call the callback to refresh the regions list\r\n        if (onRegionUpdated) {\r\n          onRegionUpdated()\r\n        }\r\n        \r\n        // Close modal after a short delay\r\n        setTimeout(() => {\r\n          onClose()\r\n          setSuccess(false)\r\n        }, 1500)\r\n      } else {\r\n        // Handle API errors\r\n        console.error('API Error:', data)\r\n        setErrors({ general: data.error || \"Failed to update region\" })\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error updating region:\", error)\r\n      setErrors({ general: \"An unexpected error occurred\" })\r\n    } finally {\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n\r\n  if (!region) return null\r\n\r\n  return (\r\n    <Sheet open={isOpen} onOpenChange={onClose}>\r\n      <SheetContent side=\"top\" className=\"h-full w-full max-w-none overflow-y-auto\">\r\n        <div className=\"container mx-auto max-w-2xl py-8\">\r\n          <SheetHeader className=\"pb-8 text-center\">\r\n            <SheetTitle className=\"flex items-center justify-center gap-3 text-2xl\">\r\n              <div className=\"flex h-12 w-12 items-center justify-center rounded-lg bg-primary/10\">\r\n                <Edit className=\"h-6 w-6 text-primary\" />\r\n              </div>\r\n              Edit Region\r\n            </SheetTitle>\r\n            <SheetDescription className=\"text-lg text-muted-foreground\">\r\n              Update region information for {region.name}.\r\n            </SheetDescription>\r\n          </SheetHeader>\r\n          \r\n          <Card className=\"shadow-lg\">\r\n            <CardHeader className=\"pb-6\">\r\n              <div className=\"text-center\">\r\n                <h3 className=\"text-lg font-semibold\">Region Information</h3>\r\n                <p className=\"text-sm text-muted-foreground\">Update the details below for this region</p>\r\n              </div>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <form onSubmit={handleSubmit} className=\"flex flex-col gap-6\">\r\n                {errors.general && (\r\n                  <div className=\"p-3 text-sm text-red-600 bg-red-50 border border-red-200 rounded-md\">\r\n                    {errors.general}\r\n                  </div>\r\n                )}\r\n\r\n                {/* Region Information */}\r\n                <div className=\"space-y-4\">\r\n                  <h4 className=\"text-md font-semibold text-foreground border-b pb-2\">Region Details</h4>\r\n                  \r\n                  <div className=\"space-y-2\">\r\n                    <Label htmlFor=\"name\" className=\"text-sm font-medium flex items-center gap-2\">\r\n                      <MapPin className=\"h-4 w-4\" />\r\n                      Region Name *\r\n                    </Label>\r\n                    <Input\r\n                      id=\"name\"\r\n                      placeholder=\"Enter region name\"\r\n                      className=\"h-11\"\r\n                      value={formData.name}\r\n                      onChange={(e) => handleInputChange(\"name\", e.target.value)}\r\n                      required\r\n                    />\r\n                    {errors.name && <p className=\"text-sm text-red-600\">{errors.name}</p>}\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"flex gap-3 pt-6 border-t\">\r\n                  <Button \r\n                    type=\"button\" \r\n                    variant=\"outline\" \r\n                    className=\"flex-1 h-11\" \r\n                    onClick={onClose}\r\n                    disabled={isLoading}\r\n                  >\r\n                    Cancel\r\n                  </Button>\r\n                  <Button \r\n                    type=\"submit\" \r\n                    className=\"flex-1 h-11\" \r\n                    disabled={isLoading || success}\r\n                  >\r\n                    {isLoading ? (\r\n                      \"Updating...\"\r\n                    ) : success ? (\r\n                      \"✅ Updated Successfully!\"\r\n                    ) : (\r\n                      <>\r\n                        <Edit className=\"mr-2 h-4 w-4\" />\r\n                        Update Region\r\n                      </>\r\n                    )}\r\n                  </Button>\r\n                </div>\r\n              </form>\r\n            </CardContent>\r\n          </Card>\r\n        </div>\r\n      </SheetContent>\r\n    </Sheet>\r\n  )\r\n}\r\n"],"names":[],"mappings":"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"}