{"version":3,"sources":["turbopack:///[project]/node_modules/next/src/server/route-modules/app-page/module.compiled.js","turbopack:///[project]/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react-jsx-runtime.ts","turbopack:///[project]/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react.ts","turbopack:///[project]/node_modules/next-auth/react.js","turbopack:///[project]/node_modules/@auth/core/errors.js","turbopack:///[project]/node_modules/next-auth/lib/client.js","turbopack:///[project]/components/providers/role-access-provider.tsx","turbopack:///[project]/components/providers/id-provider.tsx","turbopack:///[project]/components/providers/session-provider.tsx"],"sourcesContent":["if (process.env.NEXT_RUNTIME === 'edge') {\n  module.exports = require('next/dist/server/route-modules/app-page/module.js')\n} else {\n  if (process.env.__NEXT_EXPERIMENTAL_REACT) {\n    if (process.env.NODE_ENV === 'development') {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo-experimental.runtime.dev.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.dev.js')\n      }\n    } else {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo-experimental.runtime.prod.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.prod.js')\n      }\n    }\n  } else {\n    if (process.env.NODE_ENV === 'development') {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo.runtime.dev.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page.runtime.dev.js')\n      }\n    } else {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo.runtime.prod.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page.runtime.prod.js')\n      }\n    }\n  }\n}\n","module.exports = (\n  require('../../module.compiled') as typeof import('../../module.compiled')\n).vendored['react-ssr']!.ReactJsxRuntime\n","module.exports = (\n  require('../../module.compiled') as typeof import('../../module.compiled')\n).vendored['react-ssr']!.React\n","/**\n *\n * NextAuth.js is the official integration of Auth.js for Next.js applications. It supports both\n * [Client Components](https://nextjs.org/docs/app/building-your-application/rendering/client-components) and the\n * [Pages Router](https://nextjs.org/docs/pages). It includes methods for signing in, signing out, hooks, and a React\n * Context provider to wrap your application and make session data available anywhere.\n *\n * For use in [Server Actions](https://nextjs.org/docs/app/api-reference/functions/server-actions), check out [these methods](https://authjs.dev/guides/upgrade-to-v5#methods)\n *\n * @module react\n */\n\"use client\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport * as React from \"react\";\nimport { apiBaseUrl, ClientSessionError, fetchData, now, parseUrl, useOnline, } from \"./lib/client.js\";\n// This behaviour mirrors the default behaviour for getting the site name that\n// happens server side in server/index.js\n// 1. An empty value is legitimate when the code is being invoked client side as\n//    relative URLs are valid in that context and so defaults to empty.\n// 2. When invoked server side the value is picked up from an environment\n//    variable and defaults to 'http://localhost:3000'.\nexport const __NEXTAUTH = {\n    baseUrl: parseUrl(process.env.NEXTAUTH_URL ?? process.env.VERCEL_URL).origin,\n    basePath: parseUrl(process.env.NEXTAUTH_URL).path,\n    baseUrlServer: parseUrl(process.env.NEXTAUTH_URL_INTERNAL ??\n        process.env.NEXTAUTH_URL ??\n        process.env.VERCEL_URL).origin,\n    basePathServer: parseUrl(process.env.NEXTAUTH_URL_INTERNAL ?? process.env.NEXTAUTH_URL).path,\n    _lastSync: 0,\n    _session: undefined,\n    _getSession: () => { },\n};\n// https://github.com/nextauthjs/next-auth/pull/10762\nlet broadcastChannel = null;\nfunction getNewBroadcastChannel() {\n    if (typeof BroadcastChannel === \"undefined\") {\n        return {\n            postMessage: () => { },\n            addEventListener: () => { },\n            removeEventListener: () => { },\n            name: \"next-auth\",\n            onmessage: null,\n            onmessageerror: null,\n            close: () => { },\n            dispatchEvent: () => false,\n        };\n    }\n    return new BroadcastChannel(\"next-auth\");\n}\nfunction broadcast() {\n    if (broadcastChannel === null) {\n        broadcastChannel = getNewBroadcastChannel();\n    }\n    return broadcastChannel;\n}\n// TODO:\nconst logger = {\n    debug: console.debug,\n    error: console.error,\n    warn: console.warn,\n};\nexport const SessionContext = React.createContext?.(undefined);\n/**\n * React Hook that gives you access to the logged in user's session data and lets you modify it.\n *\n * :::info\n * `useSession` is for client-side use only and when using [Next.js App Router (`app/`)](https://nextjs.org/blog/next-13-4#nextjs-app-router) you should prefer the `auth()` export.\n * :::\n */\nexport function useSession(options) {\n    if (!SessionContext) {\n        throw new Error(\"React Context is unavailable in Server Components\");\n    }\n    // @ts-expect-error Satisfy TS if branch on line below\n    const value = React.useContext(SessionContext);\n    if (!value && process.env.NODE_ENV !== \"production\") {\n        throw new Error(\"[next-auth]: `useSession` must be wrapped in a <SessionProvider />\");\n    }\n    const { required, onUnauthenticated } = options ?? {};\n    const requiredAndNotLoading = required && value.status === \"unauthenticated\";\n    React.useEffect(() => {\n        if (requiredAndNotLoading) {\n            const url = `${__NEXTAUTH.basePath}/signin?${new URLSearchParams({\n                error: \"SessionRequired\",\n                callbackUrl: window.location.href,\n            })}`;\n            if (onUnauthenticated)\n                onUnauthenticated();\n            else\n                window.location.href = url;\n        }\n    }, [requiredAndNotLoading, onUnauthenticated]);\n    if (requiredAndNotLoading) {\n        return {\n            data: value.data,\n            update: value.update,\n            status: \"loading\",\n        };\n    }\n    return value;\n}\nexport async function getSession(params) {\n    const session = await fetchData(\"session\", __NEXTAUTH, logger, params);\n    if (params?.broadcast ?? true) {\n        // https://github.com/nextauthjs/next-auth/pull/11470\n        getNewBroadcastChannel().postMessage({\n            event: \"session\",\n            data: { trigger: \"getSession\" },\n        });\n    }\n    return session;\n}\n/**\n * Returns the current Cross-Site Request Forgery Token (CSRF Token)\n * required to make requests that changes state. (e.g. signing in or out, or updating the session).\n *\n * [CSRF Prevention: Double Submit Cookie](https://cheatsheetseries.owasp.org/cheatsheets/Cross-Site_Request_Forgery_Prevention_Cheat_Sheet.html#double-submit-cookie)\n */\nexport async function getCsrfToken() {\n    const response = await fetchData(\"csrf\", __NEXTAUTH, logger);\n    return response?.csrfToken ?? \"\";\n}\nexport async function getProviders() {\n    return fetchData(\"providers\", __NEXTAUTH, logger);\n}\nexport async function signIn(provider, options, authorizationParams) {\n    const { callbackUrl, ...rest } = options ?? {};\n    const { redirect = true, redirectTo = callbackUrl ?? window.location.href, ...signInParams } = rest;\n    const baseUrl = apiBaseUrl(__NEXTAUTH);\n    const providers = await getProviders();\n    if (!providers) {\n        const url = `${baseUrl}/error`;\n        window.location.href = url;\n        return; // TODO: Return error if `redirect: false`\n    }\n    if (!provider || !providers[provider]) {\n        const url = `${baseUrl}/signin?${new URLSearchParams({\n            callbackUrl: redirectTo,\n        })}`;\n        window.location.href = url;\n        return; // TODO: Return error if `redirect: false`\n    }\n    const providerType = providers[provider].type;\n    if (providerType === \"webauthn\") {\n        // TODO: Add docs link with explanation\n        throw new TypeError([\n            `Provider id \"${provider}\" refers to a WebAuthn provider.`,\n            'Please use `import { signIn } from \"next-auth/webauthn\"` instead.',\n        ].join(\"\\n\"));\n    }\n    const signInUrl = `${baseUrl}/${providerType === \"credentials\" ? \"callback\" : \"signin\"}/${provider}`;\n    const csrfToken = await getCsrfToken();\n    const res = await fetch(`${signInUrl}?${new URLSearchParams(authorizationParams)}`, {\n        method: \"post\",\n        headers: {\n            \"Content-Type\": \"application/x-www-form-urlencoded\",\n            \"X-Auth-Return-Redirect\": \"1\",\n        },\n        body: new URLSearchParams({\n            ...signInParams,\n            csrfToken,\n            callbackUrl: redirectTo,\n        }),\n    });\n    const data = await res.json();\n    if (redirect) {\n        const url = data.url ?? redirectTo;\n        window.location.href = url;\n        // If url contains a hash, the browser does not reload the page. We reload manually\n        if (url.includes(\"#\"))\n            window.location.reload();\n        return;\n    }\n    const error = new URL(data.url).searchParams.get(\"error\") ?? undefined;\n    const code = new URL(data.url).searchParams.get(\"code\") ?? undefined;\n    if (res.ok) {\n        await __NEXTAUTH._getSession({ event: \"storage\" });\n    }\n    return {\n        error,\n        code,\n        status: res.status,\n        ok: res.ok,\n        url: error ? null : data.url,\n    };\n}\nexport async function signOut(options) {\n    const { redirect = true, redirectTo = options?.callbackUrl ?? window.location.href, } = options ?? {};\n    const baseUrl = apiBaseUrl(__NEXTAUTH);\n    const csrfToken = await getCsrfToken();\n    const res = await fetch(`${baseUrl}/signout`, {\n        method: \"post\",\n        headers: {\n            \"Content-Type\": \"application/x-www-form-urlencoded\",\n            \"X-Auth-Return-Redirect\": \"1\",\n        },\n        body: new URLSearchParams({ csrfToken, callbackUrl: redirectTo }),\n    });\n    const data = await res.json();\n    broadcast().postMessage({ event: \"session\", data: { trigger: \"signout\" } });\n    if (redirect) {\n        const url = data.url ?? redirectTo;\n        window.location.href = url;\n        // If url contains a hash, the browser does not reload the page. We reload manually\n        if (url.includes(\"#\"))\n            window.location.reload();\n        return;\n    }\n    await __NEXTAUTH._getSession({ event: \"storage\" });\n    return data;\n}\n/**\n * [React Context](https://react.dev/learn/passing-data-deeply-with-context) provider to wrap the app (`pages/`) to make session data available anywhere.\n *\n * When used, the session state is automatically synchronized across all open tabs/windows and they are all updated whenever they gain or lose focus\n * or the state changes (e.g. a user signs in or out) when {@link SessionProviderProps.refetchOnWindowFocus} is `true`.\n *\n * :::info\n * `SessionProvider` is for client-side use only and when using [Next.js App Router (`app/`)](https://nextjs.org/blog/next-13-4#nextjs-app-router) you should prefer the `auth()` export.\n * :::\n */\nexport function SessionProvider(props) {\n    if (!SessionContext) {\n        throw new Error(\"React Context is unavailable in Server Components\");\n    }\n    const { children, basePath, refetchInterval, refetchWhenOffline } = props;\n    if (basePath)\n        __NEXTAUTH.basePath = basePath;\n    /**\n     * If session was `null`, there was an attempt to fetch it,\n     * but it failed, but we still treat it as a valid initial value.\n     */\n    const hasInitialSession = props.session !== undefined;\n    /** If session was passed, initialize as already synced */\n    __NEXTAUTH._lastSync = hasInitialSession ? now() : 0;\n    const [session, setSession] = React.useState(() => {\n        if (hasInitialSession)\n            __NEXTAUTH._session = props.session;\n        return props.session;\n    });\n    /** If session was passed, initialize as not loading */\n    const [loading, setLoading] = React.useState(!hasInitialSession);\n    React.useEffect(() => {\n        __NEXTAUTH._getSession = async ({ event } = {}) => {\n            try {\n                const storageEvent = event === \"storage\";\n                // We should always update if we don't have a client session yet\n                // or if there are events from other tabs/windows\n                if (storageEvent || __NEXTAUTH._session === undefined) {\n                    __NEXTAUTH._lastSync = now();\n                    __NEXTAUTH._session = await getSession({\n                        broadcast: !storageEvent,\n                    });\n                    setSession(__NEXTAUTH._session);\n                    return;\n                }\n                if (\n                // If there is no time defined for when a session should be considered\n                // stale, then it's okay to use the value we have until an event is\n                // triggered which updates it\n                !event ||\n                    // If the client doesn't have a session then we don't need to call\n                    // the server to check if it does (if they have signed in via another\n                    // tab or window that will come through as a \"stroage\" event\n                    // event anyway)\n                    __NEXTAUTH._session === null ||\n                    // Bail out early if the client session is not stale yet\n                    now() < __NEXTAUTH._lastSync) {\n                    return;\n                }\n                // An event or session staleness occurred, update the client session.\n                __NEXTAUTH._lastSync = now();\n                __NEXTAUTH._session = await getSession();\n                setSession(__NEXTAUTH._session);\n            }\n            catch (error) {\n                logger.error(new ClientSessionError(error.message, error));\n            }\n            finally {\n                setLoading(false);\n            }\n        };\n        __NEXTAUTH._getSession();\n        return () => {\n            __NEXTAUTH._lastSync = 0;\n            __NEXTAUTH._session = undefined;\n            __NEXTAUTH._getSession = () => { };\n        };\n    }, []);\n    React.useEffect(() => {\n        const handle = () => __NEXTAUTH._getSession({ event: \"storage\" });\n        // Listen for storage events and update session if event fired from\n        // another window (but suppress firing another event to avoid a loop)\n        // Fetch new session data but tell it to not to fire another event to\n        // avoid an infinite loop.\n        // Note: We could pass session data through and do something like\n        // `setData(message.data)` but that can cause problems depending\n        // on how the session object is being used in the client; it is\n        // more robust to have each window/tab fetch it's own copy of the\n        // session object rather than share it across instances.\n        broadcast().addEventListener(\"message\", handle);\n        return () => broadcast().removeEventListener(\"message\", handle);\n    }, []);\n    React.useEffect(() => {\n        const { refetchOnWindowFocus = true } = props;\n        // Listen for when the page is visible, if the user switches tabs\n        // and makes our tab visible again, re-fetch the session, but only if\n        // this feature is not disabled.\n        const visibilityHandler = () => {\n            if (refetchOnWindowFocus && document.visibilityState === \"visible\")\n                __NEXTAUTH._getSession({ event: \"visibilitychange\" });\n        };\n        document.addEventListener(\"visibilitychange\", visibilityHandler, false);\n        return () => document.removeEventListener(\"visibilitychange\", visibilityHandler, false);\n    }, [props.refetchOnWindowFocus]);\n    const isOnline = useOnline();\n    // TODO: Flip this behavior in next major version\n    const shouldRefetch = refetchWhenOffline !== false || isOnline;\n    React.useEffect(() => {\n        if (refetchInterval && shouldRefetch) {\n            const refetchIntervalTimer = setInterval(() => {\n                if (__NEXTAUTH._session) {\n                    __NEXTAUTH._getSession({ event: \"poll\" });\n                }\n            }, refetchInterval * 1000);\n            return () => clearInterval(refetchIntervalTimer);\n        }\n    }, [refetchInterval, shouldRefetch]);\n    const value = React.useMemo(() => ({\n        data: session,\n        status: loading\n            ? \"loading\"\n            : session\n                ? \"authenticated\"\n                : \"unauthenticated\",\n        async update(data) {\n            if (loading)\n                return;\n            setLoading(true);\n            const newSession = await fetchData(\"session\", __NEXTAUTH, logger, typeof data === \"undefined\"\n                ? undefined\n                : { body: { csrfToken: await getCsrfToken(), data } });\n            setLoading(false);\n            if (newSession) {\n                setSession(newSession);\n                broadcast().postMessage({\n                    event: \"session\",\n                    data: { trigger: \"getSession\" },\n                });\n            }\n            return newSession;\n        },\n    }), [session, loading]);\n    return (\n    // @ts-expect-error\n    _jsx(SessionContext.Provider, { value: value, children: children }));\n}\n","/**\n * Base error class for all Auth.js errors.\n * It's optimized to be printed in the server logs in a nicely formatted way\n * via the [`logger.error`](https://authjs.dev/reference/core#logger) option.\n * @noInheritDoc\n */\nexport class AuthError extends Error {\n    /** @internal */\n    constructor(message, errorOptions) {\n        if (message instanceof Error) {\n            super(undefined, {\n                cause: { err: message, ...message.cause, ...errorOptions },\n            });\n        }\n        else if (typeof message === \"string\") {\n            if (errorOptions instanceof Error) {\n                errorOptions = { err: errorOptions, ...errorOptions.cause };\n            }\n            super(message, errorOptions);\n        }\n        else {\n            super(undefined, message);\n        }\n        this.name = this.constructor.name;\n        // @ts-expect-error https://github.com/microsoft/TypeScript/issues/3841\n        this.type = this.constructor.type ?? \"AuthError\";\n        // @ts-expect-error https://github.com/microsoft/TypeScript/issues/3841\n        this.kind = this.constructor.kind ?? \"error\";\n        Error.captureStackTrace?.(this, this.constructor);\n        const url = `https://errors.authjs.dev#${this.type.toLowerCase()}`;\n        this.message += `${this.message ? \". \" : \"\"}Read more at ${url}`;\n    }\n}\n/**\n * Thrown when the user's sign-in attempt failed.\n * @noInheritDoc\n */\nexport class SignInError extends AuthError {\n}\n/** @internal */\nSignInError.kind = \"signIn\";\n/**\n * One of the database [`Adapter` methods](https://authjs.dev/reference/core/adapters#methods)\n * failed during execution.\n *\n * :::tip\n * If `debug: true` is set, you can check out `[auth][debug]` in the logs to learn more about the failed adapter method execution.\n * @example\n * ```sh\n * [auth][debug]: adapter_getUserByEmail\n * { \"args\": [undefined] }\n * ```\n * :::\n * @noInheritDoc\n */\nexport class AdapterError extends AuthError {\n}\nAdapterError.type = \"AdapterError\";\n/**\n * Thrown when the execution of the [`signIn` callback](https://authjs.dev/reference/core/types#signin) fails\n * or if it returns `false`.\n * @noInheritDoc\n */\nexport class AccessDenied extends AuthError {\n}\nAccessDenied.type = \"AccessDenied\";\n/**\n * This error occurs when the user cannot finish login.\n * Depending on the provider type, this could have happened for multiple reasons.\n *\n * :::tip\n * Check out `[auth][details]` in the logs to know which provider failed.\n * @example\n * ```sh\n * [auth][details]: { \"provider\": \"github\" }\n * ```\n * :::\n *\n * For an [OAuth provider](https://authjs.dev/getting-started/authentication/oauth), possible causes are:\n * - The user denied access to the application\n * - There was an error parsing the OAuth Profile:\n *   Check out the provider's `profile` or `userinfo.request` method to make sure\n *   it correctly fetches the user's profile.\n * - The `signIn` or `jwt` callback methods threw an uncaught error:\n *   Check the callback method implementations.\n *\n * For an [Email provider](https://authjs.dev/getting-started/authentication/email), possible causes are:\n * - The provided email/token combination was invalid/missing:\n *   Check if the provider's `sendVerificationRequest` method correctly sends the email.\n * - The provided email/token combination has expired:\n *   Ask the user to log in again.\n * - There was an error with the database:\n *   Check the database logs.\n *\n * For a [Credentials provider](https://authjs.dev/getting-started/authentication/credentials), possible causes are:\n * - The `authorize` method threw an uncaught error:\n *   Check the provider's `authorize` method.\n * - The `signIn` or `jwt` callback methods threw an uncaught error:\n *   Check the callback method implementations.\n *\n * :::tip\n * Check out `[auth][cause]` in the error message for more details.\n * It will show the original stack trace.\n * :::\n * @noInheritDoc\n */\nexport class CallbackRouteError extends AuthError {\n}\nCallbackRouteError.type = \"CallbackRouteError\";\n/**\n * Thrown when Auth.js is misconfigured and accidentally tried to require authentication on a custom error page.\n * To prevent an infinite loop, Auth.js will instead render its default error page.\n *\n * To fix this, make sure that the `error` page does not require authentication.\n *\n * Learn more at [Guide: Error pages](https://authjs.dev/guides/pages/error)\n * @noInheritDoc\n */\nexport class ErrorPageLoop extends AuthError {\n}\nErrorPageLoop.type = \"ErrorPageLoop\";\n/**\n * One of the [`events` methods](https://authjs.dev/reference/core/types#eventcallbacks)\n * failed during execution.\n *\n * Make sure that the `events` methods are implemented correctly and uncaught errors are handled.\n *\n * Learn more at [`events`](https://authjs.dev/reference/core/types#eventcallbacks)\n * @noInheritDoc\n */\nexport class EventError extends AuthError {\n}\nEventError.type = \"EventError\";\n/**\n * Thrown when Auth.js is unable to verify a `callbackUrl` value.\n * The browser either disabled cookies or the `callbackUrl` is not a valid URL.\n *\n * Somebody might have tried to manipulate the callback URL that Auth.js uses to redirect the user back to the configured `callbackUrl`/page.\n * This could be a malicious hacker trying to redirect the user to a phishing site.\n * To prevent this, Auth.js checks if the callback URL is valid and throws this error if it is not.\n *\n * There is no action required, but it might be an indicator that somebody is trying to attack your application.\n * @noInheritDoc\n */\nexport class InvalidCallbackUrl extends AuthError {\n}\nInvalidCallbackUrl.type = \"InvalidCallbackUrl\";\n/**\n * Can be thrown from the `authorize` callback of the Credentials provider.\n * When an error occurs during the `authorize` callback, two things can happen:\n * 1. The user is redirected to the signin page, with `error=CredentialsSignin&code=credentials` in the URL. `code` is configurable.\n * 2. If you throw this error in a framework that handles form actions server-side, this error is thrown, instead of redirecting the user, so you'll need to handle.\n * @noInheritDoc\n */\nexport class CredentialsSignin extends SignInError {\n    constructor() {\n        super(...arguments);\n        /**\n         * The error code that is set in the `code` query parameter of the redirect URL.\n         *\n         *\n         * ⚠ NOTE: This property is going to be included in the URL, so make sure it does not hint at sensitive errors.\n         *\n         * The full error is always logged on the server, if you need to debug.\n         *\n         * Generally, we don't recommend hinting specifically if the user had either a wrong username or password specifically,\n         * try rather something like \"Invalid credentials\".\n         */\n        this.code = \"credentials\";\n    }\n}\nCredentialsSignin.type = \"CredentialsSignin\";\n/**\n * One of the configured OAuth or OIDC providers is missing the `authorization`, `token` or `userinfo`, or `issuer` configuration.\n * To perform OAuth or OIDC sign in, at least one of these endpoints is required.\n *\n * Learn more at [`OAuth2Config`](https://authjs.dev/reference/core/providers#oauth2configprofile) or [Guide: OAuth Provider](https://authjs.dev/guides/configuring-oauth-providers)\n * @noInheritDoc\n */\nexport class InvalidEndpoints extends AuthError {\n}\nInvalidEndpoints.type = \"InvalidEndpoints\";\n/**\n * Thrown when a PKCE, state or nonce OAuth check could not be performed.\n * This could happen if the OAuth provider is configured incorrectly or if the browser is blocking cookies.\n *\n * Learn more at [`checks`](https://authjs.dev/reference/core/providers#checks)\n * @noInheritDoc\n */\nexport class InvalidCheck extends AuthError {\n}\nInvalidCheck.type = \"InvalidCheck\";\n/**\n * Logged on the server when Auth.js could not decode or encode a JWT-based (`strategy: \"jwt\"`) session.\n *\n * Possible causes are either a misconfigured `secret` or a malformed JWT or `encode/decode` methods.\n *\n * :::note\n * When this error is logged, the session cookie is destroyed.\n * :::\n *\n * Learn more at [`secret`](https://authjs.dev/reference/core#secret), [`jwt.encode`](https://authjs.dev/reference/core/jwt#encode-1) or [`jwt.decode`](https://authjs.dev/reference/core/jwt#decode-2) for more information.\n * @noInheritDoc\n */\nexport class JWTSessionError extends AuthError {\n}\nJWTSessionError.type = \"JWTSessionError\";\n/**\n * Thrown if Auth.js is misconfigured. This could happen if you configured an Email provider but did not set up a database adapter,\n * or tried using a `strategy: \"database\"` session without a database adapter.\n * In both cases, make sure you either remove the configuration or add the missing adapter.\n *\n * Learn more at [Database Adapters](https://authjs.dev/getting-started/database), [Email provider](https://authjs.dev/getting-started/authentication/email) or [Concept: Database session strategy](https://authjs.dev/concepts/session-strategies#database-session)\n * @noInheritDoc\n */\nexport class MissingAdapter extends AuthError {\n}\nMissingAdapter.type = \"MissingAdapter\";\n/**\n * Thrown similarily to [`MissingAdapter`](https://authjs.dev/reference/core/errors#missingadapter), but only some required methods were missing.\n *\n * Make sure you either remove the configuration or add the missing methods to the adapter.\n *\n * Learn more at [Database Adapters](https://authjs.dev/getting-started/database)\n * @noInheritDoc\n */\nexport class MissingAdapterMethods extends AuthError {\n}\nMissingAdapterMethods.type = \"MissingAdapterMethods\";\n/**\n * Thrown when a Credentials provider is missing the `authorize` configuration.\n * To perform credentials sign in, the `authorize` method is required.\n *\n * Learn more at [Credentials provider](https://authjs.dev/getting-started/authentication/credentials)\n * @noInheritDoc\n */\nexport class MissingAuthorize extends AuthError {\n}\nMissingAuthorize.type = \"MissingAuthorize\";\n/**\n * Auth.js requires a secret or multiple secrets to be set, but none was not found. This is used to encrypt cookies, JWTs and other sensitive data.\n *\n * :::note\n * If you are using a framework like Next.js, we try to automatically infer the secret from the `AUTH_SECRET`, `AUTH_SECRET_1`, etc. environment variables.\n * Alternatively, you can also explicitly set the [`AuthConfig.secret`](https://authjs.dev/reference/core#secret) option.\n * :::\n *\n *\n * :::tip\n * To generate a random string, you can use the Auth.js CLI: `npx auth secret`\n * :::\n * @noInheritDoc\n */\nexport class MissingSecret extends AuthError {\n}\nMissingSecret.type = \"MissingSecret\";\n/**\n * Thrown when an Email address is already associated with an account\n * but the user is trying an OAuth account that is not linked to it.\n *\n * For security reasons, Auth.js does not automatically link OAuth accounts to existing accounts if the user is not signed in.\n *\n * :::tip\n * If you trust the OAuth provider to have verified the user's email address,\n * you can enable automatic account linking by setting [`allowDangerousEmailAccountLinking: true`](https://authjs.dev/reference/core/providers#allowdangerousemailaccountlinking)\n * in the provider configuration.\n * :::\n * @noInheritDoc\n */\nexport class OAuthAccountNotLinked extends SignInError {\n}\nOAuthAccountNotLinked.type = \"OAuthAccountNotLinked\";\n/**\n * Thrown when an OAuth provider returns an error during the sign in process.\n * This could happen for example if the user denied access to the application or there was a configuration error.\n *\n * For a full list of possible reasons, check out the specification [Authorization Code Grant: Error Response](https://www.rfc-editor.org/rfc/rfc6749#section-4.1.2.1)\n * @noInheritDoc\n */\nexport class OAuthCallbackError extends SignInError {\n}\nOAuthCallbackError.type = \"OAuthCallbackError\";\n/**\n * This error occurs during an OAuth sign in attempt when the provider's\n * response could not be parsed. This could for example happen if the provider's API\n * changed, or the [`OAuth2Config.profile`](https://authjs.dev/reference/core/providers#oauth2configprofile) method is not implemented correctly.\n * @noInheritDoc\n */\nexport class OAuthProfileParseError extends AuthError {\n}\nOAuthProfileParseError.type = \"OAuthProfileParseError\";\n/**\n * Logged on the server when Auth.js could not retrieve a session from the database (`strategy: \"database\"`).\n *\n * The database adapter might be misconfigured or the database is not reachable.\n *\n * Learn more at [Concept: Database session strategy](https://authjs.dev/concepts/session-strategies#database)\n * @noInheritDoc\n */\nexport class SessionTokenError extends AuthError {\n}\nSessionTokenError.type = \"SessionTokenError\";\n/**\n * Happens when login by [OAuth](https://authjs.dev/getting-started/authentication/oauth) could not be started.\n *\n * Possible causes are:\n * - The Authorization Server is not compliant with the [OAuth 2.0](https://www.ietf.org/rfc/rfc6749.html) or the [OIDC](https://openid.net/specs/openid-connect-core-1_0.html) specification.\n *   Check the details in the error message.\n *\n * :::tip\n * Check out `[auth][details]` in the logs to know which provider failed.\n * @example\n * ```sh\n * [auth][details]: { \"provider\": \"github\" }\n * ```\n * :::\n * @noInheritDoc\n */\nexport class OAuthSignInError extends SignInError {\n}\nOAuthSignInError.type = \"OAuthSignInError\";\n/**\n * Happens when the login by an [Email provider](https://authjs.dev/getting-started/authentication/email) could not be started.\n *\n * Possible causes are:\n * - The email sent from the client is invalid, could not be normalized by [`EmailConfig.normalizeIdentifier`](https://authjs.dev/reference/core/providers/email#normalizeidentifier)\n * - The provided email/token combination has expired:\n *   Ask the user to log in again.\n * - There was an error with the database:\n *   Check the database logs.\n * @noInheritDoc\n */\nexport class EmailSignInError extends SignInError {\n}\nEmailSignInError.type = \"EmailSignInError\";\n/**\n * Represents an error that occurs during the sign-out process. This error\n * is logged when there are issues in terminating a user's session, either\n * by failing to delete the session from the database (in database session\n * strategies) or encountering issues during other parts of the sign-out\n * process, such as emitting sign-out events or clearing session cookies.\n *\n * The session cookie(s) are emptied even if this error is logged.\n * @noInheritDoc\n */\nexport class SignOutError extends AuthError {\n}\nSignOutError.type = \"SignOutError\";\n/**\n * Auth.js was requested to handle an operation that it does not support.\n *\n * See [`AuthAction`](https://authjs.dev/reference/core/types#authaction) for the supported actions.\n * @noInheritDoc\n */\nexport class UnknownAction extends AuthError {\n}\nUnknownAction.type = \"UnknownAction\";\n/**\n * Thrown when a Credentials provider is present but the JWT strategy (`strategy: \"jwt\"`) is not enabled.\n *\n * Learn more at [`strategy`](https://authjs.dev/reference/core#strategy) or [Credentials provider](https://authjs.dev/getting-started/authentication/credentials)\n * @noInheritDoc\n */\nexport class UnsupportedStrategy extends AuthError {\n}\nUnsupportedStrategy.type = \"UnsupportedStrategy\";\n/**\n * Thrown when an endpoint was incorrectly called without a provider, or with an unsupported provider.\n * @noInheritDoc\n */\nexport class InvalidProvider extends AuthError {\n}\nInvalidProvider.type = \"InvalidProvider\";\n/**\n * Thrown when the `trustHost` option was not set to `true`.\n *\n * Auth.js requires the `trustHost` option to be set to `true` since it's relying on the request headers' `host` value.\n *\n * :::note\n * Official Auth.js libraries might attempt to automatically set the `trustHost` option to `true` if the request is coming from a trusted host on a trusted platform.\n * :::\n *\n * Learn more at [`trustHost`](https://authjs.dev/reference/core#trusthost) or [Guide: Deployment](https://authjs.dev/getting-started/deployment)\n * @noInheritDoc\n */\nexport class UntrustedHost extends AuthError {\n}\nUntrustedHost.type = \"UntrustedHost\";\n/**\n * The user's email/token combination was invalid.\n * This could be because the email/token combination was not found in the database,\n * or because the token has expired. Ask the user to log in again.\n * @noInheritDoc\n */\nexport class Verification extends AuthError {\n}\nVerification.type = \"Verification\";\n/**\n * Error for missing CSRF tokens in client-side actions (`signIn`, `signOut`, `useSession#update`).\n * Thrown when actions lack the double submit cookie, essential for CSRF protection.\n *\n * CSRF ([Cross-Site Request Forgery](https://owasp.org/www-community/attacks/csrf))\n * is an attack leveraging authenticated user credentials for unauthorized actions.\n *\n * Double submit cookie pattern, a CSRF defense, requires matching values in a cookie\n * and request parameter. More on this at [MDN Web Docs](https://developer.mozilla.org/en-US/docs/Glossary/CSRF).\n * @noInheritDoc\n */\nexport class MissingCSRF extends SignInError {\n}\nMissingCSRF.type = \"MissingCSRF\";\nconst clientErrors = new Set([\n    \"CredentialsSignin\",\n    \"OAuthAccountNotLinked\",\n    \"OAuthCallbackError\",\n    \"AccessDenied\",\n    \"Verification\",\n    \"MissingCSRF\",\n    \"AccountNotLinked\",\n    \"WebAuthnVerificationError\",\n]);\n/**\n * Used to only allow sending a certain subset of errors to the client.\n * Errors are always logged on the server, but to prevent leaking sensitive information,\n * only a subset of errors are sent to the client as-is.\n * @internal\n */\nexport function isClientError(error) {\n    if (error instanceof AuthError)\n        return clientErrors.has(error.type);\n    return false;\n}\n/**\n * Thrown when multiple providers have `enableConditionalUI` set to `true`.\n * Only one provider can have this option enabled at a time.\n * @noInheritDoc\n */\nexport class DuplicateConditionalUI extends AuthError {\n}\nDuplicateConditionalUI.type = \"DuplicateConditionalUI\";\n/**\n * Thrown when a WebAuthn provider has `enableConditionalUI` set to `true` but no formField has `webauthn` in its autocomplete param.\n *\n * The `webauthn` autocomplete param is required for conditional UI to work.\n * @noInheritDoc\n */\nexport class MissingWebAuthnAutocomplete extends AuthError {\n}\nMissingWebAuthnAutocomplete.type = \"MissingWebAuthnAutocomplete\";\n/**\n * Thrown when a WebAuthn provider fails to verify a client response.\n * @noInheritDoc\n */\nexport class WebAuthnVerificationError extends AuthError {\n}\nWebAuthnVerificationError.type = \"WebAuthnVerificationError\";\n/**\n * Thrown when an Email address is already associated with an account\n * but the user is trying an account that is not linked to it.\n *\n * For security reasons, Auth.js does not automatically link accounts to existing accounts if the user is not signed in.\n * @noInheritDoc\n */\nexport class AccountNotLinked extends SignInError {\n}\nAccountNotLinked.type = \"AccountNotLinked\";\n/**\n * Thrown when an experimental feature is used but not enabled.\n * @noInheritDoc\n */\nexport class ExperimentalFeatureNotEnabled extends AuthError {\n}\nExperimentalFeatureNotEnabled.type = \"ExperimentalFeatureNotEnabled\";\n","\"use client\";\nimport * as React from \"react\";\nimport { AuthError } from \"@auth/core/errors\";\n/** @todo */\nclass ClientFetchError extends AuthError {\n}\n/** @todo */\nexport class ClientSessionError extends AuthError {\n}\n// ------------------------ Internal ------------------------\n/**\n * If passed 'appContext' via getInitialProps() in _app.js\n * then get the req object from ctx and use that for the\n * req value to allow `fetchData` to\n * work seemlessly in getInitialProps() on server side\n * pages *and* in _app.js.\n * @internal\n */\nexport async function fetchData(path, __NEXTAUTH, logger, req = {}) {\n    const url = `${apiBaseUrl(__NEXTAUTH)}/${path}`;\n    try {\n        const options = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                ...(req?.headers?.cookie ? { cookie: req.headers.cookie } : {}),\n            },\n        };\n        if (req?.body) {\n            options.body = JSON.stringify(req.body);\n            options.method = \"POST\";\n        }\n        const res = await fetch(url, options);\n        const data = await res.json();\n        if (!res.ok)\n            throw data;\n        return data;\n    }\n    catch (error) {\n        logger.error(new ClientFetchError(error.message, error));\n        return null;\n    }\n}\n/** @internal */\nexport function apiBaseUrl(__NEXTAUTH) {\n    if (typeof window === \"undefined\") {\n        // Return absolute path when called server side\n        return `${__NEXTAUTH.baseUrlServer}${__NEXTAUTH.basePathServer}`;\n    }\n    // Return relative path when called client side\n    return __NEXTAUTH.basePath;\n}\n/** @internal  */\nexport function useOnline() {\n    const [isOnline, setIsOnline] = React.useState(typeof navigator !== \"undefined\" ? navigator.onLine : false);\n    const setOnline = () => setIsOnline(true);\n    const setOffline = () => setIsOnline(false);\n    React.useEffect(() => {\n        window.addEventListener(\"online\", setOnline);\n        window.addEventListener(\"offline\", setOffline);\n        return () => {\n            window.removeEventListener(\"online\", setOnline);\n            window.removeEventListener(\"offline\", setOffline);\n        };\n    }, []);\n    return isOnline;\n}\n/**\n * Returns the number of seconds elapsed since January 1, 1970 00:00:00 UTC.\n * @internal\n */\nexport function now() {\n    return Math.floor(Date.now() / 1000);\n}\n/**\n * Returns an `URL` like object to make requests/redirects from server-side\n * @internal\n */\nexport function parseUrl(url) {\n    const defaultUrl = new URL(\"http://localhost:3000/api/auth\");\n    if (url && !url.startsWith(\"http\")) {\n        url = `https://${url}`;\n    }\n    const _url = new URL(url || defaultUrl);\n    const path = (_url.pathname === \"/\" ? defaultUrl.pathname : _url.pathname)\n        // Remove trailing slash\n        .replace(/\\/$/, \"\");\n    const base = `${_url.origin}${path}`;\n    return {\n        origin: _url.origin,\n        host: _url.host,\n        path,\n        base,\n        toString: () => base,\n    };\n}\n","\"use client\";\nimport { createContext, useContext, useEffect, useState, ReactNode } from \"react\";\nimport { useSession } from \"next-auth/react\";\n\nexport type UserRole = 'superadmin' | 'national' | 'region' | 'university' | 'smallgroup' | 'alumnismallgroup';\n\ninterface UserScope {\n  scope: UserRole;\n  region?: { id: number; name: string };\n  university?: { id: number; name: string; regionId: number };\n  smallGroup?: { id: number; name: string; regionId: number; universityId: number };\n  alumniGroup?: { id: number; name: string; regionId: number };\n}\n\ninterface RoleAccessContextType {\n  userScope: UserScope | null;\n  isLoading: boolean;\n  userRole: UserRole | null;\n}\n\nconst RoleAccessContext = createContext<RoleAccessContextType>({\n  userScope: null,\n  isLoading: true,\n  userRole: null,\n});\n\nexport function RoleAccessProvider({ children }: { children: ReactNode }) {\n  const { data: session, status } = useSession();\n  const [userScope, setUserScope] = useState<UserScope | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchUserScope = async () => {\n      if (status === \"loading\") return;\n      \n      if (!session?.user?.id) {\n        setIsLoading(false);\n        return;\n      }\n\n      try {\n        const response = await fetch('/api/members/current-user-scope');\n        if (response.ok) {\n          const data = await response.json();\n          setUserScope(data.scope);\n        } else {\n          const errorData = await response.json().catch(() => ({}));\n          console.error('Failed to fetch user scope:', {\n            status: response.status,\n            statusText: response.statusText,\n            error: errorData\n          });\n        }\n      } catch (error) {\n        console.error('Error fetching user scope:', error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchUserScope();\n  }, [session, status]);\n\n  const value = {\n    userScope,\n    isLoading: status === \"loading\" || isLoading,\n    userRole: userScope?.scope || null,\n  };\n\n  return (\n    <RoleAccessContext.Provider value={value}>\n      {children}\n    </RoleAccessContext.Provider>\n  );\n}\n\nexport function useRoleAccess() {\n  const context = useContext(RoleAccessContext);\n  if (context === undefined) {\n    throw new Error('useRoleAccess must be used within a RoleAccessProvider');\n  }\n  return context;\n}\n\n","\"use client\"\r\n\r\nimport { createContext, useContext, useEffect, useState } from \"react\"\r\n\r\ninterface IdProviderProps {\r\n  children: React.ReactNode\r\n}\r\n\r\nconst IdContext = createContext<{\r\n  generateId: () => string\r\n}>({\r\n  generateId: () => \"\",\r\n})\r\n\r\nlet idCounter = 0\r\n\r\nexport function IdProvider({ children }: IdProviderProps) {\r\n  const [isClient, setIsClient] = useState(false)\r\n\r\n  useEffect(() => {\r\n    setIsClient(true)\r\n  }, [])\r\n\r\n  const generateId = () => {\r\n    if (!isClient) {\r\n      // Return a consistent ID during SSR\r\n      return `radix-id-${++idCounter}`\r\n    }\r\n    // Generate unique IDs on client\r\n    return `radix-${Math.random().toString(36).substr(2, 9)}`\r\n  }\r\n\r\n  return (\r\n    <IdContext.Provider value={{ generateId }}>\r\n      {children}\r\n    </IdContext.Provider>\r\n  )\r\n}\r\n\r\nexport const useId = () => {\r\n  const context = useContext(IdContext)\r\n  if (!context) {\r\n    throw new Error(\"useId must be used within an IdProvider\")\r\n  }\r\n  return context.generateId\r\n}\r\n","\"use client\";\r\n\r\nimport { SessionProvider } from \"next-auth/react\";\r\n\r\nexport function AuthProvider({ children }: { children: React.ReactNode }) {\r\n  return <SessionProvider>{children}</SessionProvider>;\r\n}\r\n\r\n\r\n"],"names":["process","env","NEXT_RUNTIME","module","exports","require","__NEXT_EXPERIMENTAL_REACT","NODE_ENV","TURBOPACK","vendored","ReactJsxRuntime","React"],"mappings":"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","ignoreList":[0,1,2,3,4,5]}