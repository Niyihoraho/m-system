{"version":3,"sources":["turbopack:///[project]/app/links/people/members/page.tsx","turbopack:///[project]/app/links/people/members/MemberTable.tsx","turbopack:///[project]/components/add-member-modal.tsx","turbopack:///[project]/app/api/validation/member.ts","turbopack:///[project]/components/delete-member-modal.tsx","turbopack:///[project]/components/edit-member-modal.tsx","turbopack:///[project]/components/ui/ui copy/table.tsx","turbopack:///[project]/app/links/people/members/SmallGroupTable.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { AppSidebar } from \"@/components/app-sidebar\";\r\nimport MemberTable from \"./MemberTable\";\r\nimport {\r\n  Breadcrumb,\r\n  BreadcrumbItem,\r\n  BreadcrumbLink,\r\n  BreadcrumbList,\r\n  BreadcrumbPage,\r\n  BreadcrumbSeparator,\r\n} from \"@/components/ui/breadcrumb\";\r\nimport { Separator } from \"@/components/ui/separator\";\r\nimport {\r\n  SidebarInset,\r\n  SidebarProvider,\r\n  SidebarTrigger,\r\n} from \"@/components/ui/sidebar\";\r\nimport { AllowOnly, DenyOnly } from '@/components/role-based-access';\r\nimport SmallGroupTable from './SmallGroupTable';\r\n\r\n// Types for API response\r\ninterface Member {\r\n  id: number;\r\n  firstname: string | null;\r\n  secondname: string | null;\r\n  gender: string | null;\r\n  birthdate: string | null;\r\n  placeOfBirthProvince: string | null;\r\n  placeOfBirthDistrict: string | null;\r\n  placeOfBirthSector: string | null;\r\n  placeOfBirthCell: string | null;\r\n  placeOfBirthVillage: string | null;\r\n  localChurch: string | null;\r\n  email: string | null;\r\n  phone: string | null;\r\n  type: string;\r\n  status: string;\r\n  regionId: number | null;\r\n  universityId: number | null;\r\n  smallGroupId: number | null;\r\n  alumniGroupId: number | null;\r\n  graduationDate: string | null;\r\n  faculty: string | null;\r\n  professionalism: string | null;\r\n  maritalStatus: string | null;\r\n  createdAt: string;\r\n  updatedAt: string;\r\n  region: { name: string } | null;\r\n  university: { name: string } | null;\r\n  smallgroup: { name: string } | null;\r\n  alumnismallgroup: { name: string } | null;\r\n}\r\n\r\nexport default function MembersPage() {\r\n  const [members, setMembers] = useState<Member[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  // Fetch members from API\r\n  const fetchMembers = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      console.log('Starting to fetch members...'); // Debug log\r\n      \r\n      // Add minimum loading time to ensure loading state is visible\r\n      const [response] = await Promise.all([\r\n        axios.get('/api/members'),\r\n        new Promise(resolve => setTimeout(resolve, 500)) // Minimum 500ms loading time\r\n      ]);\r\n      \r\n      console.log('Members fetched successfully:', response.data); // Debug log\r\n      setMembers(response.data.members || []);\r\n    } catch (err) {\r\n      console.error('Error fetching members:', err);\r\n      setError('Failed to fetch members. Please try again.');\r\n    } finally {\r\n      console.log('Setting loading to false'); // Debug log\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Load members on component mount\r\n  useEffect(() => {\r\n    fetchMembers();\r\n  }, []);\r\n\r\n  return (\r\n    <SidebarProvider>\r\n      <AppSidebar />\r\n      <SidebarInset>\r\n        <header className=\"flex h-16 shrink-0 items-center gap-2 transition-[width,height] ease-linear group-has-data-[collapsible=icon]/sidebar-wrapper:h-12\">\r\n          <div className=\"flex items-center gap-2 px-4\">\r\n            <SidebarTrigger className=\"-ml-1\" />\r\n            <Separator\r\n              orientation=\"vertical\"\r\n              className=\"mr-2 data-[orientation=vertical]:h-4\"\r\n            />\r\n            <Breadcrumb>\r\n              <BreadcrumbList>\r\n                <BreadcrumbItem className=\"hidden md:block\">\r\n                  <BreadcrumbLink href=\"/dashboard\">\r\n                    Dashboard\r\n                  </BreadcrumbLink>\r\n                </BreadcrumbItem>\r\n                <BreadcrumbSeparator className=\"hidden md:block\" />\r\n                <BreadcrumbItem>\r\n                  <BreadcrumbLink href=\"/links/people/members\">\r\n                    People Management\r\n                  </BreadcrumbLink>\r\n                </BreadcrumbItem>\r\n                <BreadcrumbSeparator />\r\n                <BreadcrumbItem>\r\n                  <BreadcrumbPage>Member Directory</BreadcrumbPage>\r\n                </BreadcrumbItem>\r\n              </BreadcrumbList>\r\n            </Breadcrumb>\r\n          </div>\r\n        </header>\r\n        <div className=\"flex flex-1 flex-col gap-4 p-2 sm:p-4 pt-0\">\r\n          {/* Header */}\r\n          <div className=\"max-w-7xl mx-auto w-full\">\r\n            <div className=\"mb-4 sm:mb-6 lg:mb-8\">\r\n              <h1 className=\"text-2xl sm:text-3xl font-bold text-foreground mb-1 sm:mb-2\">Member Directory</h1>\r\n              <p className=\"text-sm sm:text-base text-muted-foreground\">Manage members and their information across all groups</p>\r\n            </div>\r\n\r\n            {/* Member Table Component */}\r\n            <AllowOnly scopes={[\"superadmin\", \"university\", \"region\"]}>\r\n            <MemberTable \r\n              members={members}\r\n              loading={loading}\r\n              error={error}\r\n              onRefresh={fetchMembers}\r\n            />\r\n            </AllowOnly>\r\n            <AllowOnly scopes=\"smallgroup\">\r\n            <SmallGroupTable/>\r\n            </AllowOnly>\r\n          </div>\r\n        </div>\r\n      </SidebarInset>\r\n    </SidebarProvider>\r\n  );\r\n}","'use client';\r\n\r\nimport { useState } from 'react';\r\nimport { Search, RefreshCw, UserPlus, Edit, Trash2, Eye, Users, Calendar, MapPin, Phone, Mail, GraduationCap, Building2, Church } from 'lucide-react';\r\nimport { AddMemberModal } from \"@/components/add-member-modal\";\r\nimport { DeleteMemberModal } from \"@/components/delete-member-modal\";\r\nimport { EditMemberModal } from \"@/components/edit-member-modal\";\r\nimport { DenyOnly } from \"@/components/role-based-access\";\r\n\r\n// Types for API response\r\ninterface Member {\r\n  id: number;\r\n  firstname: string | null;\r\n  secondname: string | null;\r\n  gender: string | null;\r\n  birthdate: string | null;\r\n  placeOfBirthProvince: string | null;\r\n  placeOfBirthDistrict: string | null;\r\n  placeOfBirthSector: string | null;\r\n  placeOfBirthCell: string | null;\r\n  placeOfBirthVillage: string | null;\r\n  localChurch: string | null;\r\n  email: string | null;\r\n  phone: string | null;\r\n  type: string;\r\n  status: string;\r\n  regionId: number | null;\r\n  universityId: number | null;\r\n  smallGroupId: number | null;\r\n  alumniGroupId: number | null;\r\n  graduationDate: string | null;\r\n  faculty: string | null;\r\n  professionalism: string | null;\r\n  maritalStatus: string | null;\r\n  createdAt: string;\r\n  updatedAt: string;\r\n  region: { name: string } | null;\r\n  university: { name: string } | null;\r\n  smallgroup: { name: string } | null;\r\n  alumnismallgroup: { name: string } | null;\r\n}\r\n\r\nconst memberTypeLabels = {\r\n  student: 'Student',\r\n  graduate: 'Graduate',\r\n  staff: 'Staff',\r\n  volunteer: 'Volunteer',\r\n  alumni: 'Alumni',\r\n};\r\n\r\nconst memberStatusLabels = {\r\n  active: 'Active',\r\n  pre_graduate: 'Pre-Graduate',\r\n  graduate: 'Graduate',\r\n  alumni: 'Alumni',\r\n  inactive: 'Inactive',\r\n};\r\n\r\nconst memberStatusColors = {\r\n  active: 'bg-green-100 text-green-800',\r\n  pre_graduate: 'bg-blue-100 text-blue-800',\r\n  graduate: 'bg-purple-100 text-purple-800',\r\n  alumni: 'bg-orange-100 text-orange-800',\r\n  inactive: 'bg-gray-100 text-gray-800',\r\n};\r\n\r\nconst memberTypeColors = {\r\n  student: 'bg-blue-100 text-blue-800',\r\n  graduate: 'bg-green-100 text-green-800',\r\n  staff: 'bg-purple-100 text-purple-800',\r\n  volunteer: 'bg-yellow-100 text-yellow-800',\r\n  alumni: 'bg-orange-100 text-orange-800',\r\n};\r\n\r\ninterface MemberTableProps {\r\n  members: Member[];\r\n  loading: boolean;\r\n  error: string | null;\r\n  onRefresh: () => void;\r\n  refreshKey?: number;\r\n}\r\n\r\nexport default function MemberTable({ \r\n  members, \r\n  loading, \r\n  error, \r\n  onRefresh,\r\n  refreshKey \r\n}: MemberTableProps) {\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [itemsPerPage] = useState(5);\r\n\r\n  // Debug logging\r\n  console.log('MemberTable render - loading:', loading, 'members count:', members.length);\r\n  const [deleteModal, setDeleteModal] = useState<{\r\n    isOpen: boolean;\r\n    memberId: number | null;\r\n    memberName: string;\r\n  }>({\r\n    isOpen: false,\r\n    memberId: null,\r\n    memberName: ''\r\n  });\r\n  const [deleting, setDeleting] = useState(false);\r\n  const [editingMember, setEditingMember] = useState<Member | null>(null);\r\n\r\n  // Open delete confirmation modal\r\n  const openDeleteModal = (memberId: number, memberName: string) => {\r\n    setDeleteModal({\r\n      isOpen: true,\r\n      memberId,\r\n      memberName\r\n    });\r\n  };\r\n\r\n  // Close delete confirmation modal\r\n  const closeDeleteModal = () => {\r\n    setDeleteModal({\r\n      isOpen: false,\r\n      memberId: null,\r\n      memberName: ''\r\n    });\r\n  };\r\n\r\n  // Open edit modal\r\n  const openEditModal = (member: Member) => {\r\n    setEditingMember(member);\r\n  };\r\n\r\n  // Close edit modal\r\n  const closeEditModal = () => {\r\n    setEditingMember(null);\r\n  };\r\n\r\n  // Delete member function\r\n  const deleteMember = async () => {\r\n    if (!deleteModal.memberId) return;\r\n\r\n    setDeleting(true);\r\n    \r\n    try {\r\n      const response = await fetch(`/api/members?id=${deleteModal.memberId}`, {\r\n        method: 'DELETE'\r\n      });\r\n      \r\n      if (response.status === 200) {\r\n        // Close the modal\r\n        closeDeleteModal();\r\n        \r\n        // Refresh the data\r\n        onRefresh();\r\n        \r\n        // Show success message (you could add a toast notification here)\r\n        console.log('Member deleted successfully');\r\n      }\r\n    } catch (err) {\r\n      console.error('Error deleting member:', err);\r\n      alert('Failed to delete member. Please try again.');\r\n    } finally {\r\n      setDeleting(false);\r\n    }\r\n  };\r\n\r\n  const filteredMembers = members.filter(member => {\r\n    if (!searchTerm) return true;\r\n    \r\n    const searchLower = searchTerm.toLowerCase();\r\n    \r\n    return (\r\n      member.firstname?.toLowerCase().includes(searchLower) ||\r\n      member.secondname?.toLowerCase().includes(searchLower) ||\r\n      member.email?.toLowerCase().includes(searchLower) ||\r\n      member.phone?.includes(searchTerm) ||\r\n      member.faculty?.toLowerCase().includes(searchLower) ||\r\n      member.professionalism?.toLowerCase().includes(searchLower) ||\r\n      member.localChurch?.toLowerCase().includes(searchLower) ||\r\n      member.region?.name?.toLowerCase().includes(searchLower) ||\r\n      member.university?.name?.toLowerCase().includes(searchLower) ||\r\n      member.smallgroup?.name?.toLowerCase().includes(searchLower) ||\r\n      member.alumnismallgroup?.name?.toLowerCase().includes(searchLower) ||\r\n      member.type?.toLowerCase().includes(searchLower) ||\r\n      member.status?.toLowerCase().includes(searchLower) ||\r\n      member.gender?.toLowerCase().includes(searchLower) ||\r\n      member.maritalStatus?.toLowerCase().includes(searchLower) ||\r\n      memberTypeLabels[member.type as keyof typeof memberTypeLabels]?.toLowerCase().includes(searchLower) ||\r\n      memberStatusLabels[member.status as keyof typeof memberStatusLabels]?.toLowerCase().includes(searchLower)\r\n    );\r\n  });\r\n\r\n  // Pagination calculations\r\n  const totalPages = Math.ceil(filteredMembers.length / itemsPerPage);\r\n  const startIndex = (currentPage - 1) * itemsPerPage;\r\n  const endIndex = startIndex + itemsPerPage;\r\n  const paginatedMembers = filteredMembers.slice(startIndex, endIndex);\r\n\r\n  // Reset to first page when search term changes\r\n  const handleSearchChange = (value: string) => {\r\n    setSearchTerm(value);\r\n    setCurrentPage(1);\r\n  };\r\n\r\n  // Pagination handlers\r\n  const goToPage = (page: number) => {\r\n    setCurrentPage(Math.max(1, Math.min(page, totalPages)));\r\n  };\r\n\r\n  const goToPreviousPage = () => {\r\n    goToPage(currentPage - 1);\r\n  };\r\n\r\n  const goToNextPage = () => {\r\n    goToPage(currentPage + 1);\r\n  };\r\n\r\n  return (\r\n    <div className=\"max-w-7xl mx-auto w-full\">\r\n      {/* Search and Actions */}\r\n      <div className=\"flex flex-col sm:flex-row gap-3 sm:gap-4 items-stretch sm:items-center justify-between mb-4 sm:mb-6\">\r\n        <div className=\"flex flex-col sm:flex-row gap-2 sm:gap-3 flex-1\">\r\n          {/* Search */}\r\n          <div className=\"relative flex-1 max-w-md\">\r\n            <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-muted-foreground w-4 h-4\" />\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Search members...\"\r\n              value={searchTerm}\r\n              onChange={(e) => handleSearchChange(e.target.value)}\r\n              className=\"w-full pl-10 pr-4 py-2 sm:py-2.5 bg-muted/30 border border-border/20 rounded-lg focus:ring-2 focus:ring-primary/20 focus:border-primary/50 focus:bg-muted/50 transition-all duration-200 text-foreground placeholder:text-muted-foreground text-sm sm:text-base\"\r\n            />\r\n          </div>\r\n\r\n          {/* Refresh Button */}\r\n          <button \r\n            onClick={onRefresh}\r\n            disabled={loading}\r\n            className=\"flex items-center justify-center gap-2 px-3 sm:px-4 py-2 sm:py-2.5 text-foreground bg-muted/30 hover:bg-muted/50 border border-border/20 hover:border-border/40 rounded-lg transition-all duration-200 text-sm sm:text-base disabled:opacity-50 disabled:cursor-not-allowed\"\r\n          >\r\n            <RefreshCw className={`w-4 h-4 ${loading ? 'animate-spin' : ''}`} />\r\n            <span className=\"hidden sm:inline\">{loading ? 'Loading...' : 'Refresh'}</span>\r\n          </button>\r\n        </div>\r\n\r\n        {/* Add New Member Button */}\r\n        <AddMemberModal onMemberAdded={onRefresh}>\r\n          <button className=\"flex items-center justify-center gap-2 px-4 sm:px-6 py-2 sm:py-2.5 bg-muted text-foreground hover:bg-muted/80 rounded-md transition-all duration-200 shadow-sm text-sm sm:text-base\">\r\n            <UserPlus className=\"w-4 h-4\" />\r\n            <span className=\"hidden sm:inline\">Add New Member</span>\r\n            <span className=\"sm:hidden\">Add Member</span>\r\n          </button>\r\n        </AddMemberModal>\r\n      </div>\r\n\r\n      {/* Error State */}\r\n      {error && (\r\n        <div className=\"bg-destructive/10 border border-destructive/20 rounded-lg p-4 mb-6\">\r\n          <div className=\"flex items-center gap-2 text-destructive\">\r\n            <span className=\"text-sm font-medium\">Error:</span>\r\n            <span className=\"text-sm\">{error}</span>\r\n          </div>\r\n          <button \r\n            onClick={onRefresh}\r\n            className=\"mt-2 text-sm text-destructive hover:text-destructive/80 underline\"\r\n          >\r\n            Try again\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n      {/* Members Table */}\r\n      <div className=\"bg-card rounded-lg shadow-sm border border-border overflow-hidden\">\r\n        {loading ? (\r\n          <div className=\"flex items-center justify-center py-12\">\r\n            <div className=\"flex flex-col items-center gap-3 text-muted-foreground\">\r\n              <RefreshCw className=\"w-8 h-8 animate-spin text-primary\" />\r\n              <span className=\"text-lg font-medium\">Loading members...</span>\r\n              <span className=\"text-sm\">Please wait while we fetch the data</span>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div className=\"overflow-x-auto\">\r\n            <table className=\"w-full min-w-[800px]\">\r\n              <thead className=\"bg-muted/50 border-b border-border\">\r\n                <tr>\r\n                  <th className=\"px-3 sm:px-6 py-3 text-left text-xs font-medium text-muted-foreground uppercase tracking-wider\">\r\n                    Member\r\n                  </th>\r\n                  <th className=\"px-3 sm:px-6 py-3 text-left text-xs font-medium text-muted-foreground uppercase tracking-wider hidden md:table-cell\">\r\n                    Contact\r\n                  </th>\r\n                  \r\n                    <th className=\"px-3 sm:px-6 py-3 text-left text-xs font-medium text-muted-foreground uppercase tracking-wider hidden lg:table-cell\">\r\n                      Organization\r\n                    </th>\r\n                \r\n                  <th className=\"px-3 sm:px-6 py-3 text-left text-xs font-medium text-muted-foreground uppercase tracking-wider hidden xl:table-cell\">\r\n                    Education\r\n                  </th>\r\n                  <th className=\"px-3 sm:px-6 py-3 text-left text-xs font-medium text-muted-foreground uppercase tracking-wider\">\r\n                    Type & Status\r\n                  </th>\r\n                  <th className=\"px-3 sm:px-6 py-3 text-left text-xs font-medium text-muted-foreground uppercase tracking-wider\">\r\n                    Actions\r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n              <tbody className=\"bg-card divide-y divide-border\">\r\n              {paginatedMembers.map((member) => (\r\n                <tr key={member.id} className=\"hover:bg-muted/50\">\r\n                  <td className=\"px-3 sm:px-6 py-3 sm:py-4\">\r\n                    <div className=\"flex items-center\">\r\n                      <div className=\"flex-shrink-0 h-8 w-8 sm:h-10 sm:w-10\">\r\n                        <div className=\"h-8 w-8 sm:h-10 sm:w-10 rounded-full bg-muted flex items-center justify-center\">\r\n                          <span className=\"text-xs sm:text-sm font-medium text-muted-foreground\">\r\n                            {member.firstname?.[0]}{member.secondname?.[0]}\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"ml-2 sm:ml-4 min-w-0 flex-1\">\r\n                        <div className=\"text-sm font-medium text-foreground truncate\">\r\n                          {member.firstname} {member.secondname}\r\n                        </div>\r\n                        <div className=\"text-xs sm:text-sm text-muted-foreground flex items-center gap-1 truncate\">\r\n                          <span>{member.gender}</span>\r\n                          <span>•</span>\r\n                          <span>{member.maritalStatus}</span>\r\n                          {member.birthdate && (\r\n                            <>\r\n                              <span>•</span>\r\n                              <span>{new Date().getFullYear() - new Date(member.birthdate).getFullYear()}y</span>\r\n                            </>\r\n                          )}\r\n                        </div>\r\n                        {/* Mobile: Show contact info inline */}\r\n                        <div className=\"md:hidden mt-1 space-y-1\">\r\n                          <div className=\"text-xs text-foreground flex items-center gap-1\">\r\n                            <Mail className=\"w-3 h-3\" />\r\n                            <span className=\"truncate\">{member.email}</span>\r\n                          </div>\r\n                          <div className=\"text-xs text-muted-foreground flex items-center gap-1\">\r\n                            <Phone className=\"w-3 h-3\" />\r\n                            <span>{member.phone}</span>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </td>\r\n                  <td className=\"px-3 sm:px-6 py-3 sm:py-4 whitespace-nowrap hidden md:table-cell\">\r\n                    <div className=\"text-sm text-foreground flex items-center gap-1\">\r\n                      <Mail className=\"w-3 h-3\" />\r\n                      <span className=\"truncate max-w-[200px]\">{member.email}</span>\r\n                    </div>\r\n                    <div className=\"text-sm text-muted-foreground flex items-center gap-1\">\r\n                      <Phone className=\"w-3 h-3\" />\r\n                      <span>{member.phone}</span>\r\n                    </div>\r\n                    {member.localChurch && (\r\n                      <div className=\"text-sm text-muted-foreground flex items-center gap-1\">\r\n                        <Church className=\"w-3 h-3\" />\r\n                        <span className=\"truncate max-w-[200px]\">{member.localChurch}</span>\r\n                      </div>\r\n                    )}\r\n                  </td>\r\n                 \r\n                    <td className=\"px-3 sm:px-6 py-3 sm:py-4 whitespace-nowrap hidden lg:table-cell\">\r\n                    <DenyOnly scopes=\"university\">\r\n                      <div className=\"text-sm text-foreground flex items-center gap-1\">\r\n                        <MapPin className=\"w-3 h-3\" />\r\n                        <span className=\"truncate max-w-[150px]\">{member.region?.name}</span>\r\n                      </div>\r\n                      </DenyOnly>\r\n                      <div className=\"text-sm text-muted-foreground flex items-center gap-1\">\r\n                        <Building2 className=\"w-3 h-3\" />\r\n                        <span className=\"truncate max-w-[150px]\">{member.university?.name}</span>\r\n                      </div>\r\n                      <div className=\"text-sm text-muted-foreground flex items-center gap-1\">\r\n                        <Users className=\"w-3 h-3\" />\r\n                        <span className=\"truncate max-w-[150px]\">{member.smallgroup?.name}</span>\r\n                      </div>\r\n                      {member.alumnismallgroup && (\r\n                        <div className=\"text-sm text-muted-foreground flex items-center gap-1\">\r\n                          <GraduationCap className=\"w-3 h-3\" />\r\n                          <span className=\"truncate max-w-[150px]\">{member.alumnismallgroup.name}</span>\r\n                        </div>\r\n                      )}\r\n                    </td>\r\n                  \r\n                  <td className=\"px-3 sm:px-6 py-3 sm:py-4 whitespace-nowrap hidden xl:table-cell\">\r\n                    {member.faculty && (\r\n                      <div className=\"text-sm text-foreground truncate max-w-[150px]\">{member.faculty}</div>\r\n                    )}\r\n                    <DenyOnly scopes=\"university\">\r\n                    {member.professionalism && (\r\n                      <div className=\"text-sm text-muted-foreground truncate max-w-[150px]\">{member.professionalism}</div>\r\n                    )}\r\n                    </DenyOnly>\r\n\r\n                    {member.graduationDate && (\r\n                      <div className=\"text-sm text-muted-foreground flex items-center gap-1\">\r\n                        <Calendar className=\"w-3 h-3\" />\r\n                        <span className=\"truncate\">Grad: {new Date(member.graduationDate).toLocaleDateString()}</span>\r\n                      </div>\r\n                    )}\r\n                  </td>\r\n                  <td className=\"px-3 sm:px-6 py-3 sm:py-4\">\r\n                    <div className=\"flex flex-col gap-1 sm:gap-2\">\r\n                      {/* Type Badge */}\r\n                      <span className={`inline-flex px-2 py-1 text-xs font-semibold rounded-full w-fit ${memberTypeColors[member.type as keyof typeof memberTypeColors]}`}>\r\n                        {memberTypeLabels[member.type as keyof typeof memberTypeColors]}\r\n                      </span>\r\n                      {/* Status Badge */}\r\n                      <span className={`inline-flex px-2 py-1 text-xs font-semibold rounded-full w-fit ${memberStatusColors[member.status as keyof typeof memberStatusColors]}`}>\r\n                        {memberStatusLabels[member.status as keyof typeof memberStatusColors]}\r\n                      </span>\r\n                      {/* Joined Date */}\r\n                      <div className=\"text-xs text-muted-foreground\">\r\n                        {new Date(member.createdAt).toLocaleDateString()}\r\n                      </div>\r\n                    </div>\r\n                  </td>\r\n                  <td className=\"px-3 sm:px-6 py-3 sm:py-4 text-sm font-medium\">\r\n                    <div className=\"flex items-center gap-1 sm:gap-2\">\r\n                      <button className=\"text-primary hover:text-primary/80 p-1 rounded\" title=\"View\">\r\n                        <Eye className=\"w-4 h-4\" />\r\n                      </button>\r\n                      <button \r\n                        onClick={() => openEditModal(member)}\r\n                        className=\"text-muted-foreground hover:text-foreground p-1 rounded\" \r\n                        title=\"Edit\"\r\n                      >\r\n                        <Edit className=\"w-4 h-4\" />\r\n                      </button>\r\n                      <DenyOnly scopes=\"university\">\r\n                      <button \r\n                        onClick={() => openDeleteModal(member.id, `${member.firstname} ${member.secondname}`)}\r\n                        className=\"text-destructive hover:text-destructive/80 p-1 rounded\" \r\n                        title=\"Delete\"\r\n                      >\r\n                        <Trash2 className=\"w-4 h-4\" />\r\n                      </button>\r\n                      </DenyOnly>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        )}\r\n\r\n        {/* Empty State */}\r\n        {!loading && paginatedMembers.length === 0 && !error && (\r\n          <div className=\"flex flex-col items-center justify-center py-12\">\r\n            <Users className=\"w-12 h-12 text-muted-foreground mb-4\" />\r\n            <h3 className=\"text-lg font-medium text-foreground mb-2\">No members found</h3>\r\n            <p className=\"text-muted-foreground text-center mb-4\">\r\n              {searchTerm ? 'No members match your search criteria.' : 'No members have been added yet.'}\r\n            </p>\r\n            {!searchTerm && (\r\n              <AddMemberModal onMemberAdded={onRefresh}>\r\n                <button className=\"flex items-center gap-2 px-4 py-2 bg-primary text-primary-foreground rounded-md hover:bg-primary/90 transition-colors\">\r\n                  <UserPlus className=\"w-4 h-4\" />\r\n                  Add First Member\r\n                </button>\r\n              </AddMemberModal>\r\n            )}\r\n          </div>\r\n        )}\r\n\r\n        {/* Table Footer */}\r\n        {!loading && filteredMembers.length > 0 && (\r\n          <div className=\"bg-muted/50 px-3 sm:px-6 py-3 border-t border-border\">\r\n            <div className=\"flex flex-col sm:flex-row items-center justify-between gap-2 sm:gap-0\">\r\n              <div className=\"text-xs sm:text-sm text-muted-foreground text-center sm:text-left\">\r\n                Showing <span className=\"font-medium text-foreground\">{startIndex + 1}</span> to <span className=\"font-medium text-foreground\">{Math.min(endIndex, filteredMembers.length)}</span> of <span className=\"font-medium text-foreground\">{filteredMembers.length}</span> members\r\n              </div>\r\n              <div className=\"flex items-center gap-1 sm:gap-2\">\r\n                {/* Previous Button */}\r\n                <button \r\n                  onClick={goToPreviousPage}\r\n                  disabled={currentPage === 1}\r\n                  className=\"px-2 sm:px-3 py-1 text-xs sm:text-sm text-muted-foreground hover:text-foreground border border-border rounded hover:bg-muted/50 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n                >\r\n                  Previous\r\n                </button>\r\n                \r\n                {/* Page Numbers */}\r\n                <div className=\"flex items-center gap-1\">\r\n                  {Array.from({ length: Math.min(5, totalPages) }, (_, i) => {\r\n                    let pageNum;\r\n                    if (totalPages <= 5) {\r\n                      pageNum = i + 1;\r\n                    } else if (currentPage <= 3) {\r\n                      pageNum = i + 1;\r\n                    } else if (currentPage >= totalPages - 2) {\r\n                      pageNum = totalPages - 4 + i;\r\n                    } else {\r\n                      pageNum = currentPage - 2 + i;\r\n                    }\r\n                    \r\n                    return (\r\n                      <button\r\n                        key={pageNum}\r\n                        onClick={() => goToPage(pageNum)}\r\n                        className={`px-2 py-1 text-xs sm:text-sm rounded ${\r\n                          currentPage === pageNum\r\n                            ? 'bg-primary text-primary-foreground'\r\n                            : 'text-muted-foreground hover:text-foreground hover:bg-muted/50'\r\n                        }`}\r\n                      >\r\n                        {pageNum}\r\n                      </button>\r\n                    );\r\n                  })}\r\n                  \r\n                  {totalPages > 5 && currentPage < totalPages - 2 && (\r\n                    <>\r\n                      <span className=\"text-muted-foreground\">...</span>\r\n                      <button\r\n                        onClick={() => goToPage(totalPages)}\r\n                        className=\"px-2 py-1 text-xs sm:text-sm text-muted-foreground hover:text-foreground hover:bg-muted/50 rounded\"\r\n                      >\r\n                        {totalPages}\r\n                      </button>\r\n                    </>\r\n                  )}\r\n                </div>\r\n                \r\n                {/* Next Button */}\r\n                <button \r\n                  onClick={goToNextPage}\r\n                  disabled={currentPage === totalPages}\r\n                  className=\"px-2 sm:px-3 py-1 text-xs sm:text-sm text-muted-foreground hover:text-foreground border border-border rounded hover:bg-muted/50 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n                >\r\n                  Next\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Delete Confirmation Modal */}\r\n      <DeleteMemberModal\r\n        isOpen={deleteModal.isOpen}\r\n        onClose={closeDeleteModal}\r\n        onConfirm={deleteMember}\r\n        memberName={deleteModal.memberName}\r\n        isLoading={deleting}\r\n      />\r\n      \r\n      {/* Edit Member Modal */}\r\n      <EditMemberModal\r\n        member={editingMember}\r\n        onMemberUpdated={onRefresh}\r\n        isOpen={editingMember !== null}\r\n        onClose={closeEditModal}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport { Button } from \"@/components/ui/ui copy/button\"\r\nimport { Card, CardContent, CardHeader } from \"@/components/ui/ui copy/card\"\r\nimport { Input } from \"@/components/ui/ui copy/input\"\r\nimport { Label } from \"@/components/ui/ui copy/label\"\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/ui copy/select\"\r\nimport {\r\n  Sheet,\r\n  SheetContent,\r\n  SheetDescription,\r\n  SheetHeader,\r\n  SheetTitle,\r\n  SheetTrigger,\r\n} from \"@/components/ui/ui copy/sheet\"\r\nimport { UserPlus, User, Mail, Phone, MapPin, GraduationCap, Building2, Users, Church, Calendar } from \"lucide-react\"\r\nimport { useUserScope } from \"@/hooks/use-user-scope\"\r\nimport { createMemberSchema } from \"@/app/api/validation/member\"\r\n\r\ninterface AddMemberModalProps {\r\n  children: React.ReactNode\r\n  onMemberAdded?: () => void\r\n}\r\n\r\nexport function AddMemberModal({ children, onMemberAdded }: AddMemberModalProps) {\r\n  const [open, setOpen] = React.useState(false)\r\n  const [isLoading, setIsLoading] = React.useState(false)\r\n  const [errors, setErrors] = React.useState<Record<string, string>>({})\r\n  const [success, setSuccess] = React.useState(false)\r\n  \r\n  // Get user scope and visibility rules\r\n  const { userScope, loading: scopeLoading, getVisibleFields, getDefaultValues } = useUserScope()\r\n  const visibleFields = getVisibleFields()\r\n  \r\n  // Memoize default values to prevent infinite re-renders\r\n  const defaultValues = React.useMemo(() => getDefaultValues(), [getDefaultValues])\r\n  \r\n  const [formData, setFormData] = React.useState({\r\n    firstname: \"\",\r\n    secondname: \"\",\r\n    gender: \"\",\r\n    birthdate: \"\",\r\n    placeOfBirthProvince: \"\",\r\n    placeOfBirthDistrict: \"\",\r\n    placeOfBirthSector: \"\",\r\n    placeOfBirthCell: \"\",\r\n    placeOfBirthVillage: \"\",\r\n    localChurch: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    type: \"\",\r\n    status: \"active\",\r\n    regionId: \"\",\r\n    universityId: \"\",\r\n    smallGroupId: \"\",\r\n    alumniGroupId: \"\",\r\n    graduationDate: \"\",\r\n    faculty: \"\",\r\n    professionalism: \"\",\r\n    maritalStatus: \"\",\r\n  })\r\n\r\n  // Location data states\r\n  const [provinces, setProvinces] = React.useState<Array<{id: string, name: string}>>([])\r\n  const [districts, setDistricts] = React.useState<Array<{id: string, name: string}>>([])\r\n  const [sectors, setSectors] = React.useState<Array<{id: string, name: string}>>([])\r\n  const [cells, setCells] = React.useState<Array<{id: string, name: string}>>([])\r\n  const [villages, setVillages] = React.useState<Array<{id: string, name: string}>>([])\r\n  const [loadingLocations, setLoadingLocations] = React.useState<{[key: string]: boolean}>({})\r\n\r\n  // Small groups state\r\n  const [smallGroups, setSmallGroups] = React.useState<Array<{id: number, name: string}>>([])\r\n  const [loadingSmallGroups, setLoadingSmallGroups] = React.useState(false)\r\n\r\n  // Organization data states for superadmin\r\n  const [regions, setRegions] = React.useState<Array<{id: number, name: string}>>([])\r\n  const [universities, setUniversities] = React.useState<Array<{id: number, name: string}>>([])\r\n  const [alumniGroups, setAlumniGroups] = React.useState<Array<{id: number, name: string}>>([])\r\n  const [loadingOrganizations, setLoadingOrganizations] = React.useState<{[key: string]: boolean}>({})\r\n\r\n  // Update form data when user scope loads\r\n  React.useEffect(() => {\r\n    if (userScope && !scopeLoading) {\r\n      setFormData(prev => ({\r\n        ...prev,\r\n        regionId: defaultValues.regionId || \"\",\r\n        universityId: defaultValues.universityId || \"\",\r\n        smallGroupId: defaultValues.smallGroupId || \"\",\r\n        alumniGroupId: defaultValues.alumniGroupId || \"\",\r\n      }))\r\n    }\r\n  }, [userScope, scopeLoading, defaultValues])\r\n\r\n  // Fetch small groups when university ID changes\r\n  React.useEffect(() => {\r\n    if (formData.universityId) {\r\n      fetchSmallGroups(formData.universityId)\r\n    } else {\r\n      setSmallGroups([])\r\n    }\r\n  }, [formData.universityId])\r\n\r\n  // Fetch regions when superadmin scope loads\r\n  React.useEffect(() => {\r\n    if (userScope?.scope === 'superadmin' && !scopeLoading) {\r\n      fetchRegions()\r\n    }\r\n  }, [userScope?.scope, scopeLoading])\r\n\r\n  // Fetch universities when region changes (for superadmin)\r\n  React.useEffect(() => {\r\n    if (userScope?.scope === 'superadmin' && formData.regionId) {\r\n      fetchUniversities(formData.regionId)\r\n    } else {\r\n      setUniversities([])\r\n    }\r\n  }, [formData.regionId, userScope?.scope])\r\n\r\n  // Fetch alumni groups when region changes (for superadmin)\r\n  React.useEffect(() => {\r\n    if (userScope?.scope === 'superadmin' && formData.regionId) {\r\n      fetchAlumniGroups(formData.regionId)\r\n    } else {\r\n      setAlumniGroups([])\r\n    }\r\n  }, [formData.regionId, userScope?.scope])\r\n\r\n  // Fetch location data\r\n  const fetchLocations = async (type: string, parentId?: string) => {\r\n    console.log(`Fetching ${type}${parentId ? ` for parent ${parentId}` : ''}`)\r\n    setLoadingLocations(prev => ({ ...prev, [type]: true }))\r\n    try {\r\n      const url = parentId \r\n        ? `/api/locations?type=${type}&parentId=${parentId}`\r\n        : `/api/locations?type=${type}`\r\n      \r\n      console.log(`Fetching from URL: ${url}`)\r\n      const response = await fetch(url)\r\n      const data = await response.json()\r\n      \r\n      console.log(`Response for ${type}:`, { status: response.status, data })\r\n      \r\n      if (response.ok) {\r\n        switch (type) {\r\n          case 'provinces':\r\n            console.log('Setting provinces:', data)\r\n            setProvinces(data)\r\n            break\r\n          case 'districts':\r\n            console.log('Setting districts:', data)\r\n            setDistricts(data)\r\n            break\r\n          case 'sectors':\r\n            console.log('Setting sectors:', data)\r\n            setSectors(data)\r\n            break\r\n          case 'cells':\r\n            console.log('Setting cells:', data)\r\n            setCells(data)\r\n            break\r\n          case 'villages':\r\n            console.log('Setting villages:', data)\r\n            setVillages(data)\r\n            break\r\n        }\r\n      } else {\r\n        console.error(`API Error for ${type}:`, data)\r\n      }\r\n    } catch (error) {\r\n      console.error(`Error fetching ${type}:`, error)\r\n    } finally {\r\n      setLoadingLocations(prev => ({ ...prev, [type]: false }))\r\n    }\r\n  }\r\n\r\n  // Fetch small groups by university ID\r\n  const fetchSmallGroups = async (universityId: string) => {\r\n    if (!universityId) {\r\n      setSmallGroups([])\r\n      return\r\n    }\r\n    \r\n    setLoadingSmallGroups(true)\r\n    try {\r\n      const response = await fetch(`/api/small-groups?universityId=${universityId}`)\r\n      if (!response.ok) {\r\n        throw new Error('Failed to fetch small groups')\r\n      }\r\n      \r\n      const data = await response.json()\r\n      setSmallGroups(data)\r\n    } catch (error) {\r\n      console.error('Error fetching small groups:', error)\r\n      setSmallGroups([])\r\n    } finally {\r\n      setLoadingSmallGroups(false)\r\n    }\r\n  }\r\n\r\n  // Fetch regions (for superadmin)\r\n  const fetchRegions = async () => {\r\n    setLoadingOrganizations(prev => ({ ...prev, regions: true }))\r\n    try {\r\n      const response = await fetch('/api/regions')\r\n      if (!response.ok) {\r\n        throw new Error('Failed to fetch regions')\r\n      }\r\n      \r\n      const data = await response.json()\r\n      setRegions(data)\r\n    } catch (error) {\r\n      console.error('Error fetching regions:', error)\r\n      setRegions([])\r\n    } finally {\r\n      setLoadingOrganizations(prev => ({ ...prev, regions: false }))\r\n    }\r\n  }\r\n\r\n  // Fetch universities by region ID (for superadmin)\r\n  const fetchUniversities = async (regionId: string) => {\r\n    if (!regionId) {\r\n      setUniversities([])\r\n      return\r\n    }\r\n    \r\n    setLoadingOrganizations(prev => ({ ...prev, universities: true }))\r\n    try {\r\n      const response = await fetch(`/api/universities?regionId=${regionId}`)\r\n      if (!response.ok) {\r\n        throw new Error('Failed to fetch universities')\r\n      }\r\n      \r\n      const data = await response.json()\r\n      setUniversities(data)\r\n    } catch (error) {\r\n      console.error('Error fetching universities:', error)\r\n      setUniversities([])\r\n    } finally {\r\n      setLoadingOrganizations(prev => ({ ...prev, universities: false }))\r\n    }\r\n  }\r\n\r\n  // Fetch alumni groups by region ID (for superadmin)\r\n  const fetchAlumniGroups = async (regionId: string) => {\r\n    if (!regionId) {\r\n      setAlumniGroups([])\r\n      return\r\n    }\r\n    \r\n    setLoadingOrganizations(prev => ({ ...prev, alumniGroups: true }))\r\n    try {\r\n      const response = await fetch(`/api/alumni-small-groups?regionId=${regionId}`)\r\n      if (!response.ok) {\r\n        throw new Error('Failed to fetch alumni groups')\r\n      }\r\n      \r\n      const data = await response.json()\r\n      setAlumniGroups(data)\r\n    } catch (error) {\r\n      console.error('Error fetching alumni groups:', error)\r\n      setAlumniGroups([])\r\n    } finally {\r\n      setLoadingOrganizations(prev => ({ ...prev, alumniGroups: false }))\r\n    }\r\n  }\r\n\r\n  const handleInputChange = (field: string, value: string) => {\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      [field]: value\r\n    }))\r\n    \r\n    // Clear error for this field when user starts typing\r\n    if (errors[field]) {\r\n      setErrors(prev => ({\r\n        ...prev,\r\n        [field]: \"\"\r\n      }))\r\n    }\r\n    \r\n    // Clear success state when user starts typing\r\n    if (success) {\r\n      setSuccess(false)\r\n    }\r\n\r\n    // Handle location hierarchy\r\n    if (field === 'placeOfBirthProvince') {\r\n      // Clear dependent fields and fetch districts\r\n      setFormData(prev => ({\r\n        ...prev,\r\n        placeOfBirthDistrict: \"\",\r\n        placeOfBirthSector: \"\",\r\n        placeOfBirthCell: \"\",\r\n        placeOfBirthVillage: \"\"\r\n      }))\r\n      setDistricts([])\r\n      setSectors([])\r\n      setCells([])\r\n      setVillages([])\r\n      if (value) {\r\n        fetchLocations('districts', value)\r\n      }\r\n    } else if (field === 'placeOfBirthDistrict') {\r\n      // Clear dependent fields and fetch sectors\r\n      setFormData(prev => ({\r\n        ...prev,\r\n        placeOfBirthSector: \"\",\r\n        placeOfBirthCell: \"\",\r\n        placeOfBirthVillage: \"\"\r\n      }))\r\n      setSectors([])\r\n      setCells([])\r\n      setVillages([])\r\n      if (value) {\r\n        fetchLocations('sectors', value)\r\n      }\r\n    } else if (field === 'placeOfBirthSector') {\r\n      // Clear dependent fields and fetch cells\r\n      setFormData(prev => ({\r\n        ...prev,\r\n        placeOfBirthCell: \"\",\r\n        placeOfBirthVillage: \"\"\r\n      }))\r\n      setCells([])\r\n      setVillages([])\r\n      if (value) {\r\n        fetchLocations('cells', value)\r\n      }\r\n    } else if (field === 'placeOfBirthCell') {\r\n      // Clear dependent fields and fetch villages\r\n      setFormData(prev => ({\r\n        ...prev,\r\n        placeOfBirthVillage: \"\"\r\n      }))\r\n      setVillages([])\r\n      if (value) {\r\n        fetchLocations('villages', value)\r\n      }\r\n    }\r\n  }\r\n\r\n  // Load provinces when modal opens\r\n  React.useEffect(() => {\r\n    console.log('Modal open state changed:', open)\r\n    if (open) {\r\n      console.log('Modal opened, fetching provinces...')\r\n      fetchLocations('provinces')\r\n      \r\n      // Fallback test data if API fails\r\n      setTimeout(() => {\r\n        if (provinces.length === 0) {\r\n          console.log('No provinces loaded, using fallback data')\r\n          setProvinces([\r\n            { id: '1', name: 'Kigali City' },\r\n            { id: '2', name: 'Southern Province' },\r\n            { id: '3', name: 'Western Province' },\r\n            { id: '4', name: 'Northern Province' },\r\n            { id: '5', name: 'Eastern Province' }\r\n          ])\r\n        }\r\n      }, 2000)\r\n    }\r\n  }, [open])\r\n\r\n  const validateForm = (): boolean => {\r\n    try {\r\n      createMemberSchema.parse(formData)\r\n      setErrors({})\r\n      return true\r\n    } catch (error: unknown) {\r\n      const newErrors: Record<string, string> = {}\r\n      if (error && typeof error === 'object' && 'errors' in error && Array.isArray(error.errors)) {\r\n        error.errors.forEach((err: Record<string, unknown>) => {\r\n          newErrors[err.path[0]] = err.message\r\n        })\r\n      }\r\n      setErrors(newErrors)\r\n      return false\r\n    }\r\n  }\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault()\r\n    \r\n    if (!validateForm()) {\r\n      return\r\n    }\r\n\r\n    setIsLoading(true)\r\n    \r\n    try {\r\n      // Transform form data to match API expectations\r\n      const apiData = {\r\n        ...formData,\r\n        // Convert empty strings to null for optional fields\r\n        gender: formData.gender || null,\r\n        birthdate: formData.birthdate || null,\r\n        placeOfBirthProvince: formData.placeOfBirthProvince || null,\r\n        placeOfBirthDistrict: formData.placeOfBirthDistrict || null,\r\n        placeOfBirthSector: formData.placeOfBirthSector || null,\r\n        placeOfBirthCell: formData.placeOfBirthCell || null,\r\n        placeOfBirthVillage: formData.placeOfBirthVillage || null,\r\n        localChurch: formData.localChurch || null,\r\n        email: formData.email || null,\r\n        phone: formData.phone || null,\r\n        regionId: formData.regionId || null,\r\n        universityId: formData.universityId || null,\r\n        smallGroupId: formData.smallGroupId || null,\r\n        alumniGroupId: formData.alumniGroupId || null,\r\n        graduationDate: formData.graduationDate || null,\r\n        faculty: formData.faculty || null,\r\n        professionalism: formData.professionalism || null,\r\n        maritalStatus: formData.maritalStatus || null,\r\n      }\r\n\r\n      console.log('Sending member data:', apiData)\r\n      \r\n      const response = await fetch('/api/members', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(apiData)\r\n      })\r\n      const data = await response.json()\r\n      \r\n      console.log('API response:', { status: response.status, data })\r\n      \r\n      if (response.ok) {\r\n        // Show success message\r\n        setSuccess(true)\r\n        setErrors({})\r\n        \r\n        // Reset form\r\n        setFormData({\r\n          firstname: \"\",\r\n          secondname: \"\",\r\n          gender: \"\",\r\n          birthdate: \"\",\r\n          placeOfBirthProvince: \"\",\r\n          placeOfBirthDistrict: \"\",\r\n          placeOfBirthSector: \"\",\r\n          placeOfBirthCell: \"\",\r\n          placeOfBirthVillage: \"\",\r\n          localChurch: \"\",\r\n          email: \"\",\r\n          phone: \"\",\r\n          type: \"\",\r\n          status: \"active\",\r\n          regionId: \"\",\r\n          universityId: \"\",\r\n          smallGroupId: \"\",\r\n          alumniGroupId: \"\",\r\n          graduationDate: \"\",\r\n          faculty: \"\",\r\n          professionalism: \"\",\r\n          maritalStatus: \"\",\r\n        })\r\n        \r\n        // Reset location data\r\n        setDistricts([])\r\n        setSectors([])\r\n        setCells([])\r\n        setVillages([])\r\n        \r\n        // Call the callback to refresh the members list\r\n        if (onMemberAdded) {\r\n          onMemberAdded()\r\n        }\r\n        \r\n        // Close modal after a short delay\r\n        setTimeout(() => {\r\n          setOpen(false)\r\n          setSuccess(false)\r\n        }, 1500)\r\n      } else {\r\n        // Handle API errors\r\n        console.error('API Error:', data)\r\n        if (data.details) {\r\n          setErrors({ general: Array.isArray(data.details) ? data.details.map((d: Record<string, unknown>) => d.message).join(', ') : data.details })\r\n        } else {\r\n          setErrors({ general: data.error || \"Failed to create member\" })\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error creating member:\", error)\r\n      setErrors({ general: \"An unexpected error occurred\" })\r\n    } finally {\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Sheet open={open} onOpenChange={setOpen}>\r\n      <SheetTrigger asChild>\r\n        {children}\r\n      </SheetTrigger>\r\n      <SheetContent side=\"top\" className=\"h-full w-full max-w-none overflow-y-auto\">\r\n        <div className=\"container mx-auto max-w-4xl py-8\">\r\n          <SheetHeader className=\"pb-8 text-center\">\r\n            <SheetTitle className=\"flex items-center justify-center gap-3 text-2xl\">\r\n              <div className=\"flex h-12 w-12 items-center justify-center rounded-lg bg-primary/10\">\r\n                <UserPlus className=\"h-6 w-6 text-primary\" />\r\n              </div>\r\n              Add New Member\r\n            </SheetTitle>\r\n            <SheetDescription className=\"text-lg text-muted-foreground\">\r\n              Add a new member with personal, contact, and organizational information.\r\n            </SheetDescription>\r\n          </SheetHeader>\r\n          \r\n          <Card className=\"shadow-lg\">\r\n            <CardHeader className=\"pb-6\">\r\n              <div className=\"text-center\">\r\n                <h3 className=\"text-lg font-semibold\">Member Information</h3>\r\n                <p className=\"text-sm text-muted-foreground\">Fill in the details below to add a new member</p>\r\n              </div>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <form onSubmit={handleSubmit} className=\"flex flex-col gap-6\">\r\n                {errors.general && (\r\n                  <div className=\"p-3 text-sm text-red-600 bg-red-50 border border-red-200 rounded-md\">\r\n                    {errors.general}\r\n                  </div>\r\n                )}\r\n\r\n                {/* Personal Information */}\r\n                <div className=\"space-y-4\">\r\n                  <h4 className=\"text-md font-semibold text-foreground border-b pb-2\">Personal Information</h4>\r\n                  \r\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                    <div className=\"space-y-2\">\r\n                      <Label htmlFor=\"firstname\" className=\"text-sm font-medium\">First Name *</Label>\r\n                      <div className=\"relative\">\r\n                        <User className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-muted-foreground\" />\r\n                        <Input\r\n                          id=\"firstname\"\r\n                          placeholder=\"Enter first name\"\r\n                          className=\"pl-10 h-11\"\r\n                          value={formData.firstname}\r\n                          onChange={(e) => handleInputChange(\"firstname\", e.target.value)}\r\n                          required\r\n                        />\r\n                      </div>\r\n                      {errors.firstname && <p className=\"text-sm text-red-600\">{errors.firstname}</p>}\r\n                    </div>\r\n\r\n                    <div className=\"space-y-2\">\r\n                      <Label htmlFor=\"secondname\" className=\"text-sm font-medium\">Second Name *</Label>\r\n                      <div className=\"relative\">\r\n                        <User className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-muted-foreground\" />\r\n                        <Input\r\n                          id=\"secondname\"\r\n                          placeholder=\"Enter second name\"\r\n                          className=\"pl-10 h-11\"\r\n                          value={formData.secondname}\r\n                          onChange={(e) => handleInputChange(\"secondname\", e.target.value)}\r\n                          required\r\n                        />\r\n                      </div>\r\n                      {errors.secondname && <p className=\"text-sm text-red-600\">{errors.secondname}</p>}\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n                    <div className=\"space-y-2\">\r\n                      <Label htmlFor=\"gender\" className=\"text-sm font-medium\">Gender</Label>\r\n                      <Select\r\n                        value={formData.gender}\r\n                        onValueChange={(value) => handleInputChange(\"gender\", value)}\r\n                      >\r\n                        <SelectTrigger className=\"h-11\">\r\n                          <SelectValue placeholder=\"Select gender\" />\r\n                        </SelectTrigger>\r\n                        <SelectContent>\r\n                          <SelectItem value=\"male\">Male</SelectItem>\r\n                          <SelectItem value=\"female\">Female</SelectItem>\r\n                        </SelectContent>\r\n                      </Select>\r\n                      {errors.gender && <p className=\"text-sm text-red-600\">{errors.gender}</p>}\r\n                    </div>\r\n\r\n                    <div className=\"space-y-2\">\r\n                      <Label htmlFor=\"birthdate\" className=\"text-sm font-medium\">Birth Date</Label>\r\n                      <Input\r\n                        id=\"birthdate\"\r\n                        type=\"date\"\r\n                        className=\"h-11\"\r\n                        value={formData.birthdate}\r\n                        onChange={(e) => handleInputChange(\"birthdate\", e.target.value)}\r\n                      />\r\n                      {errors.birthdate && <p className=\"text-sm text-red-600\">{errors.birthdate}</p>}\r\n                    </div>\r\n\r\n                    <div className=\"space-y-2\">\r\n                      <Label htmlFor=\"maritalStatus\" className=\"text-sm font-medium\">Marital Status</Label>\r\n                      <Select\r\n                        value={formData.maritalStatus}\r\n                        onValueChange={(value) => handleInputChange(\"maritalStatus\", value)}\r\n                      >\r\n                        <SelectTrigger className=\"h-11\">\r\n                          <SelectValue placeholder=\"Select status\" />\r\n                        </SelectTrigger>\r\n                        <SelectContent>\r\n                          <SelectItem value=\"Single\">Single</SelectItem>\r\n                          <SelectItem value=\"Married\">Married</SelectItem>\r\n                          <SelectItem value=\"Divorced\">Divorced</SelectItem>\r\n                          <SelectItem value=\"Widowed\">Widowed</SelectItem>\r\n                        </SelectContent>\r\n                      </Select>\r\n                      {errors.maritalStatus && <p className=\"text-sm text-red-600\">{errors.maritalStatus}</p>}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Contact Information */}\r\n                <div className=\"space-y-4\">\r\n                  <h4 className=\"text-md font-semibold text-foreground border-b pb-2\">Contact Information</h4>\r\n                  \r\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                    <div className=\"space-y-2\">\r\n                      <Label htmlFor=\"email\" className=\"text-sm font-medium flex items-center gap-2\">\r\n                        <Mail className=\"h-4 w-4\" />\r\n                        Email\r\n                      </Label>\r\n                      <Input\r\n                        id=\"email\"\r\n                        type=\"email\"\r\n                        placeholder=\"Enter email address\"\r\n                        className=\"h-11\"\r\n                        value={formData.email}\r\n                        onChange={(e) => handleInputChange(\"email\", e.target.value)}\r\n                      />\r\n                      {errors.email && <p className=\"text-sm text-red-600\">{errors.email}</p>}\r\n                    </div>\r\n\r\n                    <div className=\"space-y-2\">\r\n                      <Label htmlFor=\"phone\" className=\"text-sm font-medium flex items-center gap-2\">\r\n                        <Phone className=\"h-4 w-4\" />\r\n                        Phone Number\r\n                      </Label>\r\n                      <Input\r\n                        id=\"phone\"\r\n                        type=\"tel\"\r\n                        placeholder=\"+250 788 123 456\"\r\n                        className=\"h-11\"\r\n                        value={formData.phone}\r\n                        onChange={(e) => handleInputChange(\"phone\", e.target.value)}\r\n                      />\r\n                      {errors.phone && <p className=\"text-sm text-red-600\">{errors.phone}</p>}\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"space-y-2\">\r\n                    <Label htmlFor=\"localChurch\" className=\"text-sm font-medium flex items-center gap-2\">\r\n                      <Church className=\"h-4 w-4\" />\r\n                      Local Church\r\n                    </Label>\r\n                    <Input\r\n                      id=\"localChurch\"\r\n                      placeholder=\"Enter local church name\"\r\n                      className=\"h-11\"\r\n                      value={formData.localChurch}\r\n                      onChange={(e) => handleInputChange(\"localChurch\", e.target.value)}\r\n                    />\r\n                    {errors.localChurch && <p className=\"text-sm text-red-600\">{errors.localChurch}</p>}\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Place of Birth */}\r\n                <div className=\"space-y-4\">\r\n                  <h4 className=\"text-md font-semibold text-foreground border-b pb-2\">Place of Birth</h4>\r\n                  \r\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                    <div className=\"space-y-2\">\r\n                      <Label htmlFor=\"placeOfBirthProvince\" className=\"text-sm font-medium\">Province</Label>\r\n                      <Select\r\n                        value={formData.placeOfBirthProvince}\r\n                        onValueChange={(value) => handleInputChange(\"placeOfBirthProvince\", value)}\r\n                      >\r\n                        <SelectTrigger className=\"h-11\">\r\n                          <SelectValue placeholder=\"Select province\" />\r\n                        </SelectTrigger>\r\n                        <SelectContent>\r\n                          {console.log('Rendering provinces:', provinces)}\r\n                          {provinces.map((province) => (\r\n                            <SelectItem key={province.id} value={province.id}>\r\n                              {province.name}\r\n                            </SelectItem>\r\n                          ))}\r\n                        </SelectContent>\r\n                      </Select>\r\n                      {errors.placeOfBirthProvince && <p className=\"text-sm text-red-600\">{errors.placeOfBirthProvince}</p>}\r\n                    </div>\r\n\r\n                    <div className=\"space-y-2\">\r\n                      <Label htmlFor=\"placeOfBirthDistrict\" className=\"text-sm font-medium\">District</Label>\r\n                      <Select\r\n                        value={formData.placeOfBirthDistrict}\r\n                        onValueChange={(value) => handleInputChange(\"placeOfBirthDistrict\", value)}\r\n                        disabled={!formData.placeOfBirthProvince || districts.length === 0}\r\n                      >\r\n                        <SelectTrigger className=\"h-11\">\r\n                          <SelectValue placeholder={\r\n                            loadingLocations.districts \r\n                              ? \"Loading districts...\" \r\n                              : !formData.placeOfBirthProvince \r\n                                ? \"Select province first\" \r\n                                : \"Select district\"\r\n                          } />\r\n                        </SelectTrigger>\r\n                        <SelectContent>\r\n                          {districts.map((district) => (\r\n                            <SelectItem key={district.id} value={district.id}>\r\n                              {district.name}\r\n                            </SelectItem>\r\n                          ))}\r\n                        </SelectContent>\r\n                      </Select>\r\n                      {errors.placeOfBirthDistrict && <p className=\"text-sm text-red-600\">{errors.placeOfBirthDistrict}</p>}\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                    <div className=\"space-y-2\">\r\n                      <Label htmlFor=\"placeOfBirthSector\" className=\"text-sm font-medium\">Sector</Label>\r\n                      <Select\r\n                        value={formData.placeOfBirthSector}\r\n                        onValueChange={(value) => handleInputChange(\"placeOfBirthSector\", value)}\r\n                        disabled={!formData.placeOfBirthDistrict || sectors.length === 0}\r\n                      >\r\n                        <SelectTrigger className=\"h-11\">\r\n                          <SelectValue placeholder={\r\n                            loadingLocations.sectors \r\n                              ? \"Loading sectors...\" \r\n                              : !formData.placeOfBirthDistrict \r\n                                ? \"Select district first\" \r\n                                : \"Select sector\"\r\n                          } />\r\n                        </SelectTrigger>\r\n                        <SelectContent>\r\n                          {sectors.map((sector) => (\r\n                            <SelectItem key={sector.id} value={sector.id}>\r\n                              {sector.name}\r\n                            </SelectItem>\r\n                          ))}\r\n                        </SelectContent>\r\n                      </Select>\r\n                      {errors.placeOfBirthSector && <p className=\"text-sm text-red-600\">{errors.placeOfBirthSector}</p>}\r\n                    </div>\r\n\r\n                    <div className=\"space-y-2\">\r\n                      <Label htmlFor=\"placeOfBirthCell\" className=\"text-sm font-medium\">Cell</Label>\r\n                      <Select\r\n                        value={formData.placeOfBirthCell}\r\n                        onValueChange={(value) => handleInputChange(\"placeOfBirthCell\", value)}\r\n                        disabled={!formData.placeOfBirthSector || cells.length === 0}\r\n                      >\r\n                        <SelectTrigger className=\"h-11\">\r\n                          <SelectValue placeholder={\r\n                            loadingLocations.cells \r\n                              ? \"Loading cells...\" \r\n                              : !formData.placeOfBirthSector \r\n                                ? \"Select sector first\" \r\n                                : \"Select cell\"\r\n                          } />\r\n                        </SelectTrigger>\r\n                        <SelectContent>\r\n                          {cells.map((cell) => (\r\n                            <SelectItem key={cell.id} value={cell.id}>\r\n                              {cell.name}\r\n                            </SelectItem>\r\n                          ))}\r\n                        </SelectContent>\r\n                      </Select>\r\n                      {errors.placeOfBirthCell && <p className=\"text-sm text-red-600\">{errors.placeOfBirthCell}</p>}\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                    <div className=\"space-y-2\">\r\n                      <Label htmlFor=\"placeOfBirthVillage\" className=\"text-sm font-medium\">Village</Label>\r\n                      <Select\r\n                        value={formData.placeOfBirthVillage}\r\n                        onValueChange={(value) => handleInputChange(\"placeOfBirthVillage\", value)}\r\n                        disabled={!formData.placeOfBirthCell || villages.length === 0}\r\n                      >\r\n                        <SelectTrigger className=\"h-11\">\r\n                          <SelectValue placeholder={\r\n                            loadingLocations.villages \r\n                              ? \"Loading villages...\" \r\n                              : !formData.placeOfBirthCell \r\n                                ? \"Select cell first\" \r\n                                : \"Select village\"\r\n                          } />\r\n                        </SelectTrigger>\r\n                        <SelectContent>\r\n                          {villages.map((village) => (\r\n                            <SelectItem key={village.id} value={village.id}>\r\n                              {village.name}\r\n                            </SelectItem>\r\n                          ))}\r\n                        </SelectContent>\r\n                      </Select>\r\n                      {errors.placeOfBirthVillage && <p className=\"text-sm text-red-600\">{errors.placeOfBirthVillage}</p>}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Education & Professional Information */}\r\n                <div className=\"space-y-4\">\r\n                  <h4 className=\"text-md font-semibold text-foreground border-b pb-2\">Education & Professional Information</h4>\r\n                  \r\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                    <div className=\"space-y-2\">\r\n                      <Label htmlFor=\"faculty\" className=\"text-sm font-medium\">Faculty</Label>\r\n                      <Input\r\n                        id=\"faculty\"\r\n                        placeholder=\"Enter faculty\"\r\n                        className=\"h-11\"\r\n                        value={formData.faculty}\r\n                        onChange={(e) => handleInputChange(\"faculty\", e.target.value)}\r\n                      />\r\n                      {errors.faculty && <p className=\"text-sm text-red-600\">{errors.faculty}</p>}\r\n                    </div>\r\n\r\n                    <div className=\"space-y-2\">\r\n                      <Label htmlFor=\"professionalism\" className=\"text-sm font-medium\">Professionalism</Label>\r\n                      <Input\r\n                        id=\"professionalism\"\r\n                        placeholder=\"Enter profession\"\r\n                        className=\"h-11\"\r\n                        value={formData.professionalism}\r\n                        onChange={(e) => handleInputChange(\"professionalism\", e.target.value)}\r\n                      />\r\n                      {errors.professionalism && <p className=\"text-sm text-red-600\">{errors.professionalism}</p>}\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"space-y-2\">\r\n                    <Label htmlFor=\"graduationDate\" className=\"text-sm font-medium flex items-center gap-2\">\r\n                      <Calendar className=\"h-4 w-4\" />\r\n                      Graduation Date\r\n                    </Label>\r\n                    <Input\r\n                      id=\"graduationDate\"\r\n                      type=\"date\"\r\n                      className=\"h-11\"\r\n                      value={formData.graduationDate}\r\n                      onChange={(e) => handleInputChange(\"graduationDate\", e.target.value)}\r\n                    />\r\n                    {errors.graduationDate && <p className=\"text-sm text-red-600\">{errors.graduationDate}</p>}\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Member Type & Status */}\r\n                <div className=\"space-y-4\">\r\n                  <h4 className=\"text-md font-semibold text-foreground border-b pb-2\">Member Type & Status</h4>\r\n                  \r\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                    <div className=\"space-y-2\">\r\n                      <Label htmlFor=\"type\" className=\"text-sm font-medium\">Member Type *</Label>\r\n                      <Select\r\n                        value={formData.type}\r\n                        onValueChange={(value) => handleInputChange(\"type\", value)}\r\n                      >\r\n                        <SelectTrigger className=\"h-11\">\r\n                          <SelectValue placeholder=\"Select member type\" />\r\n                        </SelectTrigger>\r\n                        <SelectContent>\r\n                          <SelectItem value=\"student\">Student</SelectItem>\r\n                          <SelectItem value=\"graduate\">Graduate</SelectItem>\r\n                          <SelectItem value=\"staff\">Staff</SelectItem>\r\n                          <SelectItem value=\"volunteer\">Volunteer</SelectItem>\r\n                          <SelectItem value=\"alumni\">Alumni</SelectItem>\r\n                        </SelectContent>\r\n                      </Select>\r\n                      {errors.type && <p className=\"text-sm text-red-600\">{errors.type}</p>}\r\n                    </div>\r\n\r\n                    <div className=\"space-y-2\">\r\n                      <Label htmlFor=\"status\" className=\"text-sm font-medium\">Status</Label>\r\n                      <Select\r\n                        value={formData.status}\r\n                        onValueChange={(value) => handleInputChange(\"status\", value)}\r\n                      >\r\n                        <SelectTrigger className=\"h-11\">\r\n                          <SelectValue />\r\n                        </SelectTrigger>\r\n                        <SelectContent>\r\n                          <SelectItem value=\"active\">Active</SelectItem>\r\n                          <SelectItem value=\"pre_graduate\">Pre-Graduate</SelectItem>\r\n                          <SelectItem value=\"graduate\">Graduate</SelectItem>\r\n                          <SelectItem value=\"alumni\">Alumni</SelectItem>\r\n                          <SelectItem value=\"inactive\">Inactive</SelectItem>\r\n                        </SelectContent>\r\n                      </Select>\r\n                      {errors.status && <p className=\"text-sm text-red-600\">{errors.status}</p>}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Organization Information */}\r\n                <div className=\"space-y-4\">\r\n                  <h4 className=\"text-md font-semibold text-foreground border-b pb-2\">Organization Information</h4>\r\n                  \r\n                  {scopeLoading ? (\r\n                    <div className=\"text-center py-4\">\r\n                      <p className=\"text-sm text-muted-foreground\">Loading organization scope...</p>\r\n                    </div>\r\n                  ) : (\r\n                    <>\r\n                      {/* Show current scope info */}\r\n                      {userScope && (\r\n                        <div className=\"bg-muted/50 p-3 rounded-lg\">\r\n                          <p className=\"text-sm text-muted-foreground\">\r\n                            <strong>Current Scope:</strong> {userScope.scope.charAt(0).toUpperCase() + userScope.scope.slice(1)}\r\n                            {userScope.region && ` - ${userScope.region.name}`}\r\n                            {userScope.university && ` - ${userScope.university.name}`}\r\n                            {userScope.smallGroup && ` - ${userScope.smallGroup.name}`}\r\n                            {userScope.alumniGroup && ` - ${userScope.alumniGroup.name}`}\r\n                          </p>\r\n                        </div>\r\n                      )}\r\n                      \r\n                      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                        {visibleFields.region && (\r\n                          <div className=\"space-y-2\">\r\n                            <Label htmlFor=\"regionId\" className=\"text-sm font-medium flex items-center gap-2\">\r\n                              <MapPin className=\"h-4 w-4\" />\r\n                              Region\r\n                            </Label>\r\n                            {userScope?.scope === 'superadmin' ? (\r\n                              <Select\r\n                                value={formData.regionId}\r\n                                onValueChange={(value) => handleInputChange(\"regionId\", value)}\r\n                                disabled={loadingOrganizations.regions}\r\n                              >\r\n                                <SelectTrigger className=\"h-11\">\r\n                                  <SelectValue placeholder={\r\n                                    loadingOrganizations.regions \r\n                                      ? \"Loading regions...\" \r\n                                      : \"Select region\"\r\n                                  } />\r\n                                </SelectTrigger>\r\n                                <SelectContent>\r\n                                  {regions.map((region) => (\r\n                                    <SelectItem key={region.id} value={region.id.toString()}>\r\n                                      {region.name}\r\n                                    </SelectItem>\r\n                                  ))}\r\n                                </SelectContent>\r\n                              </Select>\r\n                            ) : (\r\n                              <Input\r\n                                id=\"regionId\"\r\n                                type=\"number\"\r\n                                placeholder=\"Enter region ID\"\r\n                                className=\"h-11\"\r\n                                value={formData.regionId}\r\n                                onChange={(e) => handleInputChange(\"regionId\", e.target.value)}\r\n                              />\r\n                            )}\r\n                            {errors.regionId && <p className=\"text-sm text-red-600\">{errors.regionId}</p>}\r\n                          </div>\r\n                        )}\r\n\r\n                        {visibleFields.university && (\r\n                          <div className=\"space-y-2\">\r\n                            <Label htmlFor=\"universityId\" className=\"text-sm font-medium flex items-center gap-2\">\r\n                              <Building2 className=\"h-4 w-4\" />\r\n                              University\r\n                            </Label>\r\n                            {userScope?.scope === 'superadmin' ? (\r\n                              <Select\r\n                                value={formData.universityId}\r\n                                onValueChange={(value) => handleInputChange(\"universityId\", value)}\r\n                                disabled={!formData.regionId || loadingOrganizations.universities}\r\n                              >\r\n                                <SelectTrigger className=\"h-11\">\r\n                                  <SelectValue placeholder={\r\n                                    loadingOrganizations.universities \r\n                                      ? \"Loading universities...\" \r\n                                      : !formData.regionId \r\n                                        ? \"Select region first\" \r\n                                        : \"Select university\"\r\n                                  } />\r\n                                </SelectTrigger>\r\n                                <SelectContent>\r\n                                  {universities.map((university) => (\r\n                                    <SelectItem key={university.id} value={university.id.toString()}>\r\n                                      {university.name}\r\n                                    </SelectItem>\r\n                                  ))}\r\n                                </SelectContent>\r\n                              </Select>\r\n                            ) : (\r\n                              <Input\r\n                                id=\"universityId\"\r\n                                type=\"number\"\r\n                                placeholder=\"Enter university ID\"\r\n                                className=\"h-11\"\r\n                                value={formData.universityId}\r\n                                onChange={(e) => handleInputChange(\"universityId\", e.target.value)}\r\n                              />\r\n                            )}\r\n                            {errors.universityId && <p className=\"text-sm text-red-600\">{errors.universityId}</p>}\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n\r\n                      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                        {visibleFields.smallGroup && (\r\n                          <div className=\"space-y-2\">\r\n                            <Label htmlFor=\"smallGroupId\" className=\"text-sm font-medium flex items-center gap-2\">\r\n                              <Users className=\"h-4 w-4\" />\r\n                              Small Group\r\n                            </Label>\r\n                            <Select\r\n                              value={formData.smallGroupId}\r\n                              onValueChange={(value) => handleInputChange(\"smallGroupId\", value)}\r\n                              disabled={!formData.universityId || loadingSmallGroups}\r\n                            >\r\n                              <SelectTrigger className=\"h-11\">\r\n                                <SelectValue placeholder={\r\n                                  loadingSmallGroups \r\n                                    ? \"Loading small groups...\" \r\n                                    : !formData.universityId \r\n                                      ? \"Select university first\" \r\n                                      : \"Select small group\"\r\n                                } />\r\n                              </SelectTrigger>\r\n                              <SelectContent>\r\n                                {smallGroups.map((group) => (\r\n                                  <SelectItem key={group.id} value={group.id.toString()}>\r\n                                    {group.name}\r\n                                  </SelectItem>\r\n                                ))}\r\n                              </SelectContent>\r\n                            </Select>\r\n                            {errors.smallGroupId && <p className=\"text-sm text-red-600\">{errors.smallGroupId}</p>}\r\n                          </div>\r\n                        )}\r\n\r\n                        {visibleFields.alumniGroup && (\r\n                          <div className=\"space-y-2\">\r\n                            <Label htmlFor=\"alumniGroupId\" className=\"text-sm font-medium flex items-center gap-2\">\r\n                              <GraduationCap className=\"h-4 w-4\" />\r\n                              Alumni Group\r\n                            </Label>\r\n                            {userScope?.scope === 'superadmin' ? (\r\n                              <Select\r\n                                value={formData.alumniGroupId}\r\n                                onValueChange={(value) => handleInputChange(\"alumniGroupId\", value)}\r\n                                disabled={!formData.regionId || loadingOrganizations.alumniGroups}\r\n                              >\r\n                                <SelectTrigger className=\"h-11\">\r\n                                  <SelectValue placeholder={\r\n                                    loadingOrganizations.alumniGroups \r\n                                      ? \"Loading alumni groups...\" \r\n                                      : !formData.regionId \r\n                                        ? \"Select region first\" \r\n                                        : \"Select alumni group\"\r\n                                  } />\r\n                                </SelectTrigger>\r\n                                <SelectContent>\r\n                                  {alumniGroups.map((group) => (\r\n                                    <SelectItem key={group.id} value={group.id.toString()}>\r\n                                      {group.name}\r\n                                    </SelectItem>\r\n                                  ))}\r\n                                </SelectContent>\r\n                              </Select>\r\n                            ) : (\r\n                              <Input\r\n                                id=\"alumniGroupId\"\r\n                                type=\"number\"\r\n                                placeholder=\"Enter alumni group ID\"\r\n                                className=\"h-11\"\r\n                                value={formData.alumniGroupId}\r\n                                onChange={(e) => handleInputChange(\"alumniGroupId\", e.target.value)}\r\n                              />\r\n                            )}\r\n                            {errors.alumniGroupId && <p className=\"text-sm text-red-600\">{errors.alumniGroupId}</p>}\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                      \r\n                      {/* Show message if no fields are visible */}\r\n                      {!visibleFields.region && !visibleFields.university && !visibleFields.smallGroup && !visibleFields.alumniGroup && (\r\n                        <div className=\"text-center py-4\">\r\n                          <p className=\"text-sm text-muted-foreground\">\r\n                            Organization fields are automatically set based on your current scope.\r\n                          </p>\r\n                        </div>\r\n                      )}\r\n                    </>\r\n                  )}\r\n                </div>\r\n\r\n                <div className=\"flex gap-3 pt-6 border-t\">\r\n                  <Button \r\n                    type=\"button\" \r\n                    variant=\"outline\" \r\n                    className=\"flex-1 h-11\" \r\n                    onClick={() => setOpen(false)}\r\n                    disabled={isLoading}\r\n                  >\r\n                    Cancel\r\n                  </Button>\r\n                  <Button \r\n                    type=\"submit\" \r\n                    className=\"flex-1 h-11\" \r\n                    disabled={isLoading || success}\r\n                  >\r\n                    {isLoading ? (\r\n                      \"Creating...\"\r\n                    ) : success ? (\r\n                      \"✅ Created Successfully!\"\r\n                    ) : (\r\n                      <>\r\n                        <UserPlus className=\"mr-2 h-4 w-4\" />\r\n                        Add Member\r\n                      </>\r\n                    )}\r\n                  </Button>\r\n                </div>\r\n              </form>\r\n            </CardContent>\r\n          </Card>\r\n        </div>\r\n      </SheetContent>\r\n    </Sheet>\r\n  )\r\n}\r\n","import { z } from \"zod\";\r\n\r\nexport const createMemberSchema = z.object({\r\n    firstname: z.string().min(1, \"First Name is required\").max(255, \"First Name cannot exceed 255 characters\"),\r\n    secondname: z.string().min(1, \"Second Name is required\").max(255, \"Second Name cannot exceed 255 characters\"),\r\n    gender: z.enum([\"male\", \"female\", \"Male\", \"Female\"]).optional().or(z.literal(\"\")).or(z.null()),\r\n    birthdate: z.string().optional().or(z.literal(\"\")).or(z.null()).transform((val) => {\r\n        if (!val || val === \"\" || val === null) return null;\r\n        const date = new Date(val);\r\n        return isNaN(date.getTime()) ? null : date;\r\n    }),\r\n    placeOfBirthProvince: z.string().max(255).optional().or(z.literal(\"\")).or(z.null()),\r\n    placeOfBirthDistrict: z.string().max(255).optional().or(z.literal(\"\")).or(z.null()),\r\n    placeOfBirthSector: z.string().max(255).optional().or(z.literal(\"\")).or(z.null()),\r\n    placeOfBirthCell: z.string().max(255).optional().or(z.literal(\"\")).or(z.null()),\r\n    placeOfBirthVillage: z.string().max(255).optional().or(z.literal(\"\")).or(z.null()),\r\n    localChurch: z.string().max(255).optional().or(z.literal(\"\")).or(z.null()),\r\n    email: z.string().email(\"Invalid Email\").max(255).optional().or(z.literal(\"\")).or(z.null()),\r\n    phone: z.string().max(20, \"Phone cannot exceed 20 characters\").optional().or(z.literal(\"\")).or(z.null()),\r\n    type: z.enum([\"student\", \"graduate\", \"staff\", \"volunteer\", \"alumni\", \"Student\", \"Graduate\", \"Staff\", \"Volunteer\", \"Alumni\"]),\r\n    status: z.enum([\"active\", \"pre_graduate\", \"graduate\", \"alumni\", \"inactive\", \"Active\", \"Pre_graduate\", \"Graduate\", \"Alumni\", \"Inactive\"]).optional().default(\"active\"),\r\n    regionId: z.union([\r\n        z.string().transform((val) => {\r\n            if (!val || val === \"\" || val === null) return null;\r\n            const num = Number(val);\r\n            return isNaN(num) ? null : num;\r\n        }),\r\n        z.number().int().positive(),\r\n        z.null()\r\n    ]).optional(),\r\n    smallGroupId: z.union([\r\n        z.string().transform((val) => {\r\n            if (!val || val === \"\" || val === null) return null;\r\n            const num = Number(val);\r\n            return isNaN(num) ? null : num;\r\n        }),\r\n        z.number().int().positive(),\r\n        z.null()\r\n    ]).optional(),\r\n    universityId: z.union([\r\n        z.string().transform((val) => {\r\n            if (!val || val === \"\" || val === null) return null;\r\n            const num = Number(val);\r\n            return isNaN(num) ? null : num;\r\n        }),\r\n        z.number().int().positive(),\r\n        z.null()\r\n    ]).optional(),\r\n    alumniGroupId: z.union([\r\n        z.string().transform((val) => {\r\n            if (!val || val === \"\" || val === null) return null;\r\n            const num = Number(val);\r\n            return isNaN(num) ? null : num;\r\n        }),\r\n        z.number().int().positive(),\r\n        z.null()\r\n    ]).optional(),\r\n    graduationDate: z.string().optional().or(z.literal(\"\")).or(z.null()).transform((val) => {\r\n        if (!val || val === \"\" || val === null) return null;\r\n        const date = new Date(val);\r\n        return isNaN(date.getTime()) ? null : date;\r\n    }),\r\n    faculty: z.string().max(255).optional().or(z.literal(\"\")).or(z.null()),\r\n    professionalism: z.string().max(255).optional().or(z.literal(\"\")).or(z.null()),\r\n    maritalStatus: z.string().max(255).optional().or(z.literal(\"\")).or(z.null()),\r\n});","\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport { Button } from \"@/components/ui/ui copy/button\"\r\nimport {\r\n  Sheet,\r\n  SheetContent,\r\n  SheetDescription,\r\n  SheetHeader,\r\n  SheetTitle,\r\n} from \"@/components/ui/ui copy/sheet\"\r\nimport { Trash2, AlertTriangle } from \"lucide-react\"\r\n\r\ninterface DeleteMemberModalProps {\r\n  isOpen: boolean\r\n  onClose: () => void\r\n  onConfirm: () => void\r\n  memberName: string\r\n  isLoading?: boolean\r\n}\r\n\r\nexport function DeleteMemberModal({ \r\n  isOpen, \r\n  onClose, \r\n  onConfirm, \r\n  memberName, \r\n  isLoading = false \r\n}: DeleteMemberModalProps) {\r\n  return (\r\n    <Sheet open={isOpen} onOpenChange={onClose}>\r\n      <SheetContent side=\"top\" className=\"h-auto w-full max-w-md mx-auto\">\r\n        <div className=\"py-8\">\r\n          <SheetHeader className=\"pb-6 text-center\">\r\n            <div className=\"flex justify-center mb-4\">\r\n              <div className=\"flex h-16 w-16 items-center justify-center rounded-full bg-destructive/10\">\r\n                <AlertTriangle className=\"h-8 w-8 text-destructive\" />\r\n              </div>\r\n            </div>\r\n            <SheetTitle className=\"text-xl text-destructive\">Delete Member</SheetTitle>\r\n            <SheetDescription className=\"text-base\">\r\n              Are you sure you want to delete <strong>{memberName}</strong>? This action cannot be undone.\r\n            </SheetDescription>\r\n          </SheetHeader>\r\n          \r\n          <div className=\"space-y-4\">\r\n            <div className=\"p-4 bg-destructive/5 border border-destructive/20 rounded-lg\">\r\n              <div className=\"flex items-start gap-3\">\r\n                <Trash2 className=\"h-5 w-5 text-destructive mt-0.5\" />\r\n                <div className=\"text-sm text-destructive\">\r\n                  <p className=\"font-medium mb-1\">Warning:</p>\r\n                  <p>This will permanently remove the member and all associated data from the system.</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"flex gap-3 pt-4\">\r\n              <Button \r\n                type=\"button\" \r\n                variant=\"outline\" \r\n                className=\"flex-1\" \r\n                onClick={onClose}\r\n                disabled={isLoading}\r\n              >\r\n                Cancel\r\n              </Button>\r\n              <Button \r\n                type=\"button\" \r\n                variant=\"destructive\" \r\n                className=\"flex-1\" \r\n                onClick={onConfirm}\r\n                disabled={isLoading}\r\n              >\r\n                {isLoading ? (\r\n                  \"Deleting...\"\r\n                ) : (\r\n                  <>\r\n                    <Trash2 className=\"mr-2 h-4 w-4\" />\r\n                    Delete Member\r\n                  </>\r\n                )}\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </SheetContent>\r\n    </Sheet>\r\n  )\r\n}\r\n","\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport { Button } from \"@/components/ui/ui copy/button\"\r\nimport { Card, CardContent, CardHeader } from \"@/components/ui/ui copy/card\"\r\nimport { Input } from \"@/components/ui/ui copy/input\"\r\nimport { Label } from \"@/components/ui/ui copy/label\"\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/ui copy/select\"\r\nimport {\r\n  Sheet,\r\n  SheetContent,\r\n  SheetDescription,\r\n  SheetHeader,\r\n  SheetTitle,\r\n  SheetTrigger,\r\n} from \"@/components/ui/ui copy/sheet\"\r\nimport { Edit, User, Mail, Phone, MapPin, GraduationCap, Building2, Users, Church, Calendar } from \"lucide-react\"\r\nimport { createMemberSchema } from \"@/app/api/validation/member\"\r\nimport { useUserScope } from \"@/hooks/use-user-scope\"\r\n\r\ninterface Member {\r\n  id: number;\r\n  firstname: string | null;\r\n  secondname: string | null;\r\n  gender: string | null;\r\n  birthdate: string | null;\r\n  placeOfBirthProvince: string | null;\r\n  placeOfBirthDistrict: string | null;\r\n  placeOfBirthSector: string | null;\r\n  placeOfBirthCell: string | null;\r\n  placeOfBirthVillage: string | null;\r\n  localChurch: string | null;\r\n  email: string | null;\r\n  phone: string | null;\r\n  type: string;\r\n  status: string;\r\n  regionId: number | null;\r\n  universityId: number | null;\r\n  smallGroupId: number | null;\r\n  alumniGroupId: number | null;\r\n  graduationDate: string | null;\r\n  faculty: string | null;\r\n  professionalism: string | null;\r\n  maritalStatus: string | null;\r\n  createdAt: string;\r\n  updatedAt: string;\r\n  region: { name: string } | null;\r\n  university: { name: string } | null;\r\n  smallgroup: { name: string } | null;\r\n  alumnismallgroup: { name: string } | null;\r\n}\r\n\r\ninterface EditMemberModalProps {\r\n  member: Member | null\r\n  onMemberUpdated?: () => void\r\n  isOpen: boolean\r\n  onClose: () => void\r\n}\r\n\r\nexport function EditMemberModal({ member, onMemberUpdated, isOpen, onClose }: EditMemberModalProps) {\r\n  const [isLoading, setIsLoading] = React.useState(false)\r\n  const [errors, setErrors] = React.useState<Record<string, string>>({})\r\n  const [success, setSuccess] = React.useState(false)\r\n  \r\n  // Get user scope and visibility rules\r\n  const { userScope, loading: scopeLoading, getVisibleFields } = useUserScope()\r\n  const visibleFields = getVisibleFields()\r\n  \r\n  const [formData, setFormData] = React.useState({\r\n    firstname: \"\",\r\n    secondname: \"\",\r\n    gender: \"\",\r\n    birthdate: \"\",\r\n    placeOfBirthProvince: \"\",\r\n    placeOfBirthDistrict: \"\",\r\n    placeOfBirthSector: \"\",\r\n    placeOfBirthCell: \"\",\r\n    placeOfBirthVillage: \"\",\r\n    localChurch: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    type: \"\",\r\n    status: \"active\",\r\n    regionId: \"\",\r\n    universityId: \"\",\r\n    smallGroupId: \"\",\r\n    alumniGroupId: \"\",\r\n    graduationDate: \"\",\r\n    faculty: \"\",\r\n    professionalism: \"\",\r\n    maritalStatus: \"\",\r\n  })\r\n\r\n  // Location data states\r\n  const [provinces, setProvinces] = React.useState<Array<{id: string, name: string}>>([])\r\n  const [districts, setDistricts] = React.useState<Array<{id: string, name: string}>>([])\r\n  const [sectors, setSectors] = React.useState<Array<{id: string, name: string}>>([])\r\n  const [cells, setCells] = React.useState<Array<{id: string, name: string}>>([])\r\n  const [villages, setVillages] = React.useState<Array<{id: string, name: string}>>([])\r\n  const [loadingLocations, setLoadingLocations] = React.useState<{[key: string]: boolean}>({})\r\n\r\n  // Small groups state\r\n  const [smallGroups, setSmallGroups] = React.useState<Array<{id: number, name: string}>>([])\r\n  const [loadingSmallGroups, setLoadingSmallGroups] = React.useState(false)\r\n\r\n  // Organization data states for superadmin\r\n  const [regions, setRegions] = React.useState<Array<{id: number, name: string}>>([])\r\n  const [universities, setUniversities] = React.useState<Array<{id: number, name: string}>>([])\r\n  const [alumniGroups, setAlumniGroups] = React.useState<Array<{id: number, name: string}>>([])\r\n  const [loadingOrganizations, setLoadingOrganizations] = React.useState<{[key: string]: boolean}>({})\r\n\r\n  // Fetch location data\r\n  const fetchLocations = async (type: string, parentId?: string) => {\r\n    setLoadingLocations(prev => ({ ...prev, [type]: true }))\r\n    try {\r\n      const url = parentId \r\n        ? `/api/locations?type=${type}&parentId=${parentId}`\r\n        : `/api/locations?type=${type}`\r\n      \r\n      const response = await fetch(url)\r\n      const data = await response.json()\r\n      \r\n      if (response.ok) {\r\n        switch (type) {\r\n          case 'provinces':\r\n            setProvinces(data)\r\n            break\r\n          case 'districts':\r\n            setDistricts(data)\r\n            break\r\n          case 'sectors':\r\n            setSectors(data)\r\n            break\r\n          case 'cells':\r\n            setCells(data)\r\n            break\r\n          case 'villages':\r\n            setVillages(data)\r\n            break\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error(`Error fetching ${type}:`, error)\r\n    } finally {\r\n      setLoadingLocations(prev => ({ ...prev, [type]: false }))\r\n    }\r\n  }\r\n\r\n  // Fetch small groups by university ID\r\n  const fetchSmallGroups = async (universityId: string) => {\r\n    if (!universityId) {\r\n      setSmallGroups([])\r\n      return\r\n    }\r\n    \r\n    setLoadingSmallGroups(true)\r\n    try {\r\n      const response = await fetch(`/api/small-groups?universityId=${universityId}`)\r\n      if (!response.ok) {\r\n        throw new Error('Failed to fetch small groups')\r\n      }\r\n      \r\n      const data = await response.json()\r\n      setSmallGroups(data)\r\n    } catch (error) {\r\n      console.error('Error fetching small groups:', error)\r\n      setSmallGroups([])\r\n    } finally {\r\n      setLoadingSmallGroups(false)\r\n    }\r\n  }\r\n\r\n  // Fetch regions (for superadmin)\r\n  const fetchRegions = async () => {\r\n    setLoadingOrganizations(prev => ({ ...prev, regions: true }))\r\n    try {\r\n      const response = await fetch('/api/regions')\r\n      if (!response.ok) {\r\n        throw new Error('Failed to fetch regions')\r\n      }\r\n      \r\n      const data = await response.json()\r\n      setRegions(data)\r\n    } catch (error) {\r\n      console.error('Error fetching regions:', error)\r\n      setRegions([])\r\n    } finally {\r\n      setLoadingOrganizations(prev => ({ ...prev, regions: false }))\r\n    }\r\n  }\r\n\r\n  // Fetch universities by region ID (for superadmin)\r\n  const fetchUniversities = async (regionId: string) => {\r\n    if (!regionId) {\r\n      setUniversities([])\r\n      return\r\n    }\r\n    \r\n    setLoadingOrganizations(prev => ({ ...prev, universities: true }))\r\n    try {\r\n      const response = await fetch(`/api/universities?regionId=${regionId}`)\r\n      if (!response.ok) {\r\n        throw new Error('Failed to fetch universities')\r\n      }\r\n      \r\n      const data = await response.json()\r\n      setUniversities(data)\r\n    } catch (error) {\r\n      console.error('Error fetching universities:', error)\r\n      setUniversities([])\r\n    } finally {\r\n      setLoadingOrganizations(prev => ({ ...prev, universities: false }))\r\n    }\r\n  }\r\n\r\n  // Fetch alumni groups by region ID (for superadmin)\r\n  const fetchAlumniGroups = async (regionId: string) => {\r\n    if (!regionId) {\r\n      setAlumniGroups([])\r\n      return\r\n    }\r\n    \r\n    setLoadingOrganizations(prev => ({ ...prev, alumniGroups: true }))\r\n    try {\r\n      const response = await fetch(`/api/alumni-small-groups?regionId=${regionId}`)\r\n      if (!response.ok) {\r\n        throw new Error('Failed to fetch alumni groups')\r\n      }\r\n      \r\n      const data = await response.json()\r\n      setAlumniGroups(data)\r\n    } catch (error) {\r\n      console.error('Error fetching alumni groups:', error)\r\n      setAlumniGroups([])\r\n    } finally {\r\n      setLoadingOrganizations(prev => ({ ...prev, alumniGroups: false }))\r\n    }\r\n  }\r\n\r\n  // Populate form data when member changes\r\n  React.useEffect(() => {\r\n    if (member) {\r\n      setFormData({\r\n        firstname: member.firstname || \"\",\r\n        secondname: member.secondname || \"\",\r\n        gender: member.gender || \"\",\r\n        birthdate: member.birthdate ? new Date(member.birthdate).toISOString().split('T')[0] : \"\",\r\n        placeOfBirthProvince: member.placeOfBirthProvince || \"\",\r\n        placeOfBirthDistrict: member.placeOfBirthDistrict || \"\",\r\n        placeOfBirthSector: member.placeOfBirthSector || \"\",\r\n        placeOfBirthCell: member.placeOfBirthCell || \"\",\r\n        placeOfBirthVillage: member.placeOfBirthVillage || \"\",\r\n        localChurch: member.localChurch || \"\",\r\n        email: member.email || \"\",\r\n        phone: member.phone || \"\",\r\n        type: member.type || \"\",\r\n        status: member.status || \"active\",\r\n        regionId: member.regionId?.toString() || \"\",\r\n        universityId: member.universityId?.toString() || \"\",\r\n        smallGroupId: member.smallGroupId?.toString() || \"\",\r\n        alumniGroupId: member.alumniGroupId?.toString() || \"\",\r\n        graduationDate: member.graduationDate ? new Date(member.graduationDate).toISOString().split('T')[0] : \"\",\r\n        faculty: member.faculty || \"\",\r\n        professionalism: member.professionalism || \"\",\r\n        maritalStatus: member.maritalStatus || \"\",\r\n      })\r\n    }\r\n  }, [member])\r\n\r\n  // Fetch small groups when university ID changes\r\n  React.useEffect(() => {\r\n    if (formData.universityId) {\r\n      fetchSmallGroups(formData.universityId)\r\n    } else {\r\n      setSmallGroups([])\r\n    }\r\n  }, [formData.universityId])\r\n\r\n  // Fetch regions when superadmin scope loads\r\n  React.useEffect(() => {\r\n    if (userScope?.scope === 'superadmin' && !scopeLoading) {\r\n      fetchRegions()\r\n    }\r\n  }, [userScope?.scope, scopeLoading])\r\n\r\n  // Fetch universities when region changes (for superadmin)\r\n  React.useEffect(() => {\r\n    if (userScope?.scope === 'superadmin' && formData.regionId) {\r\n      fetchUniversities(formData.regionId)\r\n    } else {\r\n      setUniversities([])\r\n    }\r\n  }, [formData.regionId, userScope?.scope])\r\n\r\n  // Fetch alumni groups when region changes (for superadmin)\r\n  React.useEffect(() => {\r\n    if (userScope?.scope === 'superadmin' && formData.regionId) {\r\n      fetchAlumniGroups(formData.regionId)\r\n    } else {\r\n      setAlumniGroups([])\r\n    }\r\n  }, [formData.regionId, userScope?.scope])\r\n\r\n  const handleInputChange = (field: string, value: string) => {\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      [field]: value\r\n    }))\r\n    \r\n    // Clear error for this field when user starts typing\r\n    if (errors[field]) {\r\n      setErrors(prev => ({\r\n        ...prev,\r\n        [field]: \"\"\r\n      }))\r\n    }\r\n    \r\n    // Clear success state when user starts typing\r\n    if (success) {\r\n      setSuccess(false)\r\n    }\r\n\r\n    // Handle location hierarchy\r\n    if (field === 'placeOfBirthProvince') {\r\n      // Clear dependent fields and fetch districts\r\n      setFormData(prev => ({\r\n        ...prev,\r\n        placeOfBirthDistrict: \"\",\r\n        placeOfBirthSector: \"\",\r\n        placeOfBirthCell: \"\",\r\n        placeOfBirthVillage: \"\"\r\n      }))\r\n      setDistricts([])\r\n      setSectors([])\r\n      setCells([])\r\n      setVillages([])\r\n      if (value) {\r\n        fetchLocations('districts', value)\r\n      }\r\n    } else if (field === 'placeOfBirthDistrict') {\r\n      // Clear dependent fields and fetch sectors\r\n      setFormData(prev => ({\r\n        ...prev,\r\n        placeOfBirthSector: \"\",\r\n        placeOfBirthCell: \"\",\r\n        placeOfBirthVillage: \"\"\r\n      }))\r\n      setSectors([])\r\n      setCells([])\r\n      setVillages([])\r\n      if (value) {\r\n        fetchLocations('sectors', value)\r\n      }\r\n    } else if (field === 'placeOfBirthSector') {\r\n      // Clear dependent fields and fetch cells\r\n      setFormData(prev => ({\r\n        ...prev,\r\n        placeOfBirthCell: \"\",\r\n        placeOfBirthVillage: \"\"\r\n      }))\r\n      setCells([])\r\n      setVillages([])\r\n      if (value) {\r\n        fetchLocations('cells', value)\r\n      }\r\n    } else if (field === 'placeOfBirthCell') {\r\n      // Clear dependent fields and fetch villages\r\n      setFormData(prev => ({\r\n        ...prev,\r\n        placeOfBirthVillage: \"\"\r\n      }))\r\n      setVillages([])\r\n      if (value) {\r\n        fetchLocations('villages', value)\r\n      }\r\n    }\r\n  }\r\n\r\n  // Load provinces when modal opens\r\n  React.useEffect(() => {\r\n    if (isOpen) {\r\n      fetchLocations('provinces')\r\n    }\r\n  }, [isOpen])\r\n\r\n  const validateForm = (): boolean => {\r\n    try {\r\n      createMemberSchema.parse(formData)\r\n      setErrors({})\r\n      return true\r\n    } catch (error: any) {\r\n      const newErrors: Record<string, string> = {}\r\n      if (error.errors) {\r\n        error.errors.forEach((err: any) => {\r\n          newErrors[err.path[0]] = err.message\r\n        })\r\n      }\r\n      setErrors(newErrors)\r\n      return false\r\n    }\r\n  }\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault()\r\n    \r\n    if (!member) return\r\n    \r\n    if (!validateForm()) {\r\n      return\r\n    }\r\n\r\n    setIsLoading(true)\r\n    \r\n    try {\r\n      // Transform form data to match API expectations\r\n      const apiData = {\r\n        ...formData,\r\n        // Convert empty strings to null for optional fields\r\n        gender: formData.gender || null,\r\n        birthdate: formData.birthdate || null,\r\n        placeOfBirthProvince: formData.placeOfBirthProvince || null,\r\n        placeOfBirthDistrict: formData.placeOfBirthDistrict || null,\r\n        placeOfBirthSector: formData.placeOfBirthSector || null,\r\n        placeOfBirthCell: formData.placeOfBirthCell || null,\r\n        placeOfBirthVillage: formData.placeOfBirthVillage || null,\r\n        localChurch: formData.localChurch || null,\r\n        email: formData.email || null,\r\n        phone: formData.phone || null,\r\n        regionId: formData.regionId || null,\r\n        universityId: formData.universityId || null,\r\n        smallGroupId: formData.smallGroupId || null,\r\n        alumniGroupId: formData.alumniGroupId || null,\r\n        graduationDate: formData.graduationDate || null,\r\n        faculty: formData.faculty || null,\r\n        professionalism: formData.professionalism || null,\r\n        maritalStatus: formData.maritalStatus || null,\r\n      }\r\n\r\n      console.log('Updating member data:', apiData)\r\n      \r\n      const response = await fetch(`/api/members?id=${member.id}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(apiData)\r\n      })\r\n      const data = await response.json()\r\n      \r\n      console.log('API response:', { status: response.status, data })\r\n      \r\n      if (response.ok) {\r\n        // Show success message\r\n        setSuccess(true)\r\n        setErrors({})\r\n        \r\n        // Call the callback to refresh the members list\r\n        if (onMemberUpdated) {\r\n          onMemberUpdated()\r\n        }\r\n        \r\n        // Close modal after a short delay\r\n        setTimeout(() => {\r\n          onClose()\r\n          setSuccess(false)\r\n        }, 1500)\r\n      } else {\r\n        // Handle API errors\r\n        console.error('API Error:', data)\r\n        if (data.details) {\r\n          setErrors({ general: Array.isArray(data.details) ? data.details.map((d: any) => d.message).join(', ') : data.details })\r\n        } else {\r\n          setErrors({ general: data.error || \"Failed to update member\" })\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error updating member:\", error)\r\n      setErrors({ general: \"An unexpected error occurred\" })\r\n    } finally {\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n\r\n  if (!member) return null\r\n\r\n  return (\r\n    <Sheet open={isOpen} onOpenChange={onClose}>\r\n      <SheetContent side=\"top\" className=\"h-full w-full max-w-none overflow-y-auto\">\r\n        <div className=\"container mx-auto max-w-4xl py-8\">\r\n          <SheetHeader className=\"pb-8 text-center\">\r\n            <SheetTitle className=\"flex items-center justify-center gap-3 text-2xl\">\r\n              <div className=\"flex h-12 w-12 items-center justify-center rounded-lg bg-primary/10\">\r\n                <Edit className=\"h-6 w-6 text-primary\" />\r\n              </div>\r\n              Edit Member\r\n            </SheetTitle>\r\n            <SheetDescription className=\"text-lg text-muted-foreground\">\r\n              Update member information for {member.firstname} {member.secondname}.\r\n            </SheetDescription>\r\n          </SheetHeader>\r\n          \r\n          <Card className=\"shadow-lg\">\r\n            <CardHeader className=\"pb-6\">\r\n              <div className=\"text-center\">\r\n                <h3 className=\"text-lg font-semibold\">Member Information</h3>\r\n                <p className=\"text-sm text-muted-foreground\">Update the details below for this member</p>\r\n              </div>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <form onSubmit={handleSubmit} className=\"flex flex-col gap-6\">\r\n                {errors.general && (\r\n                  <div className=\"p-3 text-sm text-red-600 bg-red-50 border border-red-200 rounded-md\">\r\n                    {errors.general}\r\n                  </div>\r\n                )}\r\n\r\n                {/* Personal Information */}\r\n                <div className=\"space-y-4\">\r\n                  <h4 className=\"text-md font-semibold text-foreground border-b pb-2\">Personal Information</h4>\r\n                  \r\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                    <div className=\"space-y-2\">\r\n                      <Label htmlFor=\"firstname\" className=\"text-sm font-medium\">First Name *</Label>\r\n                      <div className=\"relative\">\r\n                        <User className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-muted-foreground\" />\r\n                        <Input\r\n                          id=\"firstname\"\r\n                          placeholder=\"Enter first name\"\r\n                          className=\"pl-10 h-11\"\r\n                          value={formData.firstname}\r\n                          onChange={(e) => handleInputChange(\"firstname\", e.target.value)}\r\n                          required\r\n                        />\r\n                      </div>\r\n                      {errors.firstname && <p className=\"text-sm text-red-600\">{errors.firstname}</p>}\r\n                    </div>\r\n\r\n                    <div className=\"space-y-2\">\r\n                      <Label htmlFor=\"secondname\" className=\"text-sm font-medium\">Second Name *</Label>\r\n                      <div className=\"relative\">\r\n                        <User className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-muted-foreground\" />\r\n                        <Input\r\n                          id=\"secondname\"\r\n                          placeholder=\"Enter second name\"\r\n                          className=\"pl-10 h-11\"\r\n                          value={formData.secondname}\r\n                          onChange={(e) => handleInputChange(\"secondname\", e.target.value)}\r\n                          required\r\n                        />\r\n                      </div>\r\n                      {errors.secondname && <p className=\"text-sm text-red-600\">{errors.secondname}</p>}\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n                    <div className=\"space-y-2\">\r\n                      <Label htmlFor=\"gender\" className=\"text-sm font-medium\">Gender</Label>\r\n                      <Select\r\n                        value={formData.gender}\r\n                        onValueChange={(value) => handleInputChange(\"gender\", value)}\r\n                      >\r\n                        <SelectTrigger className=\"h-11\">\r\n                          <SelectValue placeholder=\"Select gender\" />\r\n                        </SelectTrigger>\r\n                        <SelectContent>\r\n                          <SelectItem value=\"male\">Male</SelectItem>\r\n                          <SelectItem value=\"female\">Female</SelectItem>\r\n                        </SelectContent>\r\n                      </Select>\r\n                      {errors.gender && <p className=\"text-sm text-red-600\">{errors.gender}</p>}\r\n                    </div>\r\n\r\n                    <div className=\"space-y-2\">\r\n                      <Label htmlFor=\"birthdate\" className=\"text-sm font-medium\">Birth Date</Label>\r\n                      <Input\r\n                        id=\"birthdate\"\r\n                        type=\"date\"\r\n                        className=\"h-11\"\r\n                        value={formData.birthdate}\r\n                        onChange={(e) => handleInputChange(\"birthdate\", e.target.value)}\r\n                      />\r\n                      {errors.birthdate && <p className=\"text-sm text-red-600\">{errors.birthdate}</p>}\r\n                    </div>\r\n\r\n                    <div className=\"space-y-2\">\r\n                      <Label htmlFor=\"maritalStatus\" className=\"text-sm font-medium\">Marital Status</Label>\r\n                      <Select\r\n                        value={formData.maritalStatus}\r\n                        onValueChange={(value) => handleInputChange(\"maritalStatus\", value)}\r\n                      >\r\n                        <SelectTrigger className=\"h-11\">\r\n                          <SelectValue placeholder=\"Select status\" />\r\n                        </SelectTrigger>\r\n                        <SelectContent>\r\n                          <SelectItem value=\"Single\">Single</SelectItem>\r\n                          <SelectItem value=\"Married\">Married</SelectItem>\r\n                          <SelectItem value=\"Divorced\">Divorced</SelectItem>\r\n                          <SelectItem value=\"Widowed\">Widowed</SelectItem>\r\n                        </SelectContent>\r\n                      </Select>\r\n                      {errors.maritalStatus && <p className=\"text-sm text-red-600\">{errors.maritalStatus}</p>}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Contact Information */}\r\n                <div className=\"space-y-4\">\r\n                  <h4 className=\"text-md font-semibold text-foreground border-b pb-2\">Contact Information</h4>\r\n                  \r\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                    <div className=\"space-y-2\">\r\n                      <Label htmlFor=\"email\" className=\"text-sm font-medium flex items-center gap-2\">\r\n                        <Mail className=\"h-4 w-4\" />\r\n                        Email\r\n                      </Label>\r\n                      <Input\r\n                        id=\"email\"\r\n                        type=\"email\"\r\n                        placeholder=\"Enter email address\"\r\n                        className=\"h-11\"\r\n                        value={formData.email}\r\n                        onChange={(e) => handleInputChange(\"email\", e.target.value)}\r\n                      />\r\n                      {errors.email && <p className=\"text-sm text-red-600\">{errors.email}</p>}\r\n                    </div>\r\n\r\n                    <div className=\"space-y-2\">\r\n                      <Label htmlFor=\"phone\" className=\"text-sm font-medium flex items-center gap-2\">\r\n                        <Phone className=\"h-4 w-4\" />\r\n                        Phone Number\r\n                      </Label>\r\n                      <Input\r\n                        id=\"phone\"\r\n                        type=\"tel\"\r\n                        placeholder=\"+250 788 123 456\"\r\n                        className=\"h-11\"\r\n                        value={formData.phone}\r\n                        onChange={(e) => handleInputChange(\"phone\", e.target.value)}\r\n                      />\r\n                      {errors.phone && <p className=\"text-sm text-red-600\">{errors.phone}</p>}\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"space-y-2\">\r\n                    <Label htmlFor=\"localChurch\" className=\"text-sm font-medium flex items-center gap-2\">\r\n                      <Church className=\"h-4 w-4\" />\r\n                      Local Church\r\n                    </Label>\r\n                    <Input\r\n                      id=\"localChurch\"\r\n                      placeholder=\"Enter local church name\"\r\n                      className=\"h-11\"\r\n                      value={formData.localChurch}\r\n                      onChange={(e) => handleInputChange(\"localChurch\", e.target.value)}\r\n                    />\r\n                    {errors.localChurch && <p className=\"text-sm text-red-600\">{errors.localChurch}</p>}\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Place of Birth */}\r\n                <div className=\"space-y-4\">\r\n                  <h4 className=\"text-md font-semibold text-foreground border-b pb-2\">Place of Birth</h4>\r\n                  \r\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                    <div className=\"space-y-2\">\r\n                      <Label htmlFor=\"placeOfBirthProvince\" className=\"text-sm font-medium\">Province</Label>\r\n                      <Select\r\n                        value={formData.placeOfBirthProvince}\r\n                        onValueChange={(value) => handleInputChange(\"placeOfBirthProvince\", value)}\r\n                      >\r\n                        <SelectTrigger className=\"h-11\">\r\n                          <SelectValue placeholder=\"Select province\" />\r\n                        </SelectTrigger>\r\n                        <SelectContent>\r\n                          {provinces.map((province) => (\r\n                            <SelectItem key={province.id} value={province.id}>\r\n                              {province.name}\r\n                            </SelectItem>\r\n                          ))}\r\n                        </SelectContent>\r\n                      </Select>\r\n                      {errors.placeOfBirthProvince && <p className=\"text-sm text-red-600\">{errors.placeOfBirthProvince}</p>}\r\n                    </div>\r\n\r\n                    <div className=\"space-y-2\">\r\n                      <Label htmlFor=\"placeOfBirthDistrict\" className=\"text-sm font-medium\">District</Label>\r\n                      <Select\r\n                        value={formData.placeOfBirthDistrict}\r\n                        onValueChange={(value) => handleInputChange(\"placeOfBirthDistrict\", value)}\r\n                        disabled={!formData.placeOfBirthProvince || districts.length === 0}\r\n                      >\r\n                        <SelectTrigger className=\"h-11\">\r\n                          <SelectValue placeholder={\r\n                            loadingLocations.districts \r\n                              ? \"Loading districts...\" \r\n                              : !formData.placeOfBirthProvince \r\n                                ? \"Select province first\" \r\n                                : \"Select district\"\r\n                          } />\r\n                        </SelectTrigger>\r\n                        <SelectContent>\r\n                          {districts.map((district) => (\r\n                            <SelectItem key={district.id} value={district.id}>\r\n                              {district.name}\r\n                            </SelectItem>\r\n                          ))}\r\n                        </SelectContent>\r\n                      </Select>\r\n                      {errors.placeOfBirthDistrict && <p className=\"text-sm text-red-600\">{errors.placeOfBirthDistrict}</p>}\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                    <div className=\"space-y-2\">\r\n                      <Label htmlFor=\"placeOfBirthSector\" className=\"text-sm font-medium\">Sector</Label>\r\n                      <Select\r\n                        value={formData.placeOfBirthSector}\r\n                        onValueChange={(value) => handleInputChange(\"placeOfBirthSector\", value)}\r\n                        disabled={!formData.placeOfBirthDistrict || sectors.length === 0}\r\n                      >\r\n                        <SelectTrigger className=\"h-11\">\r\n                          <SelectValue placeholder={\r\n                            loadingLocations.sectors \r\n                              ? \"Loading sectors...\" \r\n                              : !formData.placeOfBirthDistrict \r\n                                ? \"Select district first\" \r\n                                : \"Select sector\"\r\n                          } />\r\n                        </SelectTrigger>\r\n                        <SelectContent>\r\n                          {sectors.map((sector) => (\r\n                            <SelectItem key={sector.id} value={sector.id}>\r\n                              {sector.name}\r\n                            </SelectItem>\r\n                          ))}\r\n                        </SelectContent>\r\n                      </Select>\r\n                      {errors.placeOfBirthSector && <p className=\"text-sm text-red-600\">{errors.placeOfBirthSector}</p>}\r\n                    </div>\r\n\r\n                    <div className=\"space-y-2\">\r\n                      <Label htmlFor=\"placeOfBirthCell\" className=\"text-sm font-medium\">Cell</Label>\r\n                      <Select\r\n                        value={formData.placeOfBirthCell}\r\n                        onValueChange={(value) => handleInputChange(\"placeOfBirthCell\", value)}\r\n                        disabled={!formData.placeOfBirthSector || cells.length === 0}\r\n                      >\r\n                        <SelectTrigger className=\"h-11\">\r\n                          <SelectValue placeholder={\r\n                            loadingLocations.cells \r\n                              ? \"Loading cells...\" \r\n                              : !formData.placeOfBirthSector \r\n                                ? \"Select sector first\" \r\n                                : \"Select cell\"\r\n                          } />\r\n                        </SelectTrigger>\r\n                        <SelectContent>\r\n                          {cells.map((cell) => (\r\n                            <SelectItem key={cell.id} value={cell.id}>\r\n                              {cell.name}\r\n                            </SelectItem>\r\n                          ))}\r\n                        </SelectContent>\r\n                      </Select>\r\n                      {errors.placeOfBirthCell && <p className=\"text-sm text-red-600\">{errors.placeOfBirthCell}</p>}\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                    <div className=\"space-y-2\">\r\n                      <Label htmlFor=\"placeOfBirthVillage\" className=\"text-sm font-medium\">Village</Label>\r\n                      <Select\r\n                        value={formData.placeOfBirthVillage}\r\n                        onValueChange={(value) => handleInputChange(\"placeOfBirthVillage\", value)}\r\n                        disabled={!formData.placeOfBirthCell || villages.length === 0}\r\n                      >\r\n                        <SelectTrigger className=\"h-11\">\r\n                          <SelectValue placeholder={\r\n                            loadingLocations.villages \r\n                              ? \"Loading villages...\" \r\n                              : !formData.placeOfBirthCell \r\n                                ? \"Select cell first\" \r\n                                : \"Select village\"\r\n                          } />\r\n                        </SelectTrigger>\r\n                        <SelectContent>\r\n                          {villages.map((village) => (\r\n                            <SelectItem key={village.id} value={village.id}>\r\n                              {village.name}\r\n                            </SelectItem>\r\n                          ))}\r\n                        </SelectContent>\r\n                      </Select>\r\n                      {errors.placeOfBirthVillage && <p className=\"text-sm text-red-600\">{errors.placeOfBirthVillage}</p>}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Education & Professional Information */}\r\n                <div className=\"space-y-4\">\r\n                  <h4 className=\"text-md font-semibold text-foreground border-b pb-2\">Education & Professional Information</h4>\r\n                  \r\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                    <div className=\"space-y-2\">\r\n                      <Label htmlFor=\"faculty\" className=\"text-sm font-medium\">Faculty</Label>\r\n                      <Input\r\n                        id=\"faculty\"\r\n                        placeholder=\"Enter faculty\"\r\n                        className=\"h-11\"\r\n                        value={formData.faculty}\r\n                        onChange={(e) => handleInputChange(\"faculty\", e.target.value)}\r\n                      />\r\n                      {errors.faculty && <p className=\"text-sm text-red-600\">{errors.faculty}</p>}\r\n                    </div>\r\n\r\n                    <div className=\"space-y-2\">\r\n                      <Label htmlFor=\"professionalism\" className=\"text-sm font-medium\">Professionalism</Label>\r\n                      <Input\r\n                        id=\"professionalism\"\r\n                        placeholder=\"Enter profession\"\r\n                        className=\"h-11\"\r\n                        value={formData.professionalism}\r\n                        onChange={(e) => handleInputChange(\"professionalism\", e.target.value)}\r\n                      />\r\n                      {errors.professionalism && <p className=\"text-sm text-red-600\">{errors.professionalism}</p>}\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"space-y-2\">\r\n                    <Label htmlFor=\"graduationDate\" className=\"text-sm font-medium flex items-center gap-2\">\r\n                      <Calendar className=\"h-4 w-4\" />\r\n                      Graduation Date\r\n                    </Label>\r\n                    <Input\r\n                      id=\"graduationDate\"\r\n                      type=\"date\"\r\n                      className=\"h-11\"\r\n                      value={formData.graduationDate}\r\n                      onChange={(e) => handleInputChange(\"graduationDate\", e.target.value)}\r\n                    />\r\n                    {errors.graduationDate && <p className=\"text-sm text-red-600\">{errors.graduationDate}</p>}\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Member Type & Status */}\r\n                <div className=\"space-y-4\">\r\n                  <h4 className=\"text-md font-semibold text-foreground border-b pb-2\">Member Type & Status</h4>\r\n                  \r\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                    <div className=\"space-y-2\">\r\n                      <Label htmlFor=\"type\" className=\"text-sm font-medium\">Member Type *</Label>\r\n                      <Select\r\n                        value={formData.type}\r\n                        onValueChange={(value) => handleInputChange(\"type\", value)}\r\n                      >\r\n                        <SelectTrigger className=\"h-11\">\r\n                          <SelectValue placeholder=\"Select member type\" />\r\n                        </SelectTrigger>\r\n                        <SelectContent>\r\n                          <SelectItem value=\"student\">Student</SelectItem>\r\n                          <SelectItem value=\"graduate\">Graduate</SelectItem>\r\n                          <SelectItem value=\"staff\">Staff</SelectItem>\r\n                          <SelectItem value=\"volunteer\">Volunteer</SelectItem>\r\n                          <SelectItem value=\"alumni\">Alumni</SelectItem>\r\n                        </SelectContent>\r\n                      </Select>\r\n                      {errors.type && <p className=\"text-sm text-red-600\">{errors.type}</p>}\r\n                    </div>\r\n\r\n                    <div className=\"space-y-2\">\r\n                      <Label htmlFor=\"status\" className=\"text-sm font-medium\">Status</Label>\r\n                      <Select\r\n                        value={formData.status}\r\n                        onValueChange={(value) => handleInputChange(\"status\", value)}\r\n                      >\r\n                        <SelectTrigger className=\"h-11\">\r\n                          <SelectValue />\r\n                        </SelectTrigger>\r\n                        <SelectContent>\r\n                          <SelectItem value=\"active\">Active</SelectItem>\r\n                          <SelectItem value=\"pre_graduate\">Pre-Graduate</SelectItem>\r\n                          <SelectItem value=\"graduate\">Graduate</SelectItem>\r\n                          <SelectItem value=\"alumni\">Alumni</SelectItem>\r\n                          <SelectItem value=\"inactive\">Inactive</SelectItem>\r\n                        </SelectContent>\r\n                      </Select>\r\n                      {errors.status && <p className=\"text-sm text-red-600\">{errors.status}</p>}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Organization Information */}\r\n                <div className=\"space-y-4\">\r\n                  <h4 className=\"text-md font-semibold text-foreground border-b pb-2\">Organization Information</h4>\r\n                  \r\n                  {scopeLoading ? (\r\n                    <div className=\"text-center py-4\">\r\n                      <p className=\"text-sm text-muted-foreground\">Loading organization scope...</p>\r\n                    </div>\r\n                  ) : (\r\n                    <>\r\n                      {/* Show current scope info */}\r\n                      {userScope && (\r\n                        <div className=\"bg-muted/50 p-3 rounded-lg\">\r\n                          <p className=\"text-sm text-muted-foreground\">\r\n                            <strong>Current Scope:</strong> {userScope.scope.charAt(0).toUpperCase() + userScope.scope.slice(1)}\r\n                            {userScope.region && ` - ${userScope.region.name}`}\r\n                            {userScope.university && ` - ${userScope.university.name}`}\r\n                            {userScope.smallGroup && ` - ${userScope.smallGroup.name}`}\r\n                            {userScope.alumniGroup && ` - ${userScope.alumniGroup.name}`}\r\n                          </p>\r\n                        </div>\r\n                      )}\r\n                      \r\n                      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                        {visibleFields.region && (\r\n                          <div className=\"space-y-2\">\r\n                            <Label htmlFor=\"regionId\" className=\"text-sm font-medium flex items-center gap-2\">\r\n                              <MapPin className=\"h-4 w-4\" />\r\n                              Region\r\n                            </Label>\r\n                            {userScope?.scope === 'superadmin' ? (\r\n                              <Select\r\n                                value={formData.regionId}\r\n                                onValueChange={(value) => handleInputChange(\"regionId\", value)}\r\n                                disabled={loadingOrganizations.regions}\r\n                              >\r\n                                <SelectTrigger className=\"h-11\">\r\n                                  <SelectValue placeholder={\r\n                                    loadingOrganizations.regions \r\n                                      ? \"Loading regions...\" \r\n                                      : \"Select region\"\r\n                                  } />\r\n                                </SelectTrigger>\r\n                                <SelectContent>\r\n                                  {regions.map((region) => (\r\n                                    <SelectItem key={region.id} value={region.id.toString()}>\r\n                                      {region.name}\r\n                                    </SelectItem>\r\n                                  ))}\r\n                                </SelectContent>\r\n                              </Select>\r\n                            ) : (\r\n                              <Input\r\n                                id=\"regionId\"\r\n                                type=\"number\"\r\n                                placeholder=\"Enter region ID\"\r\n                                className=\"h-11\"\r\n                                value={formData.regionId}\r\n                                onChange={(e) => handleInputChange(\"regionId\", e.target.value)}\r\n                              />\r\n                            )}\r\n                            {errors.regionId && <p className=\"text-sm text-red-600\">{errors.regionId}</p>}\r\n                          </div>\r\n                        )}\r\n\r\n                        {visibleFields.university && (\r\n                          <div className=\"space-y-2\">\r\n                            <Label htmlFor=\"universityId\" className=\"text-sm font-medium flex items-center gap-2\">\r\n                              <Building2 className=\"h-4 w-4\" />\r\n                              University\r\n                            </Label>\r\n                            {userScope?.scope === 'superadmin' ? (\r\n                              <Select\r\n                                value={formData.universityId}\r\n                                onValueChange={(value) => handleInputChange(\"universityId\", value)}\r\n                                disabled={!formData.regionId || loadingOrganizations.universities}\r\n                              >\r\n                                <SelectTrigger className=\"h-11\">\r\n                                  <SelectValue placeholder={\r\n                                    loadingOrganizations.universities \r\n                                      ? \"Loading universities...\" \r\n                                      : !formData.regionId \r\n                                        ? \"Select region first\" \r\n                                        : \"Select university\"\r\n                                  } />\r\n                                </SelectTrigger>\r\n                                <SelectContent>\r\n                                  {universities.map((university) => (\r\n                                    <SelectItem key={university.id} value={university.id.toString()}>\r\n                                      {university.name}\r\n                                    </SelectItem>\r\n                                  ))}\r\n                                </SelectContent>\r\n                              </Select>\r\n                            ) : (\r\n                              <Input\r\n                                id=\"universityId\"\r\n                                type=\"number\"\r\n                                placeholder=\"Enter university ID\"\r\n                                className=\"h-11\"\r\n                                value={formData.universityId}\r\n                                onChange={(e) => handleInputChange(\"universityId\", e.target.value)}\r\n                              />\r\n                            )}\r\n                            {errors.universityId && <p className=\"text-sm text-red-600\">{errors.universityId}</p>}\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n\r\n                      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                        {visibleFields.smallGroup && (\r\n                          <div className=\"space-y-2\">\r\n                            <Label htmlFor=\"smallGroupId\" className=\"text-sm font-medium flex items-center gap-2\">\r\n                              <Users className=\"h-4 w-4\" />\r\n                              Small Group\r\n                            </Label>\r\n                            <Select\r\n                              value={formData.smallGroupId}\r\n                              onValueChange={(value) => handleInputChange(\"smallGroupId\", value)}\r\n                              disabled={!formData.universityId || loadingSmallGroups}\r\n                            >\r\n                              <SelectTrigger className=\"h-11\">\r\n                                <SelectValue placeholder={\r\n                                  loadingSmallGroups \r\n                                    ? \"Loading small groups...\" \r\n                                    : !formData.universityId \r\n                                      ? \"Select university first\" \r\n                                      : \"Select small group\"\r\n                                } />\r\n                              </SelectTrigger>\r\n                              <SelectContent>\r\n                                {smallGroups.map((group) => (\r\n                                  <SelectItem key={group.id} value={group.id.toString()}>\r\n                                    {group.name}\r\n                                  </SelectItem>\r\n                                ))}\r\n                              </SelectContent>\r\n                            </Select>\r\n                            {errors.smallGroupId && <p className=\"text-sm text-red-600\">{errors.smallGroupId}</p>}\r\n                          </div>\r\n                        )}\r\n\r\n                        {visibleFields.alumniGroup && (\r\n                          <div className=\"space-y-2\">\r\n                            <Label htmlFor=\"alumniGroupId\" className=\"text-sm font-medium flex items-center gap-2\">\r\n                              <GraduationCap className=\"h-4 w-4\" />\r\n                              Alumni Group\r\n                            </Label>\r\n                            {userScope?.scope === 'superadmin' ? (\r\n                              <Select\r\n                                value={formData.alumniGroupId}\r\n                                onValueChange={(value) => handleInputChange(\"alumniGroupId\", value)}\r\n                                disabled={!formData.regionId || loadingOrganizations.alumniGroups}\r\n                              >\r\n                                <SelectTrigger className=\"h-11\">\r\n                                  <SelectValue placeholder={\r\n                                    loadingOrganizations.alumniGroups \r\n                                      ? \"Loading alumni groups...\" \r\n                                      : !formData.regionId \r\n                                        ? \"Select region first\" \r\n                                        : \"Select alumni group\"\r\n                                  } />\r\n                                </SelectTrigger>\r\n                                <SelectContent>\r\n                                  {alumniGroups.map((group) => (\r\n                                    <SelectItem key={group.id} value={group.id.toString()}>\r\n                                      {group.name}\r\n                                    </SelectItem>\r\n                                  ))}\r\n                                </SelectContent>\r\n                              </Select>\r\n                            ) : (\r\n                              <Input\r\n                                id=\"alumniGroupId\"\r\n                                type=\"number\"\r\n                                placeholder=\"Enter alumni group ID\"\r\n                                className=\"h-11\"\r\n                                value={formData.alumniGroupId}\r\n                                onChange={(e) => handleInputChange(\"alumniGroupId\", e.target.value)}\r\n                              />\r\n                            )}\r\n                            {errors.alumniGroupId && <p className=\"text-sm text-red-600\">{errors.alumniGroupId}</p>}\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                      \r\n                      {/* Show message if no fields are visible */}\r\n                      {!visibleFields.region && !visibleFields.university && !visibleFields.smallGroup && !visibleFields.alumniGroup && (\r\n                        <div className=\"text-center py-4\">\r\n                          <p className=\"text-sm text-muted-foreground\">\r\n                            Organization fields are automatically set based on your current scope.\r\n                          </p>\r\n                        </div>\r\n                      )}\r\n                    </>\r\n                  )}\r\n                </div>\r\n\r\n                <div className=\"flex gap-3 pt-6 border-t\">\r\n                  <Button \r\n                    type=\"button\" \r\n                    variant=\"outline\" \r\n                    className=\"flex-1 h-11\" \r\n                    onClick={onClose}\r\n                    disabled={isLoading}\r\n                  >\r\n                    Cancel\r\n                  </Button>\r\n                  <Button \r\n                    type=\"submit\" \r\n                    className=\"flex-1 h-11\" \r\n                    disabled={isLoading || success}\r\n                  >\r\n                    {isLoading ? (\r\n                      \"Updating...\"\r\n                    ) : success ? (\r\n                      \"✅ Updated Successfully!\"\r\n                    ) : (\r\n                      <>\r\n                        <Edit className=\"mr-2 h-4 w-4\" />\r\n                        Update Member\r\n                      </>\r\n                    )}\r\n                  </Button>\r\n                </div>\r\n              </form>\r\n            </CardContent>\r\n          </Card>\r\n        </div>\r\n      </SheetContent>\r\n    </Sheet>\r\n  )\r\n}\r\n","\"use client\"\r\n\r\nimport * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nfunction Table({ className, ...props }: React.ComponentProps<\"table\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"table-container\"\r\n      className=\"relative w-full overflow-x-auto\"\r\n    >\r\n      <table\r\n        data-slot=\"table\"\r\n        className={cn(\"w-full caption-bottom text-sm\", className)}\r\n        {...props}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction TableHeader({ className, ...props }: React.ComponentProps<\"thead\">) {\r\n  return (\r\n    <thead\r\n      data-slot=\"table-header\"\r\n      className={cn(\"[&_tr]:border-b\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction TableBody({ className, ...props }: React.ComponentProps<\"tbody\">) {\r\n  return (\r\n    <tbody\r\n      data-slot=\"table-body\"\r\n      className={cn(\"[&_tr:last-child]:border-0\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction TableFooter({ className, ...props }: React.ComponentProps<\"tfoot\">) {\r\n  return (\r\n    <tfoot\r\n      data-slot=\"table-footer\"\r\n      className={cn(\r\n        \"bg-muted/50 border-t font-medium [&>tr]:last:border-b-0\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction TableRow({ className, ...props }: React.ComponentProps<\"tr\">) {\r\n  return (\r\n    <tr\r\n      data-slot=\"table-row\"\r\n      className={cn(\r\n        \"hover:bg-muted/50 data-[state=selected]:bg-muted border-b transition-colors\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction TableHead({ className, ...props }: React.ComponentProps<\"th\">) {\r\n  return (\r\n    <th\r\n      data-slot=\"table-head\"\r\n      className={cn(\r\n        \"text-foreground h-10 px-2 text-left align-middle font-medium whitespace-nowrap [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction TableCell({ className, ...props }: React.ComponentProps<\"td\">) {\r\n  return (\r\n    <td\r\n      data-slot=\"table-cell\"\r\n      className={cn(\r\n        \"p-2 align-middle whitespace-nowrap [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction TableCaption({\r\n  className,\r\n  ...props\r\n}: React.ComponentProps<\"caption\">) {\r\n  return (\r\n    <caption\r\n      data-slot=\"table-caption\"\r\n      className={cn(\"text-muted-foreground mt-4 text-sm\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport {\r\n  Table,\r\n  TableHeader,\r\n  TableBody,\r\n  TableFooter,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableCaption,\r\n}\r\n","'use client';\r\n\r\nimport { Table, TableHeader, TableRow, TableCell, TableBody, TableHead } from \"@/components/ui/ui copy/table\";\r\nimport { useState, useMemo, useEffect } from \"react\";\r\nimport { Search, RefreshCw, Users, Mail, Phone, Calendar, MapPin, Building2, Church, GraduationCap } from 'lucide-react';\r\nimport axios from \"axios\";\r\nimport Link from \"next/link\";\r\nimport { useRouter } from \"next/navigation\";\r\n\r\n// Interface for the Member data structure\r\ninterface Member {\r\n  id: number;\r\n  firstname: string | null;\r\n  secondname: string | null;\r\n  gender: string | null;\r\n  birthdate: string | null;\r\n  email: string | null;\r\n  phone: string | null;\r\n  type: string;\r\n  status: string;\r\n  regionId: number | null;\r\n  universityId: number | null;\r\n  smallGroupId: number | null;\r\n  alumniGroupId: number | null;\r\n  graduationDate: string | null;\r\n  faculty: string | null;\r\n  professionalism: string | null;\r\n  maritalStatus: string | null;\r\n  createdAt: string;\r\n  updatedAt: string;\r\n  region: { name: string } | null;\r\n  university: { name: string } | null;\r\n  smallgroup: { name: string } | null;\r\n  alumnismallgroup: { name: string } | null;\r\n}\r\n\r\n// API function to fetch small group members\r\nconst fetchSmallGroupMembers = async (): Promise<Member[]> => {\r\n  try {\r\n    const response = await axios.get(\"/api/members\");\r\n    // The API returns { members: [...] }, so we need to access response.data.members\r\n    return response.data.members || [];\r\n  } catch (error) {\r\n    console.error(\"Error fetching small group members:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\ninterface SmallGroupTableProps {\r\n  refreshKey?: number;\r\n}\r\n\r\nexport default function SmallGroupTable({ refreshKey }: SmallGroupTableProps) {\r\n  // --- Hooks ---\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [members, setMembers] = useState<Member[]>([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const router = useRouter();\r\n\r\n  const itemsPerPage = 5;\r\n\r\n  // Get small group information from the first member (all members should be from the same small group due to RLS)\r\n  const smallGroupInfo = members.length > 0 ? {\r\n    name: members[0].smallgroup?.name || 'Unknown Small Group',\r\n    university: members[0].university?.name || 'Unknown University',\r\n    region: members[0].region?.name || 'Unknown Region',\r\n    memberCount: members.length\r\n  } : null;\r\n\r\n  // --- Data Fetching & Side Effects ---\r\n  const fetchMembers = async () => {\r\n    try {\r\n      setIsLoading(true);\r\n      setError(null);\r\n      const data = await fetchSmallGroupMembers();\r\n      setMembers(data);\r\n    } catch (err) {\r\n      console.error(\"Error fetching small group members:\", err);\r\n      setError(err instanceof Error ? err.message : \"Failed to fetch members\");\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchMembers();\r\n  }, [refreshKey]);\r\n\r\n  // --- Helper Functions ---\r\n  const formatDate = (dateString: string | null) => {\r\n    if (!dateString) return \"N/A\";\r\n    return new Date(dateString).toLocaleDateString();\r\n  };\r\n\r\n  // --- Search and Filter Logic ---\r\n  const filteredMembers = useMemo(() => {\r\n    if (!members) return [];\r\n    if (!searchTerm) return members;\r\n\r\n    const searchLower = searchTerm.toLowerCase();\r\n\r\n    return members.filter(member => {\r\n      const searchableContent = [\r\n        member.firstname,\r\n        member.secondname,\r\n        member.email,\r\n        member.phone,\r\n        formatDate(member.birthdate),\r\n        member.gender\r\n      ]\r\n      .filter(Boolean)\r\n      .join(' ')\r\n      .toLowerCase();\r\n\r\n      return searchableContent.includes(searchLower);\r\n    });\r\n  }, [members, searchTerm]);\r\n\r\n  // --- Pagination Logic ---\r\n  const totalPages = Math.ceil(filteredMembers.length / itemsPerPage);\r\n  const startIndex = (currentPage - 1) * itemsPerPage;\r\n  const endIndex = startIndex + itemsPerPage;\r\n  const paginatedMembers = filteredMembers.slice(startIndex, endIndex);\r\n\r\n  // Reset to first page when search term changes\r\n  const handleSearchChange = (value: string) => {\r\n    setSearchTerm(value);\r\n    setCurrentPage(1);\r\n  };\r\n\r\n  // Pagination handlers\r\n  const goToPage = (page: number) => {\r\n    setCurrentPage(Math.max(1, Math.min(page, totalPages)));\r\n  };\r\n\r\n  const goToPreviousPage = () => {\r\n    goToPage(currentPage - 1);\r\n  };\r\n\r\n  const goToNextPage = () => {\r\n    goToPage(currentPage + 1);\r\n  };\r\n\r\n\r\n  // --- Main Component JSX ---\r\n  return (\r\n    <div className=\"max-w-7xl mx-auto w-full\">\r\n      {/* Small Group Information Header */}\r\n      {isLoading ? (\r\n        <div className=\"bg-gradient-to-r from-primary/5 to-primary/10 border border-primary/20 rounded-lg p-4 sm:p-6 mb-6\">\r\n          <div className=\"flex items-center gap-3\">\r\n            <div className=\"p-2 bg-primary/10 rounded-lg\">\r\n              <Church className=\"w-6 h-6 text-primary\" />\r\n            </div>\r\n            <div>\r\n              <div className=\"h-6 w-32 bg-muted animate-pulse rounded mb-2\"></div>\r\n              <div className=\"h-4 w-24 bg-muted animate-pulse rounded\"></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : smallGroupInfo ? (\r\n        <div className=\"bg-gradient-to-r from-primary/5 to-primary/10 border border-primary/20 rounded-lg p-4 sm:p-6 mb-6\">\r\n          <div className=\"flex flex-col sm:flex-row sm:items-center gap-4\">\r\n            <div className=\"flex items-center gap-3\">\r\n              <div className=\"p-2 bg-primary/10 rounded-lg\">\r\n                <Church className=\"w-6 h-6 text-primary\" />\r\n              </div>\r\n              <div>\r\n                <h2 className=\"text-xl sm:text-2xl font-bold text-foreground\">\r\n                  {smallGroupInfo.name}\r\n                </h2>\r\n                <p className=\"text-sm text-muted-foreground\">\r\n                  Small Group Members\r\n                </p>\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"flex-1 grid grid-cols-1 sm:grid-cols-3 gap-4\">\r\n              <div className=\"flex items-center gap-2\">\r\n                <Building2 className=\"w-4 h-4 text-muted-foreground\" />\r\n                <div>\r\n                  <p className=\"text-xs text-muted-foreground\">University</p>\r\n                  <p className=\"text-sm font-medium text-foreground\">{smallGroupInfo.university}</p>\r\n                </div>\r\n              </div>\r\n              \r\n              <div className=\"flex items-center gap-2\">\r\n                <MapPin className=\"w-4 h-4 text-muted-foreground\" />\r\n                <div>\r\n                  <p className=\"text-xs text-muted-foreground\">Region</p>\r\n                  <p className=\"text-sm font-medium text-foreground\">{smallGroupInfo.region}</p>\r\n                </div>\r\n              </div>\r\n              \r\n              <div className=\"flex items-center gap-2\">\r\n                <Users className=\"w-4 h-4 text-muted-foreground\" />\r\n                <div>\r\n                  <p className=\"text-xs text-muted-foreground\">Total Members</p>\r\n                  <p className=\"text-sm font-medium text-foreground\">{smallGroupInfo.memberCount}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : null}\r\n\r\n      {/* Search and Actions */}\r\n      <div className=\"flex flex-col sm:flex-row gap-3 sm:gap-4 items-stretch sm:items-center justify-between mb-4 sm:mb-6\">\r\n        <div className=\"flex flex-col sm:flex-row gap-2 sm:gap-3 flex-1\">\r\n          {/* Search */}\r\n          <div className=\"relative flex-1 max-w-md\">\r\n            <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-muted-foreground w-4 h-4\" />\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Search members...\"\r\n              value={searchTerm}\r\n              onChange={(e) => handleSearchChange(e.target.value)}\r\n              className=\"w-full pl-10 pr-4 py-2 sm:py-2.5 bg-muted/30 border border-border/20 rounded-lg focus:ring-2 focus:ring-primary/20 focus:border-primary/50 focus:bg-muted/50 transition-all duration-200 text-foreground placeholder:text-muted-foreground text-sm sm:text-base\"\r\n            />\r\n          </div>\r\n\r\n          {/* Refresh Button */}\r\n          <button \r\n            onClick={fetchMembers}\r\n            disabled={isLoading}\r\n            className=\"flex items-center justify-center gap-2 px-3 sm:px-4 py-2 sm:py-2.5 text-foreground bg-muted/30 hover:bg-muted/50 border border-border/20 hover:border-border/40 rounded-lg transition-all duration-200 text-sm sm:text-base disabled:opacity-50 disabled:cursor-not-allowed\"\r\n          >\r\n            <RefreshCw className={`w-4 h-4 ${isLoading ? 'animate-spin' : ''}`} />\r\n            <span className=\"hidden sm:inline\">{isLoading ? 'Loading...' : 'Refresh'}</span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Error State */}\r\n      {error && (\r\n        <div className=\"bg-destructive/10 border border-destructive/20 rounded-lg p-4 mb-6\">\r\n          <div className=\"flex items-center gap-2 text-destructive\">\r\n            <span className=\"text-sm font-medium\">Error:</span>\r\n            <span className=\"text-sm\">{error}</span>\r\n          </div>\r\n          <button \r\n            onClick={fetchMembers}\r\n            className=\"mt-2 text-sm text-destructive hover:text-destructive/80 underline\"\r\n          >\r\n            Try again\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n      {/* Members Table */}\r\n      <div className=\"bg-card rounded-lg shadow-sm border border-border overflow-hidden\">\r\n\r\n        {isLoading ? (\r\n          <div className=\"flex items-center justify-center py-12\">\r\n            <div className=\"flex items-center gap-2 text-muted-foreground\">\r\n              <RefreshCw className=\"w-4 h-4 animate-spin\" />\r\n              <span>Loading members...</span>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div className=\"overflow-x-auto\">\r\n            <div className=\"min-w-[1000px]\">\r\n              <Table>\r\n                <TableHeader className=\"bg-muted/50 border-b border-border\">\r\n                  <TableRow>\r\n                    <TableHead className=\"px-3 sm:px-6 py-3 text-left text-xs font-medium text-muted-foreground uppercase tracking-wider\">\r\n                      Member\r\n                    </TableHead>\r\n                    <TableHead className=\"px-3 sm:px-6 py-3 text-left text-xs font-medium text-muted-foreground uppercase tracking-wider hidden md:table-cell\">\r\n                      Contact Information\r\n                    </TableHead>\r\n                    <TableHead className=\"px-3 sm:px-6 py-3 text-left text-xs font-medium text-muted-foreground uppercase tracking-wider hidden lg:table-cell\">\r\n                      Birth Information\r\n                    </TableHead>\r\n                    <TableHead className=\"px-3 sm:px-6 py-3 text-left text-xs font-medium text-muted-foreground uppercase tracking-wider hidden xl:table-cell\">\r\n                      Member Details\r\n                    </TableHead>\r\n                  </TableRow>\r\n                </TableHeader>\r\n                <TableBody className=\"bg-card divide-y divide-border\">\r\n                  {paginatedMembers.map((member: Member) => (\r\n                    <TableRow\r\n                      key={member.id}\r\n                      className=\"hover:bg-muted/50 cursor-pointer\"\r\n                      onClick={() => router.push(`/people/members/${member.id}`)}\r\n                    >\r\n                      {/* Member Cell */}\r\n                      <TableCell className=\"px-3 sm:px-6 py-3 sm:py-4\">\r\n                        <div className=\"flex items-center\">\r\n                          <div className=\"flex-shrink-0 h-8 w-8 sm:h-10 sm:w-10\">\r\n                            <div className=\"h-8 w-8 sm:h-10 sm:w-10 rounded-full bg-muted flex items-center justify-center\">\r\n                              <span className=\"text-xs sm:text-sm font-medium text-muted-foreground\">\r\n                                {member.firstname?.[0]}{member.secondname?.[0]}\r\n                              </span>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"ml-2 sm:ml-4 min-w-0 flex-1\">\r\n                            <div className=\"text-sm font-medium text-foreground truncate\">\r\n                              {member.firstname} {member.secondname}\r\n                            </div>\r\n                            <div className=\"text-xs sm:text-sm text-muted-foreground flex items-center gap-1 truncate\">\r\n                              <span>{member.gender}</span>\r\n                              {member.birthdate && (\r\n                                <>\r\n                                  <span>•</span>\r\n                                  <span>{new Date().getFullYear() - new Date(member.birthdate).getFullYear()}y</span>\r\n                                </>\r\n                              )}\r\n                            </div>\r\n                            {/* Mobile: Show contact info and details inline */}\r\n                            <div className=\"md:hidden mt-1 space-y-1\">\r\n                              <div className=\"text-xs text-foreground flex items-center gap-1\">\r\n                                <Mail className=\"w-3 h-3\" />\r\n                                <span className=\"truncate\">{member.email}</span>\r\n                              </div>\r\n                              <div className=\"text-xs text-muted-foreground flex items-center gap-1\">\r\n                                <Phone className=\"w-3 h-3\" />\r\n                                <span>{member.phone}</span>\r\n                              </div>\r\n                              <div className=\"flex items-center gap-2 mt-1\">\r\n                                <span className=\"text-xs px-2 py-1 bg-primary/10 text-primary rounded-full capitalize\">\r\n                                  {member.type}\r\n                                </span>\r\n                                <span className=\"text-xs px-2 py-1 bg-muted text-muted-foreground rounded-full capitalize\">\r\n                                  {member.status}\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </TableCell>\r\n\r\n                      {/* Contact Information Cell */}\r\n                      <TableCell className=\"px-3 sm:px-6 py-3 sm:py-4 whitespace-nowrap hidden md:table-cell\">\r\n                        <div className=\"text-sm text-foreground flex items-center gap-1\">\r\n                          <Mail className=\"w-3 h-3\" />\r\n                          <span className=\"truncate max-w-[200px]\">{member.email}</span>\r\n                        </div>\r\n                        <div className=\"text-sm text-muted-foreground flex items-center gap-1\">\r\n                          <Phone className=\"w-3 h-3\" />\r\n                          <span>{member.phone}</span>\r\n                        </div>\r\n                      </TableCell>\r\n\r\n                      {/* Birth Information Cell */}\r\n                      <TableCell className=\"px-3 sm:px-6 py-3 sm:py-4 whitespace-nowrap hidden lg:table-cell\">\r\n                        <div className=\"text-sm text-foreground flex items-center gap-1\">\r\n                          <Calendar className=\"w-3 h-3\" />\r\n                          <span className=\"truncate\">{formatDate(member.birthdate)}</span>\r\n                        </div>\r\n                        {member.gender && (\r\n                          <div className=\"text-sm text-muted-foreground capitalize\">\r\n                            {member.gender}\r\n                          </div>\r\n                        )}\r\n                      </TableCell>\r\n\r\n                      {/* Member Details Cell */}\r\n                      <TableCell className=\"px-3 sm:px-6 py-3 sm:py-4 whitespace-nowrap hidden xl:table-cell\">\r\n                        <div className=\"flex flex-col gap-1\">\r\n                          <div className=\"flex items-center gap-1\">\r\n                            <GraduationCap className=\"w-3 h-3 text-muted-foreground\" />\r\n                            <span className=\"text-xs px-2 py-1 bg-primary/10 text-primary rounded-full capitalize\">\r\n                              {member.type}\r\n                            </span>\r\n                          </div>\r\n                          <div className=\"flex items-center gap-1\">\r\n                            <span className=\"text-xs px-2 py-1 bg-muted text-muted-foreground rounded-full capitalize\">\r\n                              {member.status}\r\n                            </span>\r\n                          </div>\r\n                          {member.faculty && (\r\n                            <div className=\"text-xs text-muted-foreground truncate\">\r\n                              {member.faculty}\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Empty State */}\r\n        {!isLoading && paginatedMembers.length === 0 && !error && (\r\n          <div className=\"flex flex-col items-center justify-center py-12\">\r\n            <Users className=\"w-12 h-12 text-muted-foreground mb-4\" />\r\n            <h3 className=\"text-lg font-medium text-foreground mb-2\">No members found</h3>\r\n            <p className=\"text-muted-foreground text-center mb-4\">\r\n              {searchTerm ? 'No members match your search criteria.' : 'No members have been added yet.'}\r\n            </p>\r\n          </div>\r\n        )}\r\n\r\n        {/* Table Footer */}\r\n        {!isLoading && filteredMembers.length > 0 && (\r\n          <div className=\"bg-muted/50 px-3 sm:px-6 py-3 border-t border-border\">\r\n            <div className=\"flex flex-col sm:flex-row items-center justify-between gap-2 sm:gap-0\">\r\n              <div className=\"text-xs sm:text-sm text-muted-foreground text-center sm:text-left\">\r\n                Showing <span className=\"font-medium text-foreground\">{startIndex + 1}</span> to <span className=\"font-medium text-foreground\">{Math.min(endIndex, filteredMembers.length)}</span> of <span className=\"font-medium text-foreground\">{filteredMembers.length}</span> members\r\n              </div>\r\n              <div className=\"flex items-center gap-1 sm:gap-2\">\r\n                {/* Previous Button */}\r\n                <button \r\n                  onClick={goToPreviousPage}\r\n                  disabled={currentPage === 1}\r\n                  className=\"px-2 sm:px-3 py-1 text-xs sm:text-sm text-muted-foreground hover:text-foreground border border-border rounded hover:bg-muted/50 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n                >\r\n                  Previous\r\n                </button>\r\n                \r\n                {/* Page Numbers */}\r\n                <div className=\"flex items-center gap-1\">\r\n                  {Array.from({ length: Math.min(5, totalPages) }, (_, i) => {\r\n                    let pageNum;\r\n                    if (totalPages <= 5) {\r\n                      pageNum = i + 1;\r\n                    } else if (currentPage <= 3) {\r\n                      pageNum = i + 1;\r\n                    } else if (currentPage >= totalPages - 2) {\r\n                      pageNum = totalPages - 4 + i;\r\n                    } else {\r\n                      pageNum = currentPage - 2 + i;\r\n                    }\r\n                    \r\n                    return (\r\n                      <button\r\n                        key={pageNum}\r\n                        onClick={() => goToPage(pageNum)}\r\n                        className={`px-2 py-1 text-xs sm:text-sm rounded ${\r\n                          currentPage === pageNum\r\n                            ? 'bg-primary text-primary-foreground'\r\n                            : 'text-muted-foreground hover:text-foreground hover:bg-muted/50'\r\n                        }`}\r\n                      >\r\n                        {pageNum}\r\n                      </button>\r\n                    );\r\n                  })}\r\n                  \r\n                  {totalPages > 5 && currentPage < totalPages - 2 && (\r\n                    <>\r\n                      <span className=\"text-muted-foreground\">...</span>\r\n                      <button\r\n                        onClick={() => goToPage(totalPages)}\r\n                        className=\"px-2 py-1 text-xs sm:text-sm text-muted-foreground hover:text-foreground hover:bg-muted/50 rounded\"\r\n                      >\r\n                        {totalPages}\r\n                      </button>\r\n                    </>\r\n                  )}\r\n                </div>\r\n                \r\n                {/* Next Button */}\r\n                <button \r\n                  onClick={goToNextPage}\r\n                  disabled={currentPage === totalPages}\r\n                  className=\"px-2 sm:px-3 py-1 text-xs sm:text-sm text-muted-foreground hover:text-foreground border border-border rounded hover:bg-muted/50 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n                >\r\n                  Next\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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"}