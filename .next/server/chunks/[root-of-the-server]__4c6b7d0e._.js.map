{"version":3,"sources":["turbopack:///[project]/lib/rls.ts","turbopack:///[project]/node_modules/next/dist/esm/build/templates/app-route.js","turbopack:///[project]/app/api/engagement/export-details/route.ts"],"sourcesContent":["import { auth } from \"@/lib/auth\";\n\n// User scope interface\nexport interface UserScope {\n  scope: 'superadmin' | 'national' | 'region' | 'university' | 'smallgroup' | 'alumnismallgroup';\n  regionId?: number | null;\n  universityId?: number | null;\n  smallGroupId?: number | null;\n  alumniGroupId?: number | null;\n}\n\n// RLS conditions interface\nexport interface RLSConditions {\n  regionId?: number;\n  universityId?: number;\n  smallGroupId?: number;\n  alumniGroupId?: number;\n}\n\n/**\n * Get the current user's scope from the session\n * Returns the most restrictive scope if user has multiple roles\n */\nexport async function getUserScope(): Promise<UserScope | null> {\n  try {\n    const session = await auth();\n    \n    if (!session?.user?.roles || session.user.roles.length === 0) {\n      return null;\n    }\n\n    // Get the most restrictive scope (highest priority)\n    const roles = session.user.roles;\n    \n    // Priority order: superadmin > national > region > university > smallgroup > alumnismallgroup\n    const scopePriority = {\n      'superadmin': 1,\n      'national': 2,\n      'region': 3,\n      'university': 4,\n      'smallgroup': 5,\n      'alumnismallgroup': 6\n    };\n\n    // Find the role with the highest priority (most restrictive)\n    const primaryRole = roles.reduce((prev, current) => {\n      const prevPriority = scopePriority[prev.scope as keyof typeof scopePriority] || 999;\n      const currentPriority = scopePriority[current.scope as keyof typeof scopePriority] || 999;\n      return currentPriority < prevPriority ? current : prev;\n    });\n\n    return {\n      scope: primaryRole.scope as UserScope['scope'],\n      regionId: primaryRole.regionId,\n      universityId: primaryRole.universityId,\n      smallGroupId: primaryRole.smallGroupId,\n      alumniGroupId: primaryRole.alumniGroupId\n    };\n  } catch (error) {\n    console.error('Error getting user scope:', error);\n    return null;\n  }\n}\n\n/**\n * Generate RLS conditions based on user scope\n * Returns an object with the appropriate WHERE conditions for database queries\n */\nexport function generateRLSConditions(userScope: UserScope): RLSConditions {\n  const conditions: RLSConditions = {};\n\n  // Superadmin has access to everything - no conditions needed\n  if (userScope.scope === 'superadmin') {\n    return conditions;\n  }\n\n  // National scope - access to all regions (no filtering needed for now)\n  if (userScope.scope === 'national') {\n    return conditions;\n  }\n\n  // Region scope - access to specific region and all its children\n  if (userScope.scope === 'region' && userScope.regionId) {\n    conditions.regionId = userScope.regionId;\n    return conditions;\n  }\n\n  // University scope - access to specific university and its small groups\n  if (userScope.scope === 'university' && userScope.universityId) {\n    conditions.universityId = userScope.universityId;\n    // Also include regionId for consistency\n    if (userScope.regionId) {\n      conditions.regionId = userScope.regionId;\n    }\n    return conditions;\n  }\n\n  // Small group scope - access to specific small group only\n  if (userScope.scope === 'smallgroup' && userScope.smallGroupId) {\n    conditions.smallGroupId = userScope.smallGroupId;\n    // Include parent IDs for consistency\n    if (userScope.universityId) {\n      conditions.universityId = userScope.universityId;\n    }\n    if (userScope.regionId) {\n      conditions.regionId = userScope.regionId;\n    }\n    return conditions;\n  }\n\n  // Alumni small group scope - access to specific alumni group only\n  if (userScope.scope === 'alumnismallgroup' && userScope.alumniGroupId) {\n    conditions.alumniGroupId = userScope.alumniGroupId;\n    // Include regionId for consistency\n    if (userScope.regionId) {\n      conditions.regionId = userScope.regionId;\n    }\n    return conditions;\n  }\n\n  // If no valid scope found, return empty conditions (no access)\n  return conditions;\n}\n\n/**\n * Check if user has permission to access a specific resource\n */\nexport function hasPermission(\n  userScope: UserScope,\n  resourceType: 'region' | 'university' | 'smallgroup' | 'alumnismallgroup',\n  resourceId: number\n): boolean {\n  // Superadmin has access to everything\n  if (userScope.scope === 'superadmin') {\n    return true;\n  }\n\n  // National scope has access to everything\n  if (userScope.scope === 'national') {\n    return true;\n  }\n\n  switch (resourceType) {\n    case 'region':\n      return userScope.scope === 'region' && userScope.regionId === resourceId;\n    \n    case 'university':\n      return (userScope.scope === 'university' && userScope.universityId === resourceId) ||\n             (userScope.scope === 'region' && userScope.regionId !== null);\n    \n    case 'smallgroup':\n      return (userScope.scope === 'smallgroup' && userScope.smallGroupId === resourceId) ||\n             (userScope.scope === 'university' && userScope.universityId !== null) ||\n             (userScope.scope === 'region' && userScope.regionId !== null);\n    \n    case 'alumnismallgroup':\n      return (userScope.scope === 'alumnismallgroup' && userScope.alumniGroupId === resourceId) ||\n             (userScope.scope === 'region' && userScope.regionId !== null);\n    \n    default:\n      return false;\n  }\n}\n\n/**\n * Get RLS conditions for specific tables\n * Some tables don't have all the foreign key columns, so we need to map appropriately\n */\nexport function getTableRLSConditions(userScope: UserScope, tableName: string): Record<string, unknown> {\n  const rlsConditions = generateRLSConditions(userScope);\n  \n  switch (tableName) {\n    case 'member':\n    case 'trainings':\n    case 'permanentministryevent':\n    case 'budget':\n    case 'document':\n    case 'contributiondesignation':\n      // These tables have regionId, universityId, smallGroupId, alumniGroupId\n      return rlsConditions;\n    \n    case 'university':\n      // Universities only have regionId\n      return rlsConditions.regionId ? { regionId: rlsConditions.regionId } : {};\n    \n    case 'smallgroup':\n      // Small groups have regionId and universityId\n      return {\n        ...(rlsConditions.regionId && { regionId: rlsConditions.regionId }),\n        ...(rlsConditions.universityId && { universityId: rlsConditions.universityId })\n      };\n    \n    case 'alumnismallgroup':\n      // Alumni groups have regionId\n      return rlsConditions.regionId ? { regionId: rlsConditions.regionId } : {};\n    \n    case 'region':\n      // Regions don't have foreign keys, so we need to check if user has access to specific regions\n      if (userScope.scope === 'region' && userScope.regionId) {\n        return { id: userScope.regionId };\n      }\n      return {};\n    \n    default:\n      return rlsConditions;\n  }\n}\n","import { AppRouteRouteModule } from \"next/dist/esm/server/route-modules/app-route/module.compiled\";\nimport { RouteKind } from \"next/dist/esm/server/route-kind\";\nimport { patchFetch as _patchFetch } from \"next/dist/esm/server/lib/patch-fetch\";\nimport { getRequestMeta } from \"next/dist/esm/server/request-meta\";\nimport { getTracer, SpanKind } from \"next/dist/esm/server/lib/trace/tracer\";\nimport { normalizeAppPath } from \"next/dist/esm/shared/lib/router/utils/app-paths\";\nimport { NodeNextRequest, NodeNextResponse } from \"next/dist/esm/server/base-http/node\";\nimport { NextRequestAdapter, signalFromNodeResponse } from \"next/dist/esm/server/web/spec-extension/adapters/next-request\";\nimport { BaseServerSpan } from \"next/dist/esm/server/lib/trace/constants\";\nimport { getRevalidateReason } from \"next/dist/esm/server/instrumentation/utils\";\nimport { sendResponse } from \"next/dist/esm/server/send-response\";\nimport { fromNodeOutgoingHttpHeaders, toNodeOutgoingHttpHeaders } from \"next/dist/esm/server/web/utils\";\nimport { getCacheControlHeader } from \"next/dist/esm/server/lib/cache-control\";\nimport { INFINITE_CACHE, NEXT_CACHE_TAGS_HEADER } from \"next/dist/esm/lib/constants\";\nimport { NoFallbackError } from \"next/dist/esm/shared/lib/no-fallback-error.external\";\nimport { CachedRouteKind } from \"next/dist/esm/server/response-cache\";\nimport * as userland from \"INNER_APP_ROUTE\";\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new AppRouteRouteModule({\n    definition: {\n        kind: RouteKind.APP_ROUTE,\n        page: \"/api/engagement/export-details/route\",\n        pathname: \"/api/engagement/export-details\",\n        filename: \"route\",\n        bundlePath: \"\"\n    },\n    distDir: process.env.__NEXT_RELATIVE_DIST_DIR || '',\n    relativeProjectDir: process.env.__NEXT_RELATIVE_PROJECT_DIR || '',\n    resolvedPagePath: \"[project]/app/api/engagement/export-details/route.ts\",\n    nextConfigOutput,\n    userland\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return _patchFetch({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\nexport { routeModule, workAsyncStorage, workUnitAsyncStorage, serverHooks, patchFetch,  };\nexport async function handler(req, res, ctx) {\n    var _nextConfig_experimental;\n    let srcPage = \"/api/engagement/export-details/route\";\n    // turbopack doesn't normalize `/index` in the page name\n    // so we need to to process dynamic routes properly\n    // TODO: fix turbopack providing differing value from webpack\n    if (process.env.TURBOPACK) {\n        srcPage = srcPage.replace(/\\/index$/, '') || '/';\n    } else if (srcPage === '/index') {\n        // we always normalize /index specifically\n        srcPage = '/';\n    }\n    const multiZoneDraftMode = process.env.__NEXT_MULTI_ZONE_DRAFT_MODE;\n    const prepareResult = await routeModule.prepare(req, res, {\n        srcPage,\n        multiZoneDraftMode\n    });\n    if (!prepareResult) {\n        res.statusCode = 400;\n        res.end('Bad Request');\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n        return null;\n    }\n    const { buildId, params, nextConfig, isDraftMode, prerenderManifest, routerServerContext, isOnDemandRevalidate, revalidateOnlyGenerated, resolvedPathname } = prepareResult;\n    const normalizedSrcPage = normalizeAppPath(srcPage);\n    let isIsr = Boolean(prerenderManifest.dynamicRoutes[normalizedSrcPage] || prerenderManifest.routes[resolvedPathname]);\n    if (isIsr && !isDraftMode) {\n        const isPrerendered = Boolean(prerenderManifest.routes[resolvedPathname]);\n        const prerenderInfo = prerenderManifest.dynamicRoutes[normalizedSrcPage];\n        if (prerenderInfo) {\n            if (prerenderInfo.fallback === false && !isPrerendered) {\n                throw new NoFallbackError();\n            }\n        }\n    }\n    let cacheKey = null;\n    if (isIsr && !routeModule.isDev && !isDraftMode) {\n        cacheKey = resolvedPathname;\n        // ensure /index and / is normalized to one key\n        cacheKey = cacheKey === '/index' ? '/' : cacheKey;\n    }\n    const supportsDynamicResponse = // If we're in development, we always support dynamic HTML\n    routeModule.isDev === true || // If this is not SSG or does not have static paths, then it supports\n    // dynamic HTML.\n    !isIsr;\n    // This is a revalidation request if the request is for a static\n    // page and it is not being resumed from a postponed render and\n    // it is not a dynamic RSC request then it is a revalidation\n    // request.\n    const isRevalidate = isIsr && !supportsDynamicResponse;\n    const method = req.method || 'GET';\n    const tracer = getTracer();\n    const activeSpan = tracer.getActiveScopeSpan();\n    const context = {\n        params,\n        prerenderManifest,\n        renderOpts: {\n            experimental: {\n                cacheComponents: Boolean(nextConfig.experimental.cacheComponents),\n                authInterrupts: Boolean(nextConfig.experimental.authInterrupts)\n            },\n            supportsDynamicResponse,\n            incrementalCache: getRequestMeta(req, 'incrementalCache'),\n            cacheLifeProfiles: (_nextConfig_experimental = nextConfig.experimental) == null ? void 0 : _nextConfig_experimental.cacheLife,\n            isRevalidate,\n            waitUntil: ctx.waitUntil,\n            onClose: (cb)=>{\n                res.on('close', cb);\n            },\n            onAfterTaskError: undefined,\n            onInstrumentationRequestError: (error, _request, errorContext)=>routeModule.onRequestError(req, error, errorContext, routerServerContext)\n        },\n        sharedContext: {\n            buildId\n        }\n    };\n    const nodeNextReq = new NodeNextRequest(req);\n    const nodeNextRes = new NodeNextResponse(res);\n    const nextReq = NextRequestAdapter.fromNodeNextRequest(nodeNextReq, signalFromNodeResponse(res));\n    try {\n        const invokeRouteModule = async (span)=>{\n            return routeModule.handle(nextReq, context).finally(()=>{\n                if (!span) return;\n                span.setAttributes({\n                    'http.status_code': res.statusCode,\n                    'next.rsc': false\n                });\n                const rootSpanAttributes = tracer.getRootSpanAttributes();\n                // We were unable to get attributes, probably OTEL is not enabled\n                if (!rootSpanAttributes) {\n                    return;\n                }\n                if (rootSpanAttributes.get('next.span_type') !== BaseServerSpan.handleRequest) {\n                    console.warn(`Unexpected root span type '${rootSpanAttributes.get('next.span_type')}'. Please report this Next.js issue https://github.com/vercel/next.js`);\n                    return;\n                }\n                const route = rootSpanAttributes.get('next.route');\n                if (route) {\n                    const name = `${method} ${route}`;\n                    span.setAttributes({\n                        'next.route': route,\n                        'http.route': route,\n                        'next.span_name': name\n                    });\n                    span.updateName(name);\n                } else {\n                    span.updateName(`${method} ${req.url}`);\n                }\n            });\n        };\n        const handleResponse = async (currentSpan)=>{\n            var _cacheEntry_value;\n            const responseGenerator = async ({ previousCacheEntry })=>{\n                try {\n                    if (!getRequestMeta(req, 'minimalMode') && isOnDemandRevalidate && revalidateOnlyGenerated && !previousCacheEntry) {\n                        res.statusCode = 404;\n                        // on-demand revalidate always sets this header\n                        res.setHeader('x-nextjs-cache', 'REVALIDATED');\n                        res.end('This page could not be found');\n                        return null;\n                    }\n                    const response = await invokeRouteModule(currentSpan);\n                    req.fetchMetrics = context.renderOpts.fetchMetrics;\n                    let pendingWaitUntil = context.renderOpts.pendingWaitUntil;\n                    // Attempt using provided waitUntil if available\n                    // if it's not we fallback to sendResponse's handling\n                    if (pendingWaitUntil) {\n                        if (ctx.waitUntil) {\n                            ctx.waitUntil(pendingWaitUntil);\n                            pendingWaitUntil = undefined;\n                        }\n                    }\n                    const cacheTags = context.renderOpts.collectedTags;\n                    // If the request is for a static response, we can cache it so long\n                    // as it's not edge.\n                    if (isIsr) {\n                        const blob = await response.blob();\n                        // Copy the headers from the response.\n                        const headers = toNodeOutgoingHttpHeaders(response.headers);\n                        if (cacheTags) {\n                            headers[NEXT_CACHE_TAGS_HEADER] = cacheTags;\n                        }\n                        if (!headers['content-type'] && blob.type) {\n                            headers['content-type'] = blob.type;\n                        }\n                        const revalidate = typeof context.renderOpts.collectedRevalidate === 'undefined' || context.renderOpts.collectedRevalidate >= INFINITE_CACHE ? false : context.renderOpts.collectedRevalidate;\n                        const expire = typeof context.renderOpts.collectedExpire === 'undefined' || context.renderOpts.collectedExpire >= INFINITE_CACHE ? undefined : context.renderOpts.collectedExpire;\n                        // Create the cache entry for the response.\n                        const cacheEntry = {\n                            value: {\n                                kind: CachedRouteKind.APP_ROUTE,\n                                status: response.status,\n                                body: Buffer.from(await blob.arrayBuffer()),\n                                headers\n                            },\n                            cacheControl: {\n                                revalidate,\n                                expire\n                            }\n                        };\n                        return cacheEntry;\n                    } else {\n                        // send response without caching if not ISR\n                        await sendResponse(nodeNextReq, nodeNextRes, response, context.renderOpts.pendingWaitUntil);\n                        return null;\n                    }\n                } catch (err) {\n                    // if this is a background revalidate we need to report\n                    // the request error here as it won't be bubbled\n                    if (previousCacheEntry == null ? void 0 : previousCacheEntry.isStale) {\n                        await routeModule.onRequestError(req, err, {\n                            routerKind: 'App Router',\n                            routePath: srcPage,\n                            routeType: 'route',\n                            revalidateReason: getRevalidateReason({\n                                isRevalidate,\n                                isOnDemandRevalidate\n                            })\n                        }, routerServerContext);\n                    }\n                    throw err;\n                }\n            };\n            const cacheEntry = await routeModule.handleResponse({\n                req,\n                nextConfig,\n                cacheKey,\n                routeKind: RouteKind.APP_ROUTE,\n                isFallback: false,\n                prerenderManifest,\n                isRoutePPREnabled: false,\n                isOnDemandRevalidate,\n                revalidateOnlyGenerated,\n                responseGenerator,\n                waitUntil: ctx.waitUntil\n            });\n            // we don't create a cacheEntry for ISR\n            if (!isIsr) {\n                return null;\n            }\n            if ((cacheEntry == null ? void 0 : (_cacheEntry_value = cacheEntry.value) == null ? void 0 : _cacheEntry_value.kind) !== CachedRouteKind.APP_ROUTE) {\n                var _cacheEntry_value1;\n                throw Object.defineProperty(new Error(`Invariant: app-route received invalid cache entry ${cacheEntry == null ? void 0 : (_cacheEntry_value1 = cacheEntry.value) == null ? void 0 : _cacheEntry_value1.kind}`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E701\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n            if (!getRequestMeta(req, 'minimalMode')) {\n                res.setHeader('x-nextjs-cache', isOnDemandRevalidate ? 'REVALIDATED' : cacheEntry.isMiss ? 'MISS' : cacheEntry.isStale ? 'STALE' : 'HIT');\n            }\n            // Draft mode should never be cached\n            if (isDraftMode) {\n                res.setHeader('Cache-Control', 'private, no-cache, no-store, max-age=0, must-revalidate');\n            }\n            const headers = fromNodeOutgoingHttpHeaders(cacheEntry.value.headers);\n            if (!(getRequestMeta(req, 'minimalMode') && isIsr)) {\n                headers.delete(NEXT_CACHE_TAGS_HEADER);\n            }\n            // If cache control is already set on the response we don't\n            // override it to allow users to customize it via next.config\n            if (cacheEntry.cacheControl && !res.getHeader('Cache-Control') && !headers.get('Cache-Control')) {\n                headers.set('Cache-Control', getCacheControlHeader(cacheEntry.cacheControl));\n            }\n            await sendResponse(nodeNextReq, nodeNextRes, new Response(cacheEntry.value.body, {\n                headers,\n                status: cacheEntry.value.status || 200\n            }));\n            return null;\n        };\n        // TODO: activeSpan code path is for when wrapped by\n        // next-server can be removed when this is no longer used\n        if (activeSpan) {\n            await handleResponse(activeSpan);\n        } else {\n            await tracer.withPropagatedContext(req.headers, ()=>tracer.trace(BaseServerSpan.handleRequest, {\n                    spanName: `${method} ${req.url}`,\n                    kind: SpanKind.SERVER,\n                    attributes: {\n                        'http.method': method,\n                        'http.target': req.url\n                    }\n                }, handleResponse));\n        }\n    } catch (err) {\n        // if we aren't wrapped by base-server handle here\n        if (!activeSpan && !(err instanceof NoFallbackError)) {\n            await routeModule.onRequestError(req, err, {\n                routerKind: 'App Router',\n                routePath: normalizedSrcPage,\n                routeType: 'route',\n                revalidateReason: getRevalidateReason({\n                    isRevalidate,\n                    isOnDemandRevalidate\n                })\n            });\n        }\n        // rethrow so that we can handle serving error page\n        // If this is during static generation, throw the error again.\n        if (isIsr) throw err;\n        // Otherwise, send a 500 response.\n        await sendResponse(nodeNextReq, nodeNextRes, new Response(null, {\n            status: 500\n        }));\n        return null;\n    }\n}\n\n//# sourceMappingURL=app-route.js.map\n","import { NextRequest, NextResponse } from 'next/server';\r\nimport { prisma } from '@/lib/prisma';\r\nimport { getUserScope, generateRLSConditions } from '@/lib/rls';\r\n\r\nexport async function GET(request: NextRequest) {\r\n  try {\r\n    // Get user scope for RLS\r\n    const userScope = await getUserScope();\r\n    if (!userScope) {\r\n        return NextResponse.json({ error: \"Unauthorized\" }, { status: 401 });\r\n    }\r\n\r\n    const searchParams = request.nextUrl.searchParams;\r\n    \r\n    // Get filter parameters\r\n    const regionId = searchParams.get(\"regionId\");\r\n    const universityId = searchParams.get(\"universityId\");\r\n    const smallGroupId = searchParams.get(\"smallGroupId\");\r\n    const alumniGroupId = searchParams.get(\"alumniGroupId\");\r\n    const dateFrom = searchParams.get(\"dateFrom\");\r\n    const dateTo = searchParams.get(\"dateTo\");\r\n    const engagementType = searchParams.get(\"engagementType\");\r\n    const selectedEvent = searchParams.get(\"selectedEvent\");\r\n    const selectedDesignation = searchParams.get(\"selectedDesignation\");\r\n\r\n    // Build where clause with RLS conditions\r\n    const rlsConditions = generateRLSConditions(userScope);\r\n    const where: Record<string, unknown> = { ...rlsConditions };\r\n\r\n    // Apply explicit filters if they exist (but they must be within user's scope)\r\n    if (regionId && regionId !== 'all') {\r\n        const requestedRegionId = Number(regionId);\r\n        if (rlsConditions.regionId && requestedRegionId !== rlsConditions.regionId) {\r\n            return NextResponse.json({ error: \"Access denied to requested region\" }, { status: 403 });\r\n        }\r\n        where.regionId = requestedRegionId;\r\n    }\r\n    if (universityId && universityId !== 'all') {\r\n        const requestedUniversityId = Number(universityId);\r\n        if (rlsConditions.universityId && requestedUniversityId !== rlsConditions.universityId) {\r\n            return NextResponse.json({ error: \"Access denied to requested university\" }, { status: 403 });\r\n        }\r\n        where.universityId = requestedUniversityId;\r\n    }\r\n    if (smallGroupId && smallGroupId !== 'all') {\r\n        const requestedSmallGroupId = Number(smallGroupId);\r\n        if (rlsConditions.smallGroupId && requestedSmallGroupId !== rlsConditions.smallGroupId) {\r\n            return NextResponse.json({ error: \"Access denied to requested small group\" }, { status: 403 });\r\n        }\r\n        where.smallGroupId = requestedSmallGroupId;\r\n    }\r\n    if (alumniGroupId && alumniGroupId !== 'all') {\r\n        const requestedAlumniGroupId = Number(alumniGroupId);\r\n        if (rlsConditions.alumniGroupId && requestedAlumniGroupId !== rlsConditions.alumniGroupId) {\r\n            return NextResponse.json({ error: \"Access denied to requested alumni group\" }, { status: 403 });\r\n        }\r\n        where.alumniGroupId = requestedAlumniGroupId;\r\n    }\r\n\r\n    // Date range filter\r\n    if (dateFrom || dateTo) {\r\n        where.createdAt = {};\r\n        if (dateFrom) where.createdAt.gte = new Date(dateFrom);\r\n        if (dateTo) where.createdAt.lte = new Date(dateTo);\r\n    }\r\n\r\n    // Get engagement details based on type\r\n    let engagementDetails = [];\r\n    let totalCount = 0;\r\n\r\n    if (engagementType === 'event' || !engagementType) {\r\n      // Get event attendance details\r\n      const eventAttendance = await prisma.attendance.findMany({\r\n        where: {\r\n          status: 'present',\r\n          member: where,\r\n          ...(selectedEvent && selectedEvent !== 'all' ? {\r\n            OR: [\r\n              { permanentEventId: Number(selectedEvent) },\r\n              { trainingId: Number(selectedEvent) }\r\n            ]\r\n          } : {})\r\n        },\r\n        include: {\r\n          member: {\r\n            include: {\r\n              region: { select: { name: true } },\r\n              university: { select: { name: true } },\r\n              smallgroup: { select: { name: true } },\r\n              alumnismallgroup: { select: { name: true } }\r\n            }\r\n          },\r\n          permanentministryevent: {\r\n            select: { name: true, type: true }\r\n          },\r\n          trainings: {\r\n            select: { name: true, description: true }\r\n          }\r\n        },\r\n        orderBy: {\r\n          recordedAt: 'desc'\r\n        }\r\n      });\r\n\r\n      engagementDetails = eventAttendance.map(attendance => ({\r\n        id: attendance.id,\r\n        type: 'event',\r\n        memberName: `${attendance.member.firstname || ''} ${attendance.member.secondname || ''}`.trim(),\r\n        memberEmail: attendance.member.email,\r\n        memberPhone: attendance.member.phone,\r\n        memberGender: attendance.member.gender,\r\n        memberType: attendance.member.type,\r\n        memberStatus: attendance.member.status,\r\n        region: attendance.member.region?.name || 'N/A',\r\n        university: attendance.member.university?.name || 'N/A',\r\n        smallGroup: attendance.member.smallgroup?.name || 'N/A',\r\n        alumniGroup: attendance.member.alumnismallgroup?.name || 'N/A',\r\n        eventName: attendance.permanentministryevent?.name || attendance.trainings?.name || 'Unknown Event',\r\n        eventType: attendance.permanentministryevent?.type || 'training',\r\n        eventDescription: attendance.trainings?.description || '',\r\n        attendanceStatus: attendance.status,\r\n        recordedAt: attendance.recordedAt,\r\n        notes: attendance.notes\r\n      }));\r\n\r\n      totalCount += eventAttendance.length;\r\n    }\r\n\r\n    if (engagementType === 'designation' || !engagementType) {\r\n      // Get contribution/designation details\r\n      const contributions = await prisma.contribution.findMany({\r\n        where: {\r\n          status: 'completed',\r\n          member: where,\r\n          ...(selectedDesignation && selectedDesignation !== 'all' ? {\r\n            designationId: Number(selectedDesignation)\r\n          } : {})\r\n        },\r\n        include: {\r\n          member: {\r\n            include: {\r\n              region: { select: { name: true } },\r\n              university: { select: { name: true } },\r\n              smallgroup: { select: { name: true } },\r\n              alumnismallgroup: { select: { name: true } }\r\n            }\r\n          },\r\n          contributiondesignation: {\r\n            select: { name: true, description: true }\r\n          }\r\n        },\r\n        orderBy: {\r\n          createdAt: 'desc'\r\n        }\r\n      });\r\n\r\n      const contributionDetails = contributions.map(contribution => ({\r\n        id: contribution.id,\r\n        type: 'designation',\r\n        memberName: `${contribution.member.firstname || ''} ${contribution.member.secondname || ''}`.trim(),\r\n        memberEmail: contribution.member.email,\r\n        memberPhone: contribution.member.phone,\r\n        memberGender: contribution.member.gender,\r\n        memberType: contribution.member.type,\r\n        memberStatus: contribution.member.status,\r\n        region: contribution.member.region?.name || 'N/A',\r\n        university: contribution.member.university?.name || 'N/A',\r\n        smallGroup: contribution.member.smallgroup?.name || 'N/A',\r\n        alumniGroup: contribution.member.alumnismallgroup?.name || 'N/A',\r\n        designationName: contribution.contributiondesignation?.name || 'Unknown Designation',\r\n        designationDescription: contribution.contributiondesignation?.description || '',\r\n        amount: contribution.amount,\r\n        method: contribution.method,\r\n        status: contribution.status,\r\n        createdAt: contribution.createdAt,\r\n        transactionId: contribution.transactionId\r\n      }));\r\n\r\n      if (engagementType === 'designation') {\r\n        engagementDetails = contributionDetails;\r\n      } else {\r\n        engagementDetails = [...engagementDetails, ...contributionDetails];\r\n      }\r\n\r\n      totalCount += contributions.length;\r\n    }\r\n\r\n    // Sort by creation/recorded date\r\n    engagementDetails.sort((a, b) => {\r\n      const dateA = a.recordedAt || a.createdAt;\r\n      const dateB = b.recordedAt || b.createdAt;\r\n      return new Date(dateB).getTime() - new Date(dateA).getTime();\r\n    });\r\n\r\n    return NextResponse.json({\r\n      engagementDetails,\r\n      totalCount,\r\n      appliedFilters: {\r\n        regionId,\r\n        universityId,\r\n        smallGroupId,\r\n        alumniGroupId,\r\n        dateFrom,\r\n        dateTo,\r\n        engagementType,\r\n        selectedEvent,\r\n        selectedDesignation\r\n      }\r\n    });\r\n\r\n  } catch (error) {\r\n    console.error('Error fetching engagement details:', error);\r\n    return NextResponse.json(\r\n      { error: 'Failed to fetch engagement details' },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n"],"names":[],"mappings":"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","ignoreList":[1]}