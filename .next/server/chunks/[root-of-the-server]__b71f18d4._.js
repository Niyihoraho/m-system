module.exports=[29173,(e,t,r)=>{t.exports=e.x("@prisma/client",()=>require("@prisma/client"))},70406,(e,t,r)=>{t.exports=e.x("next/dist/compiled/@opentelemetry/api",()=>require("next/dist/compiled/@opentelemetry/api"))},93695,(e,t,r)=>{t.exports=e.x("next/dist/shared/lib/no-fallback-error.external.js",()=>require("next/dist/shared/lib/no-fallback-error.external.js"))},61724,(e,t,r)=>{t.exports=e.x("next/dist/compiled/next-server/app-route-turbo.runtime.prod.js",()=>require("next/dist/compiled/next-server/app-route-turbo.runtime.prod.js"))},18622,(e,t,r)=>{t.exports=e.x("next/dist/compiled/next-server/app-page-turbo.runtime.prod.js",()=>require("next/dist/compiled/next-server/app-page-turbo.runtime.prod.js"))},56704,(e,t,r)=>{t.exports=e.x("next/dist/server/app-render/work-async-storage.external.js",()=>require("next/dist/server/app-render/work-async-storage.external.js"))},32319,(e,t,r)=>{t.exports=e.x("next/dist/server/app-render/work-unit-async-storage.external.js",()=>require("next/dist/server/app-render/work-unit-async-storage.external.js"))},20635,(e,t,r)=>{t.exports=e.x("next/dist/server/app-render/action-async-storage.external.js",()=>require("next/dist/server/app-render/action-async-storage.external.js"))},24725,(e,t,r)=>{t.exports=e.x("next/dist/server/app-render/after-task-async-storage.external.js",()=>require("next/dist/server/app-render/after-task-async-storage.external.js"))},24361,(e,t,r)=>{t.exports=e.x("util",()=>require("util"))},54799,(e,t,r)=>{t.exports=e.x("crypto",()=>require("crypto"))},92509,(e,t,r)=>{t.exports=e.x("url",()=>require("url"))},21517,(e,t,r)=>{t.exports=e.x("http",()=>require("http"))},49719,(e,t,r)=>{t.exports=e.x("assert",()=>require("assert"))},6461,(e,t,r)=>{t.exports=e.x("zlib",()=>require("zlib"))},24836,(e,t,r)=>{t.exports=e.x("https",()=>require("https"))},27699,(e,t,r)=>{t.exports=e.x("events",()=>require("events"))},874,(e,t,r)=>{t.exports=e.x("buffer",()=>require("buffer"))},45706,(e,t,r)=>{t.exports=e.x("querystring",()=>require("querystring"))},75096,e=>{e.v(JSON.parse('{"name":"openid-client","version":"5.7.1","description":"OpenID Connect Relying Party (RP, Client) implementation for Node.js runtime, supports passportjs","keywords":["auth","authentication","basic","certified","client","connect","dynamic","electron","hybrid","identity","implicit","oauth","oauth2","oidc","openid","passport","relying party","strategy"],"homepage":"https://github.com/panva/openid-client","repository":"panva/openid-client","funding":{"url":"https://github.com/sponsors/panva"},"license":"MIT","author":"Filip Skokan <panva.ip@gmail.com>","exports":{"types":"./types/index.d.ts","import":"./lib/index.mjs","require":"./lib/index.js"},"main":"./lib/index.js","types":"./types/index.d.ts","files":["lib","types/index.d.ts"],"scripts":{"format":"npx prettier --loglevel silent --write ./lib ./test ./certification ./types","test":"mocha test/**/*.test.js"},"dependencies":{"jose":"^4.15.9","lru-cache":"^6.0.0","object-hash":"^2.2.0","oidc-token-hash":"^5.0.3"},"devDependencies":{"@types/node":"^16.18.106","@types/passport":"^1.0.16","base64url":"^3.0.1","chai":"^4.5.0","mocha":"^10.7.3","nock":"^13.5.5","prettier":"^2.8.8","readable-mock-req":"^0.2.2","sinon":"^9.2.4","timekeeper":"^2.3.1"},"standard-version":{"scripts":{"postchangelog":"sed -i \'\' -e \'s/### \\\\[/## [/g\' CHANGELOG.md"},"types":[{"type":"feat","section":"Features"},{"type":"fix","section":"Fixes"},{"type":"chore","hidden":true},{"type":"docs","hidden":true},{"type":"style","hidden":true},{"type":"refactor","section":"Refactor","hidden":false},{"type":"perf","section":"Performance","hidden":false},{"type":"test","hidden":true}]}}'))},91773,e=>{"use strict";e.s(["generateRLSConditions",()=>s,"getTableRLSConditions",()=>i,"getUserScope",()=>n]);var t=e.i(57660),r=e.i(68105);async function n(){try{let e=await (0,t.getServerSession)(r.authOptions);if(!e?.user?.roles||0===e.user.roles.length)return null;let n=e.user.roles,s={superadmin:1,national:2,region:3,university:4,smallgroup:5,alumnismallgroup:6},i=n.reduce((e,t)=>{let r=s[e.scope]||999;return(s[t.scope]||999)<r?t:e});return{scope:i.scope,regionId:i.regionId,universityId:i.universityId,smallGroupId:i.smallGroupId,alumniGroupId:i.alumniGroupId}}catch(e){return console.error("Error getting user scope:",e),null}}function s(e){let t={};return"superadmin"===e.scope||"national"===e.scope||("region"===e.scope&&e.regionId?t.regionId=e.regionId:"university"===e.scope&&e.universityId?(t.universityId=e.universityId,e.regionId&&(t.regionId=e.regionId)):"smallgroup"===e.scope&&e.smallGroupId?(t.smallGroupId=e.smallGroupId,e.universityId&&(t.universityId=e.universityId),e.regionId&&(t.regionId=e.regionId)):"alumnismallgroup"===e.scope&&e.alumniGroupId&&(t.alumniGroupId=e.alumniGroupId,e.regionId&&(t.regionId=e.regionId))),t}function i(e,t){let r=s(e);switch(t){case"member":case"trainings":case"permanentministryevent":case"budget":case"document":case"contributiondesignation":default:return r;case"university":case"alumnismallgroup":return r.regionId?{regionId:r.regionId}:{};case"smallgroup":return{...r.regionId&&{regionId:r.regionId},...r.universityId&&{universityId:r.universityId}};case"region":if("region"===e.scope&&e.regionId)return{id:e.regionId};return{}}}},27366,(e,t,r)=>{},31178,e=>{"use strict";e.s(["handler",()=>T,"patchFetch",()=>O,"routeModule",()=>C,"serverHooks",()=>P,"workAsyncStorage",()=>S,"workUnitAsyncStorage",()=>k],31178);var t=e.i(47909),r=e.i(74017),n=e.i(96250),s=e.i(59756),i=e.i(61916),a=e.i(69741),o=e.i(16795),d=e.i(87718),u=e.i(95169),l=e.i(47587),c=e.i(66012),p=e.i(70101),m=e.i(26937),x=e.i(10372),h=e.i(93695);e.i(52474);var g=e.i(220);e.s(["DELETE",()=>E,"GET",()=>N,"PATCH",()=>j],11896);var y=e.i(89171),v=e.i(15270),f=e.i(69719),I=e.i(57660),R=e.i(68105),w=e.i(91773);async function b(e,t){try{let e=await (0,w.getUserScope)();if(!e)return{hasAccess:!1,error:"Access denied"};let r=await v.prisma.attendance.findUnique({where:{id:t},include:{member:{select:{regionId:!0,universityId:!0,smallGroupId:!0,alumniGroupId:!0}}}});if(!r)return{hasAccess:!1,error:"Attendance record not found"};let n=!1;return["superadmin","national"].includes(e.scope)?n=!0:"region"===e.scope&&e.regionId?n=r.member.regionId===e.regionId:"university"===e.scope&&e.universityId?n=r.member.universityId===e.universityId:"smallgroup"===e.scope&&e.smallGroupId?n=r.member.smallGroupId===e.smallGroupId:"alumnismallgroup"===e.scope&&e.alumniGroupId&&(n=r.member.alumniGroupId===e.alumniGroupId),{hasAccess:n,attendanceRecord:r}}catch(e){return console.error("Error checking attendance access:",e),{hasAccess:!1,error:"Access denied"}}}let A=f.z.object({status:f.z.enum(["present","absent","excused"]),notes:f.z.string().max(1e3).optional()});async function N(e,{params:t}){try{let e=parseInt(t.id);if(isNaN(e))return y.NextResponse.json({error:"Invalid attendance ID"},{status:400});let r=await (0,I.getServerSession)(R.authOptions);if(!r?.user?.id)return y.NextResponse.json({error:"Authentication required"},{status:401});let n=await b(r.user.id,e);if(!n.hasAccess)return y.NextResponse.json({error:n.error||"Access denied to this attendance record"},{status:"Attendance record not found"===n.error?404:403});let s=await v.prisma.attendance.findUnique({where:{id:e},include:{member:{select:{id:!0,firstname:!0,secondname:!0,regionId:!0,universityId:!0,smallGroupId:!0,alumniGroupId:!0}},permanentministryevent:{select:{id:!0,name:!0}},trainings:{select:{id:!0,name:!0}}}});return y.NextResponse.json(s,{status:200})}catch(e){return y.NextResponse.json({error:"Failed to fetch attendance record"},{status:500})}}async function j(e,{params:t}){try{let r=parseInt(t.id);if(isNaN(r))return y.NextResponse.json({error:"Invalid attendance ID"},{status:400});let n=await (0,I.getServerSession)(R.authOptions);if(!n?.user?.id)return y.NextResponse.json({error:"Authentication required"},{status:401});let s=await b(n.user.id,r);if(!s.hasAccess)return y.NextResponse.json({error:s.error||"Access denied to this attendance record"},{status:"Attendance record not found"===s.error?404:403});let i=await e.json(),a=A.safeParse(i);if(!a.success)return y.NextResponse.json({error:"Invalid data",details:a.error.flatten().fieldErrors},{status:400});let o=a.data,d=await v.prisma.attendance.update({where:{id:r},data:{status:o.status,notes:o.notes},include:{member:{select:{id:!0,firstname:!0,secondname:!0}},permanentministryevent:{select:{id:!0,name:!0}},trainings:{select:{id:!0,name:!0}}}});return y.NextResponse.json(d,{status:200})}catch(e){if("P2025"===e.code)return y.NextResponse.json({error:"Attendance record not found"},{status:404});return y.NextResponse.json({error:"Failed to update attendance record"},{status:500})}}async function E(e,{params:t}){try{let e=parseInt(t.id);if(isNaN(e))return y.NextResponse.json({error:"Invalid attendance ID"},{status:400});let r=await (0,I.getServerSession)(R.authOptions);if(!r?.user?.id)return y.NextResponse.json({error:"Authentication required"},{status:401});let n=await b(r.user.id,e);if(!n.hasAccess)return y.NextResponse.json({error:n.error||"Access denied to this attendance record"},{status:"Attendance record not found"===n.error?404:403});return await v.prisma.attendance.delete({where:{id:e}}),y.NextResponse.json({message:"Attendance record deleted successfully"},{status:200})}catch(e){if("P2025"===e.code)return y.NextResponse.json({error:"Attendance record not found"},{status:404});return y.NextResponse.json({error:"Failed to delete attendance record"},{status:500})}}var q=e.i(11896);let C=new t.AppRouteRouteModule({definition:{kind:r.RouteKind.APP_ROUTE,page:"/api/attendance/[id]/route",pathname:"/api/attendance/[id]",filename:"route",bundlePath:""},distDir:".next",relativeProjectDir:"",resolvedPagePath:"[project]/app/api/attendance/[id]/route.ts",nextConfigOutput:"",userland:q}),{workAsyncStorage:S,workUnitAsyncStorage:k,serverHooks:P}=C;function O(){return(0,n.patchFetch)({workAsyncStorage:S,workUnitAsyncStorage:k})}async function T(e,t,n){var y;let v="/api/attendance/[id]/route";v=v.replace(/\/index$/,"")||"/";let f=await C.prepare(e,t,{srcPage:v,multiZoneDraftMode:!1});if(!f)return t.statusCode=400,t.end("Bad Request"),null==n.waitUntil||n.waitUntil.call(n,Promise.resolve()),null;let{buildId:I,params:R,nextConfig:w,isDraftMode:b,prerenderManifest:A,routerServerContext:N,isOnDemandRevalidate:j,revalidateOnlyGenerated:E,resolvedPathname:q}=f,S=(0,a.normalizeAppPath)(v),k=!!(A.dynamicRoutes[S]||A.routes[q]);if(k&&!b){let e=!!A.routes[q],t=A.dynamicRoutes[S];if(t&&!1===t.fallback&&!e)throw new h.NoFallbackError}let P=null;!k||C.isDev||b||(P="/index"===(P=q)?"/":P);let O=!0===C.isDev||!k,T=k&&!O,G=e.method||"GET",U=(0,i.getTracer)(),_=U.getActiveScopeSpan(),H={params:R,prerenderManifest:A,renderOpts:{experimental:{cacheComponents:!!w.experimental.cacheComponents,authInterrupts:!!w.experimental.authInterrupts},supportsDynamicResponse:O,incrementalCache:(0,s.getRequestMeta)(e,"incrementalCache"),cacheLifeProfiles:null==(y=w.experimental)?void 0:y.cacheLife,isRevalidate:T,waitUntil:n.waitUntil,onClose:e=>{t.on("close",e)},onAfterTaskError:void 0,onInstrumentationRequestError:(t,r,n)=>C.onRequestError(e,t,n,N)},sharedContext:{buildId:I}},D=new o.NodeNextRequest(e),M=new o.NodeNextResponse(t),F=d.NextRequestAdapter.fromNodeNextRequest(D,(0,d.signalFromNodeResponse)(t));try{let a=async r=>C.handle(F,H).finally(()=>{if(!r)return;r.setAttributes({"http.status_code":t.statusCode,"next.rsc":!1});let n=U.getRootSpanAttributes();if(!n)return;if(n.get("next.span_type")!==u.BaseServerSpan.handleRequest)return void console.warn(`Unexpected root span type '${n.get("next.span_type")}'. Please report this Next.js issue https://github.com/vercel/next.js`);let s=n.get("next.route");if(s){let e=`${G} ${s}`;r.setAttributes({"next.route":s,"http.route":s,"next.span_name":e}),r.updateName(e)}else r.updateName(`${G} ${e.url}`)}),o=async i=>{var o,d;let u=async({previousCacheEntry:r})=>{try{if(!(0,s.getRequestMeta)(e,"minimalMode")&&j&&E&&!r)return t.statusCode=404,t.setHeader("x-nextjs-cache","REVALIDATED"),t.end("This page could not be found"),null;let o=await a(i);e.fetchMetrics=H.renderOpts.fetchMetrics;let d=H.renderOpts.pendingWaitUntil;d&&n.waitUntil&&(n.waitUntil(d),d=void 0);let u=H.renderOpts.collectedTags;if(!k)return await (0,c.sendResponse)(D,M,o,H.renderOpts.pendingWaitUntil),null;{let e=await o.blob(),t=(0,p.toNodeOutgoingHttpHeaders)(o.headers);u&&(t[x.NEXT_CACHE_TAGS_HEADER]=u),!t["content-type"]&&e.type&&(t["content-type"]=e.type);let r=void 0!==H.renderOpts.collectedRevalidate&&!(H.renderOpts.collectedRevalidate>=x.INFINITE_CACHE)&&H.renderOpts.collectedRevalidate,n=void 0===H.renderOpts.collectedExpire||H.renderOpts.collectedExpire>=x.INFINITE_CACHE?void 0:H.renderOpts.collectedExpire;return{value:{kind:g.CachedRouteKind.APP_ROUTE,status:o.status,body:Buffer.from(await e.arrayBuffer()),headers:t},cacheControl:{revalidate:r,expire:n}}}}catch(t){throw(null==r?void 0:r.isStale)&&await C.onRequestError(e,t,{routerKind:"App Router",routePath:v,routeType:"route",revalidateReason:(0,l.getRevalidateReason)({isRevalidate:T,isOnDemandRevalidate:j})},N),t}},h=await C.handleResponse({req:e,nextConfig:w,cacheKey:P,routeKind:r.RouteKind.APP_ROUTE,isFallback:!1,prerenderManifest:A,isRoutePPREnabled:!1,isOnDemandRevalidate:j,revalidateOnlyGenerated:E,responseGenerator:u,waitUntil:n.waitUntil});if(!k)return null;if((null==h||null==(o=h.value)?void 0:o.kind)!==g.CachedRouteKind.APP_ROUTE)throw Object.defineProperty(Error(`Invariant: app-route received invalid cache entry ${null==h||null==(d=h.value)?void 0:d.kind}`),"__NEXT_ERROR_CODE",{value:"E701",enumerable:!1,configurable:!0});(0,s.getRequestMeta)(e,"minimalMode")||t.setHeader("x-nextjs-cache",j?"REVALIDATED":h.isMiss?"MISS":h.isStale?"STALE":"HIT"),b&&t.setHeader("Cache-Control","private, no-cache, no-store, max-age=0, must-revalidate");let y=(0,p.fromNodeOutgoingHttpHeaders)(h.value.headers);return(0,s.getRequestMeta)(e,"minimalMode")&&k||y.delete(x.NEXT_CACHE_TAGS_HEADER),!h.cacheControl||t.getHeader("Cache-Control")||y.get("Cache-Control")||y.set("Cache-Control",(0,m.getCacheControlHeader)(h.cacheControl)),await (0,c.sendResponse)(D,M,new Response(h.value.body,{headers:y,status:h.value.status||200})),null};_?await o(_):await U.withPropagatedContext(e.headers,()=>U.trace(u.BaseServerSpan.handleRequest,{spanName:`${G} ${e.url}`,kind:i.SpanKind.SERVER,attributes:{"http.method":G,"http.target":e.url}},o))}catch(t){if(_||t instanceof h.NoFallbackError||await C.onRequestError(e,t,{routerKind:"App Router",routePath:S,routeType:"route",revalidateReason:(0,l.getRevalidateReason)({isRevalidate:T,isOnDemandRevalidate:j})}),k)throw t;return await (0,c.sendResponse)(D,M,new Response(null,{status:500})),null}}}];

//# sourceMappingURL=%5Broot-of-the-server%5D__b71f18d4._.js.map