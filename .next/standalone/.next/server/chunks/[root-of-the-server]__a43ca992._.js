module.exports=[18622,(e,t,r)=>{t.exports=e.x("next/dist/compiled/next-server/app-page-turbo.runtime.prod.js",()=>require("next/dist/compiled/next-server/app-page-turbo.runtime.prod.js"))},56704,(e,t,r)=>{t.exports=e.x("next/dist/server/app-render/work-async-storage.external.js",()=>require("next/dist/server/app-render/work-async-storage.external.js"))},32319,(e,t,r)=>{t.exports=e.x("next/dist/server/app-render/work-unit-async-storage.external.js",()=>require("next/dist/server/app-render/work-unit-async-storage.external.js"))},20635,(e,t,r)=>{t.exports=e.x("next/dist/server/app-render/action-async-storage.external.js",()=>require("next/dist/server/app-render/action-async-storage.external.js"))},24725,(e,t,r)=>{t.exports=e.x("next/dist/server/app-render/after-task-async-storage.external.js",()=>require("next/dist/server/app-render/after-task-async-storage.external.js"))},29173,(e,t,r)=>{t.exports=e.x("@prisma/client",()=>require("@prisma/client"))},70406,(e,t,r)=>{t.exports=e.x("next/dist/compiled/@opentelemetry/api",()=>require("next/dist/compiled/@opentelemetry/api"))},93695,(e,t,r)=>{t.exports=e.x("next/dist/shared/lib/no-fallback-error.external.js",()=>require("next/dist/shared/lib/no-fallback-error.external.js"))},61724,(e,t,r)=>{t.exports=e.x("next/dist/compiled/next-server/app-route-turbo.runtime.prod.js",()=>require("next/dist/compiled/next-server/app-route-turbo.runtime.prod.js"))},86926,(e,t,r)=>{},52655,e=>{"use strict";e.s(["handler",()=>U,"patchFetch",()=>I,"routeModule",()=>j,"serverHooks",()=>C,"workAsyncStorage",()=>E,"workUnitAsyncStorage",()=>q],52655);var t=e.i(47909),r=e.i(74017),s=e.i(96250),n=e.i(59756),a=e.i(61916),i=e.i(69741),o=e.i(16795),u=e.i(87718),l=e.i(95169),d=e.i(47587),p=e.i(66012),c=e.i(70101),m=e.i(26937),x=e.i(10372),g=e.i(93695);e.i(52474);var R=e.i(220);e.s(["DELETE",()=>y,"GET",()=>v,"POST",()=>N,"PUT",()=>w],4791);var h=e.i(89171),f=e.i(15270);async function v(e){try{let{searchParams:t}=new URL(e.url),r=t.get("regionId"),s=t.get("universityId"),n=t.get("smallGroupId");if(n){let e=await f.prisma.smallgroup.findUnique({where:{id:Number(n)},include:{region:{select:{id:!0,name:!0}},university:{select:{id:!0,name:!0}}}});if(!e)return h.NextResponse.json({error:"Small group not found"},{status:404});return h.NextResponse.json(e,{status:200})}let a={};r&&(a.regionId=Number(r)),s&&(a.universityId=Number(s));let i=await f.prisma.smallgroup.findMany({where:a,include:{region:{select:{id:!0,name:!0}},university:{select:{id:!0,name:!0}}}});return h.NextResponse.json(i,{status:200})}catch(e){return console.error("Error fetching small groups:",e),h.NextResponse.json({error:"Failed to fetch small groups"},{status:500})}}async function N(e){try{let{name:t,universityId:r,regionId:s}=await e.json();if(!t||""===t.trim())return h.NextResponse.json({error:"Small group name is required"},{status:400});if(!r)return h.NextResponse.json({error:"University ID is required"},{status:400});if(!s)return h.NextResponse.json({error:"Region ID is required"},{status:400});if(await f.prisma.smallgroup.findFirst({where:{name:t.trim(),universityId:Number(r)}}))return h.NextResponse.json({error:"Small group with this name already exists in the selected university"},{status:409});let n=await f.prisma.university.findUnique({where:{id:Number(r)}});if(!n)return h.NextResponse.json({error:"University not found"},{status:404});if(!await f.prisma.region.findUnique({where:{id:Number(s)}}))return h.NextResponse.json({error:"Region not found"},{status:404});if(n.regionId!==Number(s))return h.NextResponse.json({error:"University does not belong to the selected region"},{status:400});let a=await f.prisma.smallgroup.create({data:{name:t.trim(),universityId:Number(r),regionId:Number(s)},include:{region:{select:{id:!0,name:!0}},university:{select:{id:!0,name:!0}}}});return h.NextResponse.json(a,{status:201})}catch(e){return console.error("Error creating small group:",e),h.NextResponse.json({error:"Failed to create small group"},{status:500})}}async function w(e){try{let{searchParams:t}=new URL(e.url),r=t.get("id");if(!r)return h.NextResponse.json({error:"Small group ID is required"},{status:400});let{name:s,universityId:n,regionId:a}=await e.json();if(!s||""===s.trim())return h.NextResponse.json({error:"Small group name is required"},{status:400});if(!n)return h.NextResponse.json({error:"University ID is required"},{status:400});if(!a)return h.NextResponse.json({error:"Region ID is required"},{status:400});if(!await f.prisma.smallgroup.findUnique({where:{id:Number(r)}}))return h.NextResponse.json({error:"Small group not found"},{status:404});if(await f.prisma.smallgroup.findFirst({where:{name:s.trim(),universityId:Number(n),id:{not:Number(r)}}}))return h.NextResponse.json({error:"Small group with this name already exists in the selected university"},{status:409});let i=await f.prisma.university.findUnique({where:{id:Number(n)}});if(!i)return h.NextResponse.json({error:"University not found"},{status:404});if(!await f.prisma.region.findUnique({where:{id:Number(a)}}))return h.NextResponse.json({error:"Region not found"},{status:404});if(i.regionId!==Number(a))return h.NextResponse.json({error:"University does not belong to the selected region"},{status:400});let o=await f.prisma.smallgroup.update({where:{id:Number(r)},data:{name:s.trim(),universityId:Number(n),regionId:Number(a)},include:{region:{select:{id:!0,name:!0}},university:{select:{id:!0,name:!0}}}});return h.NextResponse.json(o,{status:200})}catch(e){return console.error("Error updating small group:",e),h.NextResponse.json({error:"Failed to update small group"},{status:500})}}async function y(e){try{let{searchParams:t}=new URL(e.url),r=t.get("id");if(!r)return h.NextResponse.json({error:"Small group ID is required"},{status:400});if(!await f.prisma.smallgroup.findUnique({where:{id:Number(r)}}))return h.NextResponse.json({error:"Small group not found"},{status:404});if(await f.prisma.member.count({where:{smallGroupId:Number(r)}})>0)return h.NextResponse.json({error:"Cannot delete small group. It is being used by members."},{status:409});return await f.prisma.smallgroup.delete({where:{id:Number(r)}}),h.NextResponse.json({message:"Small group deleted successfully"},{status:200})}catch(e){return console.error("Error deleting small group:",e),h.NextResponse.json({error:"Failed to delete small group"},{status:500})}}var b=e.i(4791);let j=new t.AppRouteRouteModule({definition:{kind:r.RouteKind.APP_ROUTE,page:"/api/small-groups/route",pathname:"/api/small-groups",filename:"route",bundlePath:""},distDir:".next",relativeProjectDir:"",resolvedPagePath:"[project]/app/api/small-groups/route.ts",nextConfigOutput:"standalone",userland:b}),{workAsyncStorage:E,workUnitAsyncStorage:q,serverHooks:C}=j;function I(){return(0,s.patchFetch)({workAsyncStorage:E,workUnitAsyncStorage:q})}async function U(e,t,s){var h;let f="/api/small-groups/route";f=f.replace(/\/index$/,"")||"/";let v=await j.prepare(e,t,{srcPage:f,multiZoneDraftMode:!1});if(!v)return t.statusCode=400,t.end("Bad Request"),null==s.waitUntil||s.waitUntil.call(s,Promise.resolve()),null;let{buildId:N,params:w,nextConfig:y,isDraftMode:b,prerenderManifest:E,routerServerContext:q,isOnDemandRevalidate:C,revalidateOnlyGenerated:I,resolvedPathname:U}=v,A=(0,i.normalizeAppPath)(f),S=!!(E.dynamicRoutes[A]||E.routes[U]);if(S&&!b){let e=!!E.routes[U],t=E.dynamicRoutes[A];if(t&&!1===t.fallback&&!e)throw new g.NoFallbackError}let T=null;!S||j.isDev||b||(T="/index"===(T=U)?"/":T);let P=!0===j.isDev||!S,O=S&&!P,k=e.method||"GET",_=(0,a.getTracer)(),D=_.getActiveScopeSpan(),H={params:w,prerenderManifest:E,renderOpts:{experimental:{cacheComponents:!!y.experimental.cacheComponents,authInterrupts:!!y.experimental.authInterrupts},supportsDynamicResponse:P,incrementalCache:(0,n.getRequestMeta)(e,"incrementalCache"),cacheLifeProfiles:null==(h=y.experimental)?void 0:h.cacheLife,isRevalidate:O,waitUntil:s.waitUntil,onClose:e=>{t.on("close",e)},onAfterTaskError:void 0,onInstrumentationRequestError:(t,r,s)=>j.onRequestError(e,t,s,q)},sharedContext:{buildId:N}},M=new o.NodeNextRequest(e),F=new o.NodeNextResponse(t),L=u.NextRequestAdapter.fromNodeNextRequest(M,(0,u.signalFromNodeResponse)(t));try{let i=async r=>j.handle(L,H).finally(()=>{if(!r)return;r.setAttributes({"http.status_code":t.statusCode,"next.rsc":!1});let s=_.getRootSpanAttributes();if(!s)return;if(s.get("next.span_type")!==l.BaseServerSpan.handleRequest)return void console.warn(`Unexpected root span type '${s.get("next.span_type")}'. Please report this Next.js issue https://github.com/vercel/next.js`);let n=s.get("next.route");if(n){let e=`${k} ${n}`;r.setAttributes({"next.route":n,"http.route":n,"next.span_name":e}),r.updateName(e)}else r.updateName(`${k} ${e.url}`)}),o=async a=>{var o,u;let l=async({previousCacheEntry:r})=>{try{if(!(0,n.getRequestMeta)(e,"minimalMode")&&C&&I&&!r)return t.statusCode=404,t.setHeader("x-nextjs-cache","REVALIDATED"),t.end("This page could not be found"),null;let o=await i(a);e.fetchMetrics=H.renderOpts.fetchMetrics;let u=H.renderOpts.pendingWaitUntil;u&&s.waitUntil&&(s.waitUntil(u),u=void 0);let l=H.renderOpts.collectedTags;if(!S)return await (0,p.sendResponse)(M,F,o,H.renderOpts.pendingWaitUntil),null;{let e=await o.blob(),t=(0,c.toNodeOutgoingHttpHeaders)(o.headers);l&&(t[x.NEXT_CACHE_TAGS_HEADER]=l),!t["content-type"]&&e.type&&(t["content-type"]=e.type);let r=void 0!==H.renderOpts.collectedRevalidate&&!(H.renderOpts.collectedRevalidate>=x.INFINITE_CACHE)&&H.renderOpts.collectedRevalidate,s=void 0===H.renderOpts.collectedExpire||H.renderOpts.collectedExpire>=x.INFINITE_CACHE?void 0:H.renderOpts.collectedExpire;return{value:{kind:R.CachedRouteKind.APP_ROUTE,status:o.status,body:Buffer.from(await e.arrayBuffer()),headers:t},cacheControl:{revalidate:r,expire:s}}}}catch(t){throw(null==r?void 0:r.isStale)&&await j.onRequestError(e,t,{routerKind:"App Router",routePath:f,routeType:"route",revalidateReason:(0,d.getRevalidateReason)({isRevalidate:O,isOnDemandRevalidate:C})},q),t}},g=await j.handleResponse({req:e,nextConfig:y,cacheKey:T,routeKind:r.RouteKind.APP_ROUTE,isFallback:!1,prerenderManifest:E,isRoutePPREnabled:!1,isOnDemandRevalidate:C,revalidateOnlyGenerated:I,responseGenerator:l,waitUntil:s.waitUntil});if(!S)return null;if((null==g||null==(o=g.value)?void 0:o.kind)!==R.CachedRouteKind.APP_ROUTE)throw Object.defineProperty(Error(`Invariant: app-route received invalid cache entry ${null==g||null==(u=g.value)?void 0:u.kind}`),"__NEXT_ERROR_CODE",{value:"E701",enumerable:!1,configurable:!0});(0,n.getRequestMeta)(e,"minimalMode")||t.setHeader("x-nextjs-cache",C?"REVALIDATED":g.isMiss?"MISS":g.isStale?"STALE":"HIT"),b&&t.setHeader("Cache-Control","private, no-cache, no-store, max-age=0, must-revalidate");let h=(0,c.fromNodeOutgoingHttpHeaders)(g.value.headers);return(0,n.getRequestMeta)(e,"minimalMode")&&S||h.delete(x.NEXT_CACHE_TAGS_HEADER),!g.cacheControl||t.getHeader("Cache-Control")||h.get("Cache-Control")||h.set("Cache-Control",(0,m.getCacheControlHeader)(g.cacheControl)),await (0,p.sendResponse)(M,F,new Response(g.value.body,{headers:h,status:g.value.status||200})),null};D?await o(D):await _.withPropagatedContext(e.headers,()=>_.trace(l.BaseServerSpan.handleRequest,{spanName:`${k} ${e.url}`,kind:a.SpanKind.SERVER,attributes:{"http.method":k,"http.target":e.url}},o))}catch(t){if(D||t instanceof g.NoFallbackError||await j.onRequestError(e,t,{routerKind:"App Router",routePath:A,routeType:"route",revalidateReason:(0,d.getRevalidateReason)({isRevalidate:O,isOnDemandRevalidate:C})}),S)throw t;return await (0,p.sendResponse)(M,F,new Response(null,{status:500})),null}}}];

//# sourceMappingURL=%5Broot-of-the-server%5D__a43ca992._.js.map