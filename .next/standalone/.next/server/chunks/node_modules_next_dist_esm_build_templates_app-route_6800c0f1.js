module.exports=[64088,e=>{"use strict";e.s(["handler",()=>U,"patchFetch",()=>T,"routeModule",()=>G,"serverHooks",()=>P,"workAsyncStorage",()=>C,"workUnitAsyncStorage",()=>b],64088);var t=e.i(47909),r=e.i(74017),n=e.i(96250),s=e.i(59756),o=e.i(61916),i=e.i(69741),a=e.i(16795),u=e.i(87718),l=e.i(95169),d=e.i(47587),p=e.i(66012),c=e.i(70101),m=e.i(26937),v=e.i(10372),g=e.i(93695);e.i(52474);var R=e.i(220);e.s(["DELETE",()=>j,"GET",()=>A,"PUT",()=>E],31077);var f=e.i(89171),y=e.i(15270),h=e.i(69719);let I=h.z.object({name:h.z.string().min(1,"Event name is required").max(255,"Event name cannot exceed 255 characters"),type:h.z.enum(["bible_study","discipleship","evangelism","cell_meeting","alumni_meeting","other"]),regionId:h.z.union([h.z.string().transform(e=>{if(!e||""===e||null===e)return null;let t=Number(e);return isNaN(t)?null:t}),h.z.number().int().positive(),h.z.null()]).optional(),universityId:h.z.union([h.z.string().transform(e=>{if(!e||""===e||null===e)return null;let t=Number(e);return isNaN(t)?null:t}),h.z.number().int().positive(),h.z.null()]).optional(),smallGroupId:h.z.union([h.z.string().transform(e=>{if(!e||""===e||null===e)return null;let t=Number(e);return isNaN(t)?null:t}),h.z.number().int().positive(),h.z.null()]).optional(),alumniGroupId:h.z.union([h.z.string().transform(e=>{if(!e||""===e||null===e)return null;let t=Number(e);return isNaN(t)?null:t}),h.z.number().int().positive(),h.z.null()]).optional(),isActive:h.z.boolean().default(!0)});var N=e.i(68105),x=e.i(91773);async function A(e,{params:t}){try{let e=parseInt(t.id);if(isNaN(e))return f.NextResponse.json({error:"Invalid event ID"},{status:400});let r=await y.prisma.permanentministryevent.findUnique({where:{id:e},include:{region:{select:{id:!0,name:!0}},university:{select:{id:!0,name:!0}},smallgroup:{select:{id:!0,name:!0}},alumnismallgroup:{select:{id:!0,name:!0}}}});if(!r)return f.NextResponse.json({error:"Event not found"},{status:404});let n=await (0,N.auth)();if(n?.user?.id)try{let e=await (0,x.getUserScope)();if(!e)return f.NextResponse.json({error:"Access denied"},{status:403});if("region"===e.scope&&e.regionId&&r.regionId!==e.regionId)return f.NextResponse.json({error:"Access denied - event not in your region"},{status:403});if("university"===e.scope&&e.universityId&&r.universityId!==e.universityId)return f.NextResponse.json({error:"Access denied - event not in your university"},{status:403});if("smallgroup"===e.scope&&e.smallGroupId&&r.smallGroupId!==e.smallGroupId)return f.NextResponse.json({error:"Access denied - event not in your small group"},{status:403});if("alumnismallgroup"===e.scope&&e.alumniGroupId&&r.alumniGroupId!==e.alumniGroupId)return f.NextResponse.json({error:"Access denied - event not in your alumni group"},{status:403})}catch(e){return console.error("Error applying RLS filter:",e),f.NextResponse.json({error:"Access denied"},{status:403})}let s={...r,smallGroup:r.smallgroup,alumniGroup:r.alumnismallgroup};return f.NextResponse.json(s,{status:200})}catch(e){return console.error("Error fetching event:",e),f.NextResponse.json({error:"Failed to fetch event"},{status:500})}}async function E(e,{params:t}){try{let r=parseInt(t.id);if(isNaN(r))return f.NextResponse.json({error:"Invalid event ID"},{status:400});let n=await e.json(),s=I.safeParse(n);if(!s.success)return f.NextResponse.json({error:"Validation failed",details:s.error.issues},{status:400});let o=s.data,i=await y.prisma.permanentministryevent.findUnique({where:{id:r}});if(!i)return f.NextResponse.json({error:"Event not found"},{status:404});let a=await (0,N.auth)();if(!a?.user?.id)return f.NextResponse.json({error:"Unauthorized"},{status:401});try{let e=await (0,x.getUserScope)();if(!e)return f.NextResponse.json({error:"Access denied"},{status:403});if("region"===e.scope&&e.regionId&&i.regionId!==e.regionId)return f.NextResponse.json({error:"Access denied - cannot update event outside your region"},{status:403});if("university"===e.scope&&e.universityId&&i.universityId!==e.universityId)return f.NextResponse.json({error:"Access denied - cannot update event outside your university"},{status:403});if("smallgroup"===e.scope&&e.smallGroupId&&i.smallGroupId!==e.smallGroupId)return f.NextResponse.json({error:"Access denied - cannot update event outside your small group"},{status:403});if("alumnismallgroup"===e.scope&&e.alumniGroupId&&i.alumniGroupId!==e.alumniGroupId)return f.NextResponse.json({error:"Access denied - cannot update event outside your alumni group"},{status:403});let t=o.regionId??null,r=o.universityId??null,n=o.smallGroupId??null,s=o.alumniGroupId??null;if("region"===e.scope&&e.regionId&&null!==t&&t!==e.regionId)return f.NextResponse.json({error:"Access denied - region mismatch"},{status:403});if("university"===e.scope&&e.universityId){if(null!==r&&r!==e.universityId)return f.NextResponse.json({error:"Access denied - university mismatch"},{status:403});if(s)return f.NextResponse.json({error:"Access denied - cannot assign alumni group at university scope"},{status:403})}if("smallgroup"===e.scope&&e.smallGroupId){if(null!==n&&n!==e.smallGroupId)return f.NextResponse.json({error:"Access denied - small group mismatch"},{status:403});if(s)return f.NextResponse.json({error:"Access denied - cannot assign alumni group at small group scope"},{status:403})}if("alumnismallgroup"===e.scope&&e.alumniGroupId){if(null!==s&&s!==e.alumniGroupId)return f.NextResponse.json({error:"Access denied - alumni group mismatch"},{status:403});if(r||n)return f.NextResponse.json({error:"Access denied - cannot assign university/small group at alumni scope"},{status:403})}}catch(e){return console.error("Error applying RLS validation:",e),f.NextResponse.json({error:"Access denied"},{status:403})}let u=await y.prisma.permanentministryevent.update({where:{id:r},data:{name:o.name,type:o.type,regionId:o.regionId,universityId:o.universityId,smallGroupId:o.smallGroupId,alumniGroupId:o.alumniGroupId,isActive:o.isActive,updatedAt:new Date},include:{region:{select:{id:!0,name:!0}},university:{select:{id:!0,name:!0}},smallgroup:{select:{id:!0,name:!0}},alumnismallgroup:{select:{id:!0,name:!0}}}}),l={...u,smallGroup:u.smallgroup,alumniGroup:u.alumnismallgroup};return f.NextResponse.json(l,{status:200})}catch(e){if("object"==typeof e&&null!==e&&"code"in e){if("P2002"===e.code)return f.NextResponse.json({error:"Event name already exists"},{status:409});if("P2003"===e.code)return f.NextResponse.json({error:"Foreign key constraint failed (invalid region, university, small group, or alumni group)"},{status:400})}return console.error("Error updating event:",e),f.NextResponse.json({error:"Failed to update event"},{status:500})}}async function j(e,{params:t}){try{let e=parseInt(t.id);if(isNaN(e))return f.NextResponse.json({error:"Invalid event ID"},{status:400});let r=await y.prisma.permanentministryevent.findUnique({where:{id:e}});if(!r)return f.NextResponse.json({error:"Event not found"},{status:404});let n=await (0,N.auth)();if(!n?.user?.id)return f.NextResponse.json({error:"Unauthorized"},{status:401});try{let e=await (0,x.getUserScope)();if(!e)return f.NextResponse.json({error:"Access denied"},{status:403});if("region"===e.scope&&e.regionId&&r.regionId!==e.regionId)return f.NextResponse.json({error:"Access denied - cannot delete event outside your region"},{status:403});if("university"===e.scope&&e.universityId&&r.universityId!==e.universityId)return f.NextResponse.json({error:"Access denied - cannot delete event outside your university"},{status:403});if("smallgroup"===e.scope&&e.smallGroupId&&r.smallGroupId!==e.smallGroupId)return f.NextResponse.json({error:"Access denied - cannot delete event outside your small group"},{status:403});if("alumnismallgroup"===e.scope&&e.alumniGroupId&&r.alumniGroupId!==e.alumniGroupId)return f.NextResponse.json({error:"Access denied - cannot delete event outside your alumni group"},{status:403})}catch(e){return console.error("Error applying RLS validation:",e),f.NextResponse.json({error:"Access denied"},{status:403})}return await y.prisma.permanentministryevent.delete({where:{id:e}}),f.NextResponse.json({message:"Event deleted successfully"},{status:200})}catch(e){return console.error("Error deleting event:",e),f.NextResponse.json({error:"Failed to delete event"},{status:500})}}var w=e.i(31077);let G=new t.AppRouteRouteModule({definition:{kind:r.RouteKind.APP_ROUTE,page:"/api/events/[id]/route",pathname:"/api/events/[id]",filename:"route",bundlePath:""},distDir:".next",relativeProjectDir:"",resolvedPagePath:"[project]/app/api/events/[id]/route.ts",nextConfigOutput:"standalone",userland:w}),{workAsyncStorage:C,workUnitAsyncStorage:b,serverHooks:P}=G;function T(){return(0,n.patchFetch)({workAsyncStorage:C,workUnitAsyncStorage:b})}async function U(e,t,n){var f;let y="/api/events/[id]/route";y=y.replace(/\/index$/,"")||"/";let h=await G.prepare(e,t,{srcPage:y,multiZoneDraftMode:!1});if(!h)return t.statusCode=400,t.end("Bad Request"),null==n.waitUntil||n.waitUntil.call(n,Promise.resolve()),null;let{buildId:I,params:N,nextConfig:x,isDraftMode:A,prerenderManifest:E,routerServerContext:j,isOnDemandRevalidate:w,revalidateOnlyGenerated:C,resolvedPathname:b}=h,P=(0,i.normalizeAppPath)(y),T=!!(E.dynamicRoutes[P]||E.routes[b]);if(T&&!A){let e=!!E.routes[b],t=E.dynamicRoutes[P];if(t&&!1===t.fallback&&!e)throw new g.NoFallbackError}let U=null;!T||G.isDev||A||(U="/index"===(U=b)?"/":U);let S=!0===G.isDev||!T,z=T&&!S,_=e.method||"GET",O=(0,o.getTracer)(),q=O.getActiveScopeSpan(),D={params:N,prerenderManifest:E,renderOpts:{experimental:{cacheComponents:!!x.experimental.cacheComponents,authInterrupts:!!x.experimental.authInterrupts},supportsDynamicResponse:S,incrementalCache:(0,s.getRequestMeta)(e,"incrementalCache"),cacheLifeProfiles:null==(f=x.experimental)?void 0:f.cacheLife,isRevalidate:z,waitUntil:n.waitUntil,onClose:e=>{t.on("close",e)},onAfterTaskError:void 0,onInstrumentationRequestError:(t,r,n)=>G.onRequestError(e,t,n,j)},sharedContext:{buildId:I}},H=new a.NodeNextRequest(e),k=new a.NodeNextResponse(t),M=u.NextRequestAdapter.fromNodeNextRequest(H,(0,u.signalFromNodeResponse)(t));try{let i=async r=>G.handle(M,D).finally(()=>{if(!r)return;r.setAttributes({"http.status_code":t.statusCode,"next.rsc":!1});let n=O.getRootSpanAttributes();if(!n)return;if(n.get("next.span_type")!==l.BaseServerSpan.handleRequest)return void console.warn(`Unexpected root span type '${n.get("next.span_type")}'. Please report this Next.js issue https://github.com/vercel/next.js`);let s=n.get("next.route");if(s){let e=`${_} ${s}`;r.setAttributes({"next.route":s,"http.route":s,"next.span_name":e}),r.updateName(e)}else r.updateName(`${_} ${e.url}`)}),a=async o=>{var a,u;let l=async({previousCacheEntry:r})=>{try{if(!(0,s.getRequestMeta)(e,"minimalMode")&&w&&C&&!r)return t.statusCode=404,t.setHeader("x-nextjs-cache","REVALIDATED"),t.end("This page could not be found"),null;let a=await i(o);e.fetchMetrics=D.renderOpts.fetchMetrics;let u=D.renderOpts.pendingWaitUntil;u&&n.waitUntil&&(n.waitUntil(u),u=void 0);let l=D.renderOpts.collectedTags;if(!T)return await (0,p.sendResponse)(H,k,a,D.renderOpts.pendingWaitUntil),null;{let e=await a.blob(),t=(0,c.toNodeOutgoingHttpHeaders)(a.headers);l&&(t[v.NEXT_CACHE_TAGS_HEADER]=l),!t["content-type"]&&e.type&&(t["content-type"]=e.type);let r=void 0!==D.renderOpts.collectedRevalidate&&!(D.renderOpts.collectedRevalidate>=v.INFINITE_CACHE)&&D.renderOpts.collectedRevalidate,n=void 0===D.renderOpts.collectedExpire||D.renderOpts.collectedExpire>=v.INFINITE_CACHE?void 0:D.renderOpts.collectedExpire;return{value:{kind:R.CachedRouteKind.APP_ROUTE,status:a.status,body:Buffer.from(await e.arrayBuffer()),headers:t},cacheControl:{revalidate:r,expire:n}}}}catch(t){throw(null==r?void 0:r.isStale)&&await G.onRequestError(e,t,{routerKind:"App Router",routePath:y,routeType:"route",revalidateReason:(0,d.getRevalidateReason)({isRevalidate:z,isOnDemandRevalidate:w})},j),t}},g=await G.handleResponse({req:e,nextConfig:x,cacheKey:U,routeKind:r.RouteKind.APP_ROUTE,isFallback:!1,prerenderManifest:E,isRoutePPREnabled:!1,isOnDemandRevalidate:w,revalidateOnlyGenerated:C,responseGenerator:l,waitUntil:n.waitUntil});if(!T)return null;if((null==g||null==(a=g.value)?void 0:a.kind)!==R.CachedRouteKind.APP_ROUTE)throw Object.defineProperty(Error(`Invariant: app-route received invalid cache entry ${null==g||null==(u=g.value)?void 0:u.kind}`),"__NEXT_ERROR_CODE",{value:"E701",enumerable:!1,configurable:!0});(0,s.getRequestMeta)(e,"minimalMode")||t.setHeader("x-nextjs-cache",w?"REVALIDATED":g.isMiss?"MISS":g.isStale?"STALE":"HIT"),A&&t.setHeader("Cache-Control","private, no-cache, no-store, max-age=0, must-revalidate");let f=(0,c.fromNodeOutgoingHttpHeaders)(g.value.headers);return(0,s.getRequestMeta)(e,"minimalMode")&&T||f.delete(v.NEXT_CACHE_TAGS_HEADER),!g.cacheControl||t.getHeader("Cache-Control")||f.get("Cache-Control")||f.set("Cache-Control",(0,m.getCacheControlHeader)(g.cacheControl)),await (0,p.sendResponse)(H,k,new Response(g.value.body,{headers:f,status:g.value.status||200})),null};q?await a(q):await O.withPropagatedContext(e.headers,()=>O.trace(l.BaseServerSpan.handleRequest,{spanName:`${_} ${e.url}`,kind:o.SpanKind.SERVER,attributes:{"http.method":_,"http.target":e.url}},a))}catch(t){if(q||t instanceof g.NoFallbackError||await G.onRequestError(e,t,{routerKind:"App Router",routePath:P,routeType:"route",revalidateReason:(0,d.getRevalidateReason)({isRevalidate:z,isOnDemandRevalidate:w})}),T)throw t;return await (0,p.sendResponse)(H,k,new Response(null,{status:500})),null}}}];

//# sourceMappingURL=node_modules_next_dist_esm_build_templates_app-route_6800c0f1.js.map