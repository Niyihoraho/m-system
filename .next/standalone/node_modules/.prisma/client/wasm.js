
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('@prisma/client/runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.0
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.0",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.AccountScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  type: 'type',
  provider: 'provider',
  providerAccountId: 'providerAccountId',
  refresh_token: 'refresh_token',
  access_token: 'access_token',
  expires_at: 'expires_at',
  token_type: 'token_type',
  scope: 'scope',
  id_token: 'id_token',
  session_state: 'session_state',
  refresh_token_expires_in: 'refresh_token_expires_in',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.AlumnismallgroupScalarFieldEnum = {
  id: 'id',
  name: 'name',
  regionId: 'regionId'
};

exports.Prisma.ApprovalrequestScalarFieldEnum = {
  id: 'id',
  type: 'type',
  status: 'status',
  requestedById: 'requestedById',
  reviewedById: 'reviewedById',
  regionId: 'regionId',
  universityId: 'universityId',
  smallGroupId: 'smallGroupId',
  alumniGroupId: 'alumniGroupId',
  trainingsId: 'trainingsId',
  details: 'details',
  createdAt: 'createdAt',
  reviewedAt: 'reviewedAt'
};

exports.Prisma.AttendanceScalarFieldEnum = {
  id: 'id',
  memberId: 'memberId',
  trainingId: 'trainingId',
  permanentEventId: 'permanentEventId',
  status: 'status',
  recordedAt: 'recordedAt',
  notes: 'notes'
};

exports.Prisma.AuditlogScalarFieldEnum = {
  id: 'id',
  action: 'action',
  userId: 'userId',
  details: 'details',
  createdAt: 'createdAt'
};

exports.Prisma.AuthenticatorScalarFieldEnum = {
  credentialID: 'credentialID',
  userId: 'userId',
  providerAccountId: 'providerAccountId',
  credentialPublicKey: 'credentialPublicKey',
  counter: 'counter',
  credentialDeviceType: 'credentialDeviceType',
  credentialBackedUp: 'credentialBackedUp',
  transports: 'transports'
};

exports.Prisma.BudgetScalarFieldEnum = {
  id: 'id',
  name: 'name',
  period: 'period',
  allocatedAmount: 'allocatedAmount',
  regionId: 'regionId',
  universityId: 'universityId',
  smallGroupId: 'smallGroupId',
  alumniGroupId: 'alumniGroupId',
  trainingsId: 'trainingsId'
};

exports.Prisma.CellsScalarFieldEnum = {
  id: 'id',
  name: 'name',
  sector_id: 'sector_id'
};

exports.Prisma.ContributionScalarFieldEnum = {
  id: 'id',
  contributorId: 'contributorId',
  amount: 'amount',
  method: 'method',
  designationId: 'designationId',
  status: 'status',
  transactionId: 'transactionId',
  paymentTransactionId: 'paymentTransactionId',
  createdAt: 'createdAt',
  memberId: 'memberId'
};

exports.Prisma.ContributiondesignationScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  targetAmount: 'targetAmount',
  currentAmount: 'currentAmount',
  isActive: 'isActive',
  regionId: 'regionId',
  universityId: 'universityId',
  smallGroupId: 'smallGroupId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ContributionreceiptScalarFieldEnum = {
  id: 'id',
  contributionId: 'contributionId',
  receiptNumber: 'receiptNumber',
  pdfPath: 'pdfPath',
  emailSent: 'emailSent',
  emailSentAt: 'emailSentAt',
  smsSent: 'smsSent',
  smsSentAt: 'smsSentAt',
  createdAt: 'createdAt'
};

exports.Prisma.ContributorScalarFieldEnum = {
  id: 'id',
  name: 'name',
  email: 'email',
  phone: 'phone',
  memberId: 'memberId'
};

exports.Prisma.DistrictsScalarFieldEnum = {
  id: 'id',
  name: 'name',
  province_id: 'province_id'
};

exports.Prisma.DocumentScalarFieldEnum = {
  id: 'id',
  title: 'title',
  description: 'description',
  url: 'url',
  uploadedById: 'uploadedById',
  regionId: 'regionId',
  universityId: 'universityId',
  smallGroupId: 'smallGroupId',
  alumniGroupId: 'alumniGroupId',
  createdAt: 'createdAt'
};

exports.Prisma.MemberScalarFieldEnum = {
  id: 'id',
  firstname: 'firstname',
  secondname: 'secondname',
  gender: 'gender',
  birthdate: 'birthdate',
  placeOfBirthDistrict: 'placeOfBirthDistrict',
  placeOfBirthSector: 'placeOfBirthSector',
  placeOfBirthCell: 'placeOfBirthCell',
  placeOfBirthVillage: 'placeOfBirthVillage',
  localChurch: 'localChurch',
  email: 'email',
  phone: 'phone',
  type: 'type',
  status: 'status',
  regionId: 'regionId',
  universityId: 'universityId',
  smallGroupId: 'smallGroupId',
  alumniGroupId: 'alumniGroupId',
  graduationDate: 'graduationDate',
  faculty: 'faculty',
  professionalism: 'professionalism',
  maritalStatus: 'maritalStatus',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  placeOfBirthProvince: 'placeOfBirthProvince'
};

exports.Prisma.MovementScalarFieldEnum = {
  id: 'id',
  memberId: 'memberId',
  fromGroupId: 'fromGroupId',
  toGroupId: 'toGroupId',
  fromLocation: 'fromLocation',
  toLocation: 'toLocation',
  reason: 'reason',
  movedAt: 'movedAt'
};

exports.Prisma.NotificationScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  type: 'type',
  subject: 'subject',
  message: 'message',
  status: 'status',
  sentAt: 'sentAt',
  createdAt: 'createdAt'
};

exports.Prisma.PaymentgatewayScalarFieldEnum = {
  id: 'id',
  name: 'name',
  provider: 'provider',
  isActive: 'isActive',
  configuration: 'configuration',
  supportedMethods: 'supportedMethods',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.PaymenttransactionScalarFieldEnum = {
  id: 'id',
  externalId: 'externalId',
  gatewayId: 'gatewayId',
  amount: 'amount',
  currency: 'currency',
  phoneNumber: 'phoneNumber',
  email: 'email',
  payerName: 'payerName',
  status: 'status',
  gatewayResponse: 'gatewayResponse',
  failureReason: 'failureReason',
  webhookVerified: 'webhookVerified',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.PermanentministryeventScalarFieldEnum = {
  id: 'id',
  name: 'name',
  type: 'type',
  regionId: 'regionId',
  universityId: 'universityId',
  smallGroupId: 'smallGroupId',
  alumniGroupId: 'alumniGroupId',
  isActive: 'isActive',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ProvincesScalarFieldEnum = {
  id: 'id',
  name: 'name'
};

exports.Prisma.RegionScalarFieldEnum = {
  id: 'id',
  name: 'name'
};

exports.Prisma.SectorsScalarFieldEnum = {
  id: 'id',
  name: 'name',
  district_id: 'district_id'
};

exports.Prisma.SessionScalarFieldEnum = {
  id: 'id',
  sessionToken: 'sessionToken',
  userId: 'userId',
  expires: 'expires',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SmallgroupScalarFieldEnum = {
  id: 'id',
  name: 'name',
  universityId: 'universityId',
  regionId: 'regionId'
};

exports.Prisma.StaffprofileScalarFieldEnum = {
  id: 'id',
  memberId: 'memberId',
  position: 'position',
  startDate: 'startDate',
  endDate: 'endDate',
  mentorship: 'mentorship',
  notes: 'notes'
};

exports.Prisma.TrainingsScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  startDateTime: 'startDateTime',
  endDateTime: 'endDateTime',
  location: 'location',
  regionId: 'regionId',
  universityId: 'universityId',
  smallGroupId: 'smallGroupId',
  alumniGroupId: 'alumniGroupId',
  createdById: 'createdById',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.UniversityScalarFieldEnum = {
  id: 'id',
  name: 'name',
  regionId: 'regionId'
};

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  name: 'name',
  username: 'username',
  email: 'email',
  emailVerified: 'emailVerified',
  image: 'image',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  password: 'password'
};

exports.Prisma.UserroleScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  regionId: 'regionId',
  universityId: 'universityId',
  smallGroupId: 'smallGroupId',
  alumniGroupId: 'alumniGroupId',
  scope: 'scope',
  assignedAt: 'assignedAt'
};

exports.Prisma.VerificationtokenScalarFieldEnum = {
  identifier: 'identifier',
  token: 'token',
  expires: 'expires'
};

exports.Prisma.VillagesScalarFieldEnum = {
  id: 'id',
  name: 'name',
  cell_id: 'cell_id'
};

exports.Prisma.VolunteerprofileScalarFieldEnum = {
  id: 'id',
  memberId: 'memberId',
  skills: 'skills',
  hours: 'hours',
  commitmentLevel: 'commitmentLevel',
  onboardingDate: 'onboardingDate',
  exitDate: 'exitDate',
  notes: 'notes'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.accountOrderByRelevanceFieldEnum = {
  id: 'id',
  userId: 'userId',
  type: 'type',
  provider: 'provider',
  providerAccountId: 'providerAccountId',
  refresh_token: 'refresh_token',
  access_token: 'access_token',
  token_type: 'token_type',
  scope: 'scope',
  id_token: 'id_token',
  session_state: 'session_state'
};

exports.Prisma.alumnismallgroupOrderByRelevanceFieldEnum = {
  name: 'name'
};

exports.Prisma.approvalrequestOrderByRelevanceFieldEnum = {
  requestedById: 'requestedById',
  reviewedById: 'reviewedById',
  details: 'details'
};

exports.Prisma.attendanceOrderByRelevanceFieldEnum = {
  notes: 'notes'
};

exports.Prisma.auditlogOrderByRelevanceFieldEnum = {
  action: 'action',
  userId: 'userId',
  details: 'details'
};

exports.Prisma.authenticatorOrderByRelevanceFieldEnum = {
  credentialID: 'credentialID',
  userId: 'userId',
  providerAccountId: 'providerAccountId',
  credentialPublicKey: 'credentialPublicKey',
  credentialDeviceType: 'credentialDeviceType',
  transports: 'transports'
};

exports.Prisma.budgetOrderByRelevanceFieldEnum = {
  name: 'name',
  period: 'period'
};

exports.Prisma.cellsOrderByRelevanceFieldEnum = {
  name: 'name'
};

exports.Prisma.contributionOrderByRelevanceFieldEnum = {
  transactionId: 'transactionId'
};

exports.Prisma.contributiondesignationOrderByRelevanceFieldEnum = {
  name: 'name',
  description: 'description'
};

exports.Prisma.contributionreceiptOrderByRelevanceFieldEnum = {
  receiptNumber: 'receiptNumber',
  pdfPath: 'pdfPath'
};

exports.Prisma.contributorOrderByRelevanceFieldEnum = {
  name: 'name',
  email: 'email',
  phone: 'phone'
};

exports.Prisma.districtsOrderByRelevanceFieldEnum = {
  name: 'name'
};

exports.Prisma.documentOrderByRelevanceFieldEnum = {
  title: 'title',
  description: 'description',
  url: 'url',
  uploadedById: 'uploadedById'
};

exports.Prisma.memberOrderByRelevanceFieldEnum = {
  firstname: 'firstname',
  secondname: 'secondname',
  gender: 'gender',
  placeOfBirthDistrict: 'placeOfBirthDistrict',
  placeOfBirthSector: 'placeOfBirthSector',
  placeOfBirthCell: 'placeOfBirthCell',
  placeOfBirthVillage: 'placeOfBirthVillage',
  localChurch: 'localChurch',
  email: 'email',
  phone: 'phone',
  faculty: 'faculty',
  professionalism: 'professionalism',
  maritalStatus: 'maritalStatus',
  placeOfBirthProvince: 'placeOfBirthProvince'
};

exports.Prisma.movementOrderByRelevanceFieldEnum = {
  fromLocation: 'fromLocation',
  toLocation: 'toLocation',
  reason: 'reason'
};

exports.Prisma.notificationOrderByRelevanceFieldEnum = {
  userId: 'userId',
  subject: 'subject',
  message: 'message'
};

exports.Prisma.paymentgatewayOrderByRelevanceFieldEnum = {
  name: 'name',
  provider: 'provider',
  configuration: 'configuration',
  supportedMethods: 'supportedMethods'
};

exports.Prisma.paymenttransactionOrderByRelevanceFieldEnum = {
  externalId: 'externalId',
  currency: 'currency',
  phoneNumber: 'phoneNumber',
  email: 'email',
  payerName: 'payerName',
  gatewayResponse: 'gatewayResponse',
  failureReason: 'failureReason'
};

exports.Prisma.permanentministryeventOrderByRelevanceFieldEnum = {
  name: 'name'
};

exports.Prisma.provincesOrderByRelevanceFieldEnum = {
  name: 'name'
};

exports.Prisma.regionOrderByRelevanceFieldEnum = {
  name: 'name'
};

exports.Prisma.sectorsOrderByRelevanceFieldEnum = {
  name: 'name'
};

exports.Prisma.sessionOrderByRelevanceFieldEnum = {
  id: 'id',
  sessionToken: 'sessionToken',
  userId: 'userId'
};

exports.Prisma.smallgroupOrderByRelevanceFieldEnum = {
  name: 'name'
};

exports.Prisma.staffprofileOrderByRelevanceFieldEnum = {
  position: 'position',
  mentorship: 'mentorship',
  notes: 'notes'
};

exports.Prisma.trainingsOrderByRelevanceFieldEnum = {
  name: 'name',
  description: 'description',
  location: 'location',
  createdById: 'createdById'
};

exports.Prisma.universityOrderByRelevanceFieldEnum = {
  name: 'name'
};

exports.Prisma.userOrderByRelevanceFieldEnum = {
  id: 'id',
  name: 'name',
  username: 'username',
  email: 'email',
  image: 'image',
  password: 'password'
};

exports.Prisma.userroleOrderByRelevanceFieldEnum = {
  userId: 'userId'
};

exports.Prisma.verificationtokenOrderByRelevanceFieldEnum = {
  identifier: 'identifier',
  token: 'token'
};

exports.Prisma.villagesOrderByRelevanceFieldEnum = {
  name: 'name'
};

exports.Prisma.volunteerprofileOrderByRelevanceFieldEnum = {
  skills: 'skills',
  commitmentLevel: 'commitmentLevel',
  notes: 'notes'
};
exports.approvalrequest_type = exports.$Enums.approvalrequest_type = {
  role_assignment: 'role_assignment',
  training: 'training',
  financial: 'financial',
  group_creation: 'group_creation',
  other: 'other'
};

exports.approvalrequest_status = exports.$Enums.approvalrequest_status = {
  pending: 'pending',
  approved: 'approved',
  rejected: 'rejected'
};

exports.notification_type = exports.$Enums.notification_type = {
  email: 'email',
  sms: 'sms',
  in_app: 'in_app'
};

exports.permanentministryevent_type = exports.$Enums.permanentministryevent_type = {
  bible_study: 'bible_study',
  discipleship: 'discipleship',
  evangelism: 'evangelism',
  cell_meeting: 'cell_meeting',
  alumni_meeting: 'alumni_meeting',
  other: 'other'
};

exports.contribution_method = exports.$Enums.contribution_method = {
  mobile_money: 'mobile_money',
  bank_transfer: 'bank_transfer',
  card: 'card',
  worldremit: 'worldremit'
};

exports.attendance_status = exports.$Enums.attendance_status = {
  present: 'present',
  absent: 'absent',
  excused: 'excused'
};

exports.contribution_status = exports.$Enums.contribution_status = {
  pending: 'pending',
  completed: 'completed',
  failed: 'failed',
  refunded: 'refunded',
  processing: 'processing',
  cancelled: 'cancelled'
};

exports.notification_status = exports.$Enums.notification_status = {
  sent: 'sent',
  pending: 'pending',
  failed: 'failed'
};

exports.userrole_scope = exports.$Enums.userrole_scope = {
  superadmin: 'superadmin',
  national: 'national',
  region: 'region',
  university: 'university',
  smallgroup: 'smallgroup',
  alumnismallgroup: 'alumnismallgroup'
};

exports.paymenttransaction_status = exports.$Enums.paymenttransaction_status = {
  initiated: 'initiated',
  processing: 'processing',
  completed: 'completed',
  failed: 'failed',
  cancelled: 'cancelled',
  refunded: 'refunded'
};

exports.member_type = exports.$Enums.member_type = {
  student: 'student',
  graduate: 'graduate',
  staff: 'staff',
  volunteer: 'volunteer',
  alumni: 'alumni'
};

exports.member_status = exports.$Enums.member_status = {
  active: 'active',
  pre_graduate: 'pre_graduate',
  graduate: 'graduate',
  alumni: 'alumni',
  inactive: 'inactive'
};

exports.Prisma.ModelName = {
  account: 'account',
  alumnismallgroup: 'alumnismallgroup',
  approvalrequest: 'approvalrequest',
  attendance: 'attendance',
  auditlog: 'auditlog',
  authenticator: 'authenticator',
  budget: 'budget',
  cells: 'cells',
  contribution: 'contribution',
  contributiondesignation: 'contributiondesignation',
  contributionreceipt: 'contributionreceipt',
  contributor: 'contributor',
  districts: 'districts',
  document: 'document',
  member: 'member',
  movement: 'movement',
  notification: 'notification',
  paymentgateway: 'paymentgateway',
  paymenttransaction: 'paymenttransaction',
  permanentministryevent: 'permanentministryevent',
  provinces: 'provinces',
  region: 'region',
  sectors: 'sectors',
  session: 'session',
  smallgroup: 'smallgroup',
  staffprofile: 'staffprofile',
  trainings: 'trainings',
  university: 'university',
  user: 'user',
  userrole: 'userrole',
  verificationtoken: 'verificationtoken',
  villages: 'villages',
  volunteerprofile: 'volunteerprofile'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "C:\\Users\\user\\Music\\github\\m-system\\node_modules\\@prisma\\client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "C:\\Users\\user\\Music\\github\\m-system\\prisma\\schema.prisma"
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.16.0",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "mysql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider = \"prisma-client-js\"\n}\n\ndatasource db {\n  provider = \"mysql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel account {\n  id                       String   @id\n  userId                   String   @unique(map: \"Account_userId_key\")\n  type                     String\n  provider                 String\n  providerAccountId        String\n  refresh_token            String?  @db.Text\n  access_token             String?  @db.Text\n  expires_at               Int?\n  token_type               String?\n  scope                    String?\n  id_token                 String?  @db.Text\n  session_state            String?\n  refresh_token_expires_in Int?\n  createdAt                DateTime @default(now())\n  updatedAt                DateTime\n  user                     user     @relation(fields: [userId], references: [id], map: \"Account_userId_fkey\")\n\n  @@unique([provider, providerAccountId], map: \"Account_provider_providerAccountId_key\")\n  @@index([userId], map: \"Account_userId_idx\")\n}\n\nmodel alumnismallgroup {\n  id                     Int                      @id @default(autoincrement())\n  name                   String\n  regionId               Int\n  region                 region                   @relation(fields: [regionId], references: [id], map: \"AlumniSmallGroup_regionId_fkey\")\n  approvalrequest        approvalrequest[]\n  budget                 budget[]\n  document               document[]\n  member                 member[]\n  permanentministryevent permanentministryevent[]\n  trainings              trainings[]\n  userrole               userrole[]\n\n  @@index([regionId], map: \"AlumniSmallGroup_regionId_fkey\")\n}\n\nmodel approvalrequest {\n  id                                       Int                    @id @default(autoincrement())\n  type                                     approvalrequest_type\n  status                                   approvalrequest_status @default(pending)\n  requestedById                            String\n  reviewedById                             String?\n  regionId                                 Int?\n  universityId                             Int?\n  smallGroupId                             Int?\n  alumniGroupId                            Int?\n  trainingsId                              Int?\n  details                                  String?\n  createdAt                                DateTime               @default(now())\n  reviewedAt                               DateTime?\n  alumnismallgroup                         alumnismallgroup?      @relation(fields: [alumniGroupId], references: [id], map: \"ApprovalRequest_alumniGroupId_fkey\")\n  region                                   region?                @relation(fields: [regionId], references: [id], map: \"ApprovalRequest_regionId_fkey\")\n  user_approvalrequest_requestedByIdTouser user                   @relation(\"approvalrequest_requestedByIdTouser\", fields: [requestedById], references: [id], map: \"ApprovalRequest_requestedById_fkey\")\n  user_approvalrequest_reviewedByIdTouser  user?                  @relation(\"approvalrequest_reviewedByIdTouser\", fields: [reviewedById], references: [id], map: \"ApprovalRequest_reviewedById_fkey\")\n  smallgroup                               smallgroup?            @relation(fields: [smallGroupId], references: [id], map: \"ApprovalRequest_smallGroupId_fkey\")\n  trainings                                trainings?             @relation(fields: [trainingsId], references: [id], map: \"ApprovalRequest_trainingsId_fkey\")\n  university                               university?            @relation(fields: [universityId], references: [id], map: \"ApprovalRequest_universityId_fkey\")\n\n  @@index([alumniGroupId], map: \"ApprovalRequest_alumniGroupId_fkey\")\n  @@index([regionId], map: \"ApprovalRequest_regionId_fkey\")\n  @@index([requestedById], map: \"ApprovalRequest_requestedById_fkey\")\n  @@index([reviewedById], map: \"ApprovalRequest_reviewedById_fkey\")\n  @@index([smallGroupId], map: \"ApprovalRequest_smallGroupId_fkey\")\n  @@index([trainingsId], map: \"ApprovalRequest_trainingsId_fkey\")\n  @@index([universityId], map: \"ApprovalRequest_universityId_fkey\")\n}\n\nmodel attendance {\n  id                     Int                     @id @default(autoincrement())\n  memberId               Int\n  trainingId             Int?\n  permanentEventId       Int?\n  status                 attendance_status       @default(present)\n  recordedAt             DateTime                @default(now())\n  notes                  String?\n  member                 member                  @relation(fields: [memberId], references: [id], onDelete: Cascade, map: \"Attendance_memberId_fkey\")\n  permanentministryevent permanentministryevent? @relation(fields: [permanentEventId], references: [id], map: \"Attendance_permanentEventId_fkey\")\n  trainings              trainings?              @relation(fields: [trainingId], references: [id], onDelete: Cascade, map: \"Attendance_trainingId_fkey\")\n\n  @@unique([memberId, trainingId], map: \"Attendance_memberId_trainingId_key\")\n  @@index([permanentEventId], map: \"Attendance_permanentEventId_fkey\")\n  @@index([trainingId], map: \"Attendance_trainingId_fkey\")\n}\n\nmodel auditlog {\n  id        Int      @id @default(autoincrement())\n  action    String\n  userId    String?\n  details   String?\n  createdAt DateTime @default(now())\n  user      user?    @relation(fields: [userId], references: [id], map: \"AuditLog_userId_fkey\")\n\n  @@index([userId], map: \"AuditLog_userId_fkey\")\n}\n\nmodel authenticator {\n  credentialID         String  @unique(map: \"Authenticator_credentialID_key\")\n  userId               String\n  providerAccountId    String\n  credentialPublicKey  String\n  counter              Int\n  credentialDeviceType String\n  credentialBackedUp   Boolean\n  transports           String?\n  user                 user    @relation(fields: [userId], references: [id], onDelete: Cascade, map: \"Authenticator_userId_fkey\")\n\n  @@id([userId, credentialID])\n}\n\nmodel budget {\n  id               Int               @id @default(autoincrement())\n  name             String\n  period           String\n  allocatedAmount  Float\n  regionId         Int?\n  universityId     Int?\n  smallGroupId     Int?\n  alumniGroupId    Int?\n  trainingsId      Int?              @unique(map: \"Budget_trainingsId_key\")\n  alumnismallgroup alumnismallgroup? @relation(fields: [alumniGroupId], references: [id], map: \"Budget_alumniGroupId_fkey\")\n  region           region?           @relation(fields: [regionId], references: [id], map: \"Budget_regionId_fkey\")\n  smallgroup       smallgroup?       @relation(fields: [smallGroupId], references: [id], map: \"Budget_smallGroupId_fkey\")\n  trainings        trainings?        @relation(fields: [trainingsId], references: [id], map: \"Budget_trainingsId_fkey\")\n  university       university?       @relation(fields: [universityId], references: [id], map: \"Budget_universityId_fkey\")\n\n  @@index([alumniGroupId], map: \"Budget_alumniGroupId_fkey\")\n  @@index([regionId], map: \"Budget_regionId_fkey\")\n  @@index([smallGroupId], map: \"Budget_smallGroupId_fkey\")\n  @@index([universityId], map: \"Budget_universityId_fkey\")\n}\n\nmodel cells {\n  id        BigInt     @id @default(autoincrement()) @db.UnsignedBigInt\n  name      String\n  sector_id BigInt     @db.UnsignedBigInt\n  sectors   sectors    @relation(fields: [sector_id], references: [id], onUpdate: Restrict, map: \"cells_sector_id_foreign\")\n  villages  villages[]\n\n  @@index([sector_id], map: \"cells_sector_id_foreign\")\n}\n\nmodel contribution {\n  id                      Int                      @id @default(autoincrement())\n  contributorId           Int\n  amount                  Float\n  method                  contribution_method\n  designationId           Int?\n  status                  contribution_status\n  transactionId           String?                  @unique(map: \"Contribution_transactionId_key\")\n  paymentTransactionId    Int?\n  createdAt               DateTime                 @default(now())\n  memberId                Int?\n  contributor             contributor              @relation(fields: [contributorId], references: [id], map: \"Contribution_contributorId_fkey\")\n  contributiondesignation contributiondesignation? @relation(fields: [designationId], references: [id], map: \"Contribution_designationId_fkey\")\n  member                  member?                  @relation(fields: [memberId], references: [id], map: \"Contribution_memberId_fkey\")\n  paymenttransaction      paymenttransaction?      @relation(fields: [paymentTransactionId], references: [id], map: \"Contribution_paymentTransactionId_fkey\")\n  contributionreceipt     contributionreceipt?\n\n  @@index([contributorId], map: \"Contribution_contributorId_fkey\")\n  @@index([designationId], map: \"Contribution_designationId_fkey\")\n  @@index([memberId], map: \"Contribution_memberId_fkey\")\n  @@index([paymentTransactionId], map: \"Contribution_paymentTransactionId_fkey\")\n}\n\nmodel contributiondesignation {\n  id            Int            @id @default(autoincrement())\n  name          String         @unique(map: \"ContributionDesignation_name_key\")\n  description   String?\n  targetAmount  Float?\n  currentAmount Float          @default(0)\n  isActive      Boolean        @default(true)\n  regionId      Int?\n  universityId  Int?\n  smallGroupId  Int?\n  createdAt     DateTime       @default(now())\n  updatedAt     DateTime\n  contribution  contribution[]\n  region        region?        @relation(fields: [regionId], references: [id], map: \"ContributionDesignation_regionId_fkey\")\n  smallgroup    smallgroup?    @relation(fields: [smallGroupId], references: [id], map: \"ContributionDesignation_smallGroupId_fkey\")\n  university    university?    @relation(fields: [universityId], references: [id], map: \"ContributionDesignation_universityId_fkey\")\n\n  @@index([regionId], map: \"ContributionDesignation_regionId_fkey\")\n  @@index([smallGroupId], map: \"ContributionDesignation_smallGroupId_fkey\")\n  @@index([universityId], map: \"ContributionDesignation_universityId_fkey\")\n}\n\nmodel contributionreceipt {\n  id             Int          @id @default(autoincrement())\n  contributionId Int          @unique(map: \"ContributionReceipt_contributionId_key\")\n  receiptNumber  String       @unique(map: \"ContributionReceipt_receiptNumber_key\")\n  pdfPath        String?\n  emailSent      Boolean      @default(false)\n  emailSentAt    DateTime?\n  smsSent        Boolean      @default(false)\n  smsSentAt      DateTime?\n  createdAt      DateTime     @default(now())\n  contribution   contribution @relation(fields: [contributionId], references: [id], map: \"ContributionReceipt_contributionId_fkey\")\n}\n\nmodel contributor {\n  id           Int            @id @default(autoincrement())\n  name         String\n  email        String?        @unique(map: \"Contributor_email_key\")\n  phone        String?\n  memberId     Int?           @unique(map: \"Contributor_memberId_key\")\n  contribution contribution[]\n  member       member?        @relation(fields: [memberId], references: [id], map: \"Contributor_memberId_fkey\")\n}\n\nmodel districts {\n  id          BigInt    @id @default(autoincrement()) @db.UnsignedBigInt\n  name        String\n  province_id BigInt    @db.UnsignedBigInt\n  provinces   provinces @relation(fields: [province_id], references: [id], onUpdate: Restrict, map: \"districts_province_id_foreign\")\n  sectors     sectors[]\n\n  @@index([province_id], map: \"districts_province_id_foreign\")\n}\n\nmodel document {\n  id               Int               @id @default(autoincrement())\n  title            String\n  description      String?\n  url              String\n  uploadedById     String\n  regionId         Int?\n  universityId     Int?\n  smallGroupId     Int?\n  alumniGroupId    Int?\n  createdAt        DateTime          @default(now())\n  alumnismallgroup alumnismallgroup? @relation(fields: [alumniGroupId], references: [id], map: \"Document_alumniGroupId_fkey\")\n  region           region?           @relation(fields: [regionId], references: [id], map: \"Document_regionId_fkey\")\n  smallgroup       smallgroup?       @relation(fields: [smallGroupId], references: [id], map: \"Document_smallGroupId_fkey\")\n  university       university?       @relation(fields: [universityId], references: [id], map: \"Document_universityId_fkey\")\n  user             user              @relation(fields: [uploadedById], references: [id], map: \"Document_uploadedById_fkey\")\n\n  @@index([alumniGroupId], map: \"Document_alumniGroupId_fkey\")\n  @@index([regionId], map: \"Document_regionId_fkey\")\n  @@index([smallGroupId], map: \"Document_smallGroupId_fkey\")\n  @@index([universityId], map: \"Document_universityId_fkey\")\n  @@index([uploadedById], map: \"Document_uploadedById_fkey\")\n}\n\nmodel member {\n  id                   Int               @id @default(autoincrement())\n  firstname            String?\n  secondname           String?\n  gender               String?\n  birthdate            DateTime?\n  placeOfBirthDistrict String?\n  placeOfBirthSector   String?\n  placeOfBirthCell     String?\n  placeOfBirthVillage  String?\n  localChurch          String?\n  email                String?           @unique(map: \"Member_email_key\")\n  phone                String?\n  type                 member_type\n  status               member_status     @default(active)\n  regionId             Int?\n  universityId         Int?\n  smallGroupId         Int?\n  alumniGroupId        Int?\n  graduationDate       DateTime?\n  faculty              String?\n  professionalism      String?\n  maritalStatus        String?\n  createdAt            DateTime          @default(now())\n  updatedAt            DateTime\n  placeOfBirthProvince String?\n  attendance           attendance[]\n  contribution         contribution[]\n  contributor          contributor?\n  alumnismallgroup     alumnismallgroup? @relation(fields: [alumniGroupId], references: [id], map: \"Member_alumniGroupId_fkey\")\n  region               region?           @relation(fields: [regionId], references: [id], map: \"Member_regionId_fkey\")\n  smallgroup           smallgroup?       @relation(fields: [smallGroupId], references: [id], map: \"Member_smallGroupId_fkey\")\n  university           university?       @relation(fields: [universityId], references: [id], map: \"Member_universityId_fkey\")\n  movement             movement[]\n  staffprofile         staffprofile?\n  volunteerprofile     volunteerprofile?\n\n  @@index([alumniGroupId], map: \"Member_alumniGroupId_fkey\")\n  @@index([regionId], map: \"Member_regionId_fkey\")\n  @@index([smallGroupId], map: \"Member_smallGroupId_fkey\")\n  @@index([universityId], map: \"Member_universityId_fkey\")\n}\n\nmodel movement {\n  id           Int      @id @default(autoincrement())\n  memberId     Int\n  fromGroupId  Int?\n  toGroupId    Int?\n  fromLocation String?\n  toLocation   String?\n  reason       String?\n  movedAt      DateTime @default(now())\n  member       member   @relation(fields: [memberId], references: [id], map: \"Movement_memberId_fkey\")\n\n  @@index([memberId], map: \"Movement_memberId_fkey\")\n}\n\nmodel notification {\n  id        Int                 @id @default(autoincrement())\n  userId    String?\n  type      notification_type\n  subject   String?\n  message   String\n  status    notification_status\n  sentAt    DateTime?\n  createdAt DateTime            @default(now())\n  user      user?               @relation(fields: [userId], references: [id], map: \"Notification_userId_fkey\")\n\n  @@index([userId], map: \"Notification_userId_fkey\")\n}\n\nmodel paymentgateway {\n  id                 Int                  @id @default(autoincrement())\n  name               String               @unique(map: \"PaymentGateway_name_key\")\n  provider           String\n  isActive           Boolean              @default(true)\n  configuration      String               @db.LongText\n  supportedMethods   String               @db.LongText\n  createdAt          DateTime             @default(now())\n  updatedAt          DateTime\n  paymenttransaction paymenttransaction[]\n}\n\nmodel paymenttransaction {\n  id              Int                       @id @default(autoincrement())\n  externalId      String                    @unique(map: \"PaymentTransaction_externalId_key\")\n  gatewayId       Int\n  amount          Float\n  currency        String                    @default(\"RWF\")\n  phoneNumber     String?\n  email           String?\n  payerName       String?\n  status          paymenttransaction_status @default(initiated)\n  gatewayResponse String?                   @db.LongText\n  failureReason   String?\n  webhookVerified Boolean                   @default(false)\n  createdAt       DateTime                  @default(now())\n  updatedAt       DateTime\n  contribution    contribution[]\n  paymentgateway  paymentgateway            @relation(fields: [gatewayId], references: [id], map: \"PaymentTransaction_gatewayId_fkey\")\n\n  @@index([gatewayId], map: \"PaymentTransaction_gatewayId_fkey\")\n}\n\nmodel permanentministryevent {\n  id               Int                         @id @default(autoincrement())\n  name             String\n  type             permanentministryevent_type\n  regionId         Int?\n  universityId     Int?\n  smallGroupId     Int?\n  alumniGroupId    Int?\n  isActive         Boolean                     @default(true)\n  createdAt        DateTime                    @default(now())\n  updatedAt        DateTime\n  attendance       attendance[]\n  alumnismallgroup alumnismallgroup?           @relation(fields: [alumniGroupId], references: [id], map: \"PermanentMinistryEvent_alumniGroupId_fkey\")\n  region           region?                     @relation(fields: [regionId], references: [id], map: \"PermanentMinistryEvent_regionId_fkey\")\n  smallgroup       smallgroup?                 @relation(fields: [smallGroupId], references: [id], map: \"PermanentMinistryEvent_smallGroupId_fkey\")\n  university       university?                 @relation(fields: [universityId], references: [id], map: \"PermanentMinistryEvent_universityId_fkey\")\n\n  @@index([alumniGroupId], map: \"PermanentMinistryEvent_alumniGroupId_fkey\")\n  @@index([regionId], map: \"PermanentMinistryEvent_regionId_fkey\")\n  @@index([smallGroupId], map: \"PermanentMinistryEvent_smallGroupId_fkey\")\n  @@index([universityId], map: \"PermanentMinistryEvent_universityId_fkey\")\n}\n\nmodel provinces {\n  id        BigInt      @id @default(autoincrement()) @db.UnsignedBigInt\n  name      String\n  districts districts[]\n}\n\nmodel region {\n  id                      Int                       @id @default(autoincrement())\n  name                    String                    @unique(map: \"Region_name_key\")\n  alumnismallgroup        alumnismallgroup[]\n  approvalrequest         approvalrequest[]\n  budget                  budget[]\n  contributiondesignation contributiondesignation[]\n  document                document[]\n  member                  member[]\n  permanentministryevent  permanentministryevent[]\n  smallgroup              smallgroup[]\n  trainings               trainings[]\n  university              university[]\n  userrole                userrole[]\n}\n\nmodel sectors {\n  id          BigInt    @id @default(autoincrement()) @db.UnsignedBigInt\n  name        String\n  district_id BigInt    @db.UnsignedBigInt\n  cells       cells[]\n  districts   districts @relation(fields: [district_id], references: [id], onUpdate: Restrict, map: \"sectors_district_id_foreign\")\n\n  @@index([district_id], map: \"sectors_district_id_foreign\")\n}\n\nmodel session {\n  id           String   @id\n  sessionToken String   @unique(map: \"Session_sessionToken_key\")\n  userId       String\n  expires      DateTime\n  createdAt    DateTime @default(now())\n  updatedAt    DateTime\n  user         user     @relation(fields: [userId], references: [id], map: \"Session_userId_fkey\")\n\n  @@index([userId], map: \"Session_userId_idx\")\n}\n\nmodel smallgroup {\n  id                      Int                       @id @default(autoincrement())\n  name                    String\n  universityId            Int\n  regionId                Int\n  approvalrequest         approvalrequest[]\n  budget                  budget[]\n  contributiondesignation contributiondesignation[]\n  document                document[]\n  member                  member[]\n  permanentministryevent  permanentministryevent[]\n  region                  region                    @relation(fields: [regionId], references: [id], map: \"SmallGroup_regionId_fkey\")\n  university              university                @relation(fields: [universityId], references: [id], map: \"SmallGroup_universityId_fkey\")\n  trainings               trainings[]\n  userrole                userrole[]\n\n  @@index([regionId], map: \"SmallGroup_regionId_fkey\")\n  @@index([universityId], map: \"SmallGroup_universityId_fkey\")\n}\n\nmodel staffprofile {\n  id         Int       @id @default(autoincrement())\n  memberId   Int       @unique(map: \"StaffProfile_memberId_key\")\n  position   String?\n  startDate  DateTime?\n  endDate    DateTime?\n  mentorship String?\n  notes      String?\n  member     member    @relation(fields: [memberId], references: [id], map: \"StaffProfile_memberId_fkey\")\n}\n\nmodel trainings {\n  id               Int               @id @default(autoincrement())\n  name             String\n  description      String?\n  startDateTime    DateTime\n  endDateTime      DateTime?\n  location         String?\n  regionId         Int?\n  universityId     Int?\n  smallGroupId     Int?\n  alumniGroupId    Int?\n  createdById      String\n  createdAt        DateTime          @default(now())\n  updatedAt        DateTime\n  approvalrequest  approvalrequest[]\n  attendance       attendance[]\n  budget           budget?\n  alumnismallgroup alumnismallgroup? @relation(fields: [alumniGroupId], references: [id], map: \"Trainings_alumniGroupId_fkey\")\n  user             user              @relation(fields: [createdById], references: [id], map: \"Trainings_createdById_fkey\")\n  region           region?           @relation(fields: [regionId], references: [id], map: \"Trainings_regionId_fkey\")\n  smallgroup       smallgroup?       @relation(fields: [smallGroupId], references: [id], map: \"Trainings_smallGroupId_fkey\")\n  university       university?       @relation(fields: [universityId], references: [id], map: \"Trainings_universityId_fkey\")\n\n  @@index([alumniGroupId], map: \"Trainings_alumniGroupId_fkey\")\n  @@index([createdById], map: \"Trainings_createdById_fkey\")\n  @@index([regionId], map: \"Trainings_regionId_fkey\")\n  @@index([smallGroupId], map: \"Trainings_smallGroupId_fkey\")\n  @@index([universityId], map: \"Trainings_universityId_fkey\")\n}\n\nmodel university {\n  id                      Int                       @id @default(autoincrement())\n  name                    String\n  regionId                Int\n  approvalrequest         approvalrequest[]\n  budget                  budget[]\n  contributiondesignation contributiondesignation[]\n  document                document[]\n  member                  member[]\n  permanentministryevent  permanentministryevent[]\n  smallgroup              smallgroup[]\n  trainings               trainings[]\n  region                  region                    @relation(fields: [regionId], references: [id], map: \"University_regionId_fkey\")\n  userrole                userrole[]\n\n  @@index([regionId], map: \"University_regionId_fkey\")\n}\n\nmodel user {\n  id                                                  String            @id\n  name                                                String?\n  username                                            String?           @unique(map: \"User_username_key\")\n  email                                               String?           @unique(map: \"User_email_key\")\n  emailVerified                                       DateTime?\n  image                                               String?\n  createdAt                                           DateTime          @default(now())\n  updatedAt                                           DateTime\n  password                                            String?\n  account                                             account?\n  approvalrequest_approvalrequest_requestedByIdTouser approvalrequest[] @relation(\"approvalrequest_requestedByIdTouser\")\n  approvalrequest_approvalrequest_reviewedByIdTouser  approvalrequest[] @relation(\"approvalrequest_reviewedByIdTouser\")\n  auditlog                                            auditlog[]\n  authenticator                                       authenticator[]\n  document                                            document[]\n  notification                                        notification[]\n  session                                             session[]\n  trainings                                           trainings[]\n  userrole                                            userrole[]\n}\n\nmodel userrole {\n  id               Int               @id @default(autoincrement())\n  userId           String\n  regionId         Int?\n  universityId     Int?\n  smallGroupId     Int?\n  alumniGroupId    Int?\n  scope            userrole_scope    @default(superadmin)\n  assignedAt       DateTime          @default(now())\n  alumnismallgroup alumnismallgroup? @relation(fields: [alumniGroupId], references: [id])\n  region           region?           @relation(fields: [regionId], references: [id])\n  smallgroup       smallgroup?       @relation(fields: [smallGroupId], references: [id])\n  university       university?       @relation(fields: [universityId], references: [id])\n  user             user              @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@index([alumniGroupId])\n  @@index([regionId])\n  @@index([smallGroupId])\n  @@index([universityId])\n  @@index([userId])\n}\n\nmodel verificationtoken {\n  identifier String\n  token      String\n  expires    DateTime\n\n  @@unique([identifier, token], map: \"VerificationToken_identifier_token_key\")\n}\n\nmodel villages {\n  id      BigInt @id @default(autoincrement()) @db.UnsignedBigInt\n  name    String\n  cell_id BigInt @db.UnsignedBigInt\n  cells   cells  @relation(fields: [cell_id], references: [id], onUpdate: Restrict, map: \"villages_cell_id_foreign\")\n\n  @@index([cell_id], map: \"villages_cell_id_foreign\")\n}\n\nmodel volunteerprofile {\n  id              Int       @id @default(autoincrement())\n  memberId        Int       @unique(map: \"VolunteerProfile_memberId_key\")\n  skills          String?\n  hours           Int       @default(0)\n  commitmentLevel String?\n  onboardingDate  DateTime?\n  exitDate        DateTime?\n  notes           String?\n  member          member    @relation(fields: [memberId], references: [id], map: \"VolunteerProfile_memberId_fkey\")\n}\n\nenum approvalrequest_type {\n  role_assignment\n  training\n  financial\n  group_creation\n  other\n}\n\nenum approvalrequest_status {\n  pending\n  approved\n  rejected\n}\n\nenum notification_type {\n  email\n  sms\n  in_app\n}\n\nenum permanentministryevent_type {\n  bible_study\n  discipleship\n  evangelism\n  cell_meeting\n  alumni_meeting\n  other\n}\n\nenum contribution_method {\n  mobile_money\n  bank_transfer\n  card\n  worldremit\n}\n\nenum attendance_status {\n  present\n  absent\n  excused\n}\n\nenum contribution_status {\n  pending\n  completed\n  failed\n  refunded\n  processing\n  cancelled\n}\n\nenum notification_status {\n  sent\n  pending\n  failed\n}\n\nenum userrole_scope {\n  superadmin\n  national\n  region\n  university\n  smallgroup\n  alumnismallgroup\n}\n\nenum paymenttransaction_status {\n  initiated\n  processing\n  completed\n  failed\n  cancelled\n  refunded\n}\n\nenum member_type {\n  student\n  graduate\n  staff\n  volunteer\n  alumni\n}\n\nenum member_status {\n  active\n  pre_graduate\n  graduate\n  alumni\n  inactive\n}\n",
  "inlineSchemaHash": "f23d2ddbd01118a466b86dcdc5cb49fb769b4b44c0418a8be2b637e224771386",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"account\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"provider\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"providerAccountId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"refresh_token\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"access_token\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expires_at\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"token_type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"scope\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"id_token\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"session_state\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"refresh_token_expires_in\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"user\",\"relationName\":\"accountTouser\"}],\"dbName\":null},\"alumnismallgroup\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"regionId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"region\",\"kind\":\"object\",\"type\":\"region\",\"relationName\":\"alumnismallgroupToregion\"},{\"name\":\"approvalrequest\",\"kind\":\"object\",\"type\":\"approvalrequest\",\"relationName\":\"alumnismallgroupToapprovalrequest\"},{\"name\":\"budget\",\"kind\":\"object\",\"type\":\"budget\",\"relationName\":\"alumnismallgroupTobudget\"},{\"name\":\"document\",\"kind\":\"object\",\"type\":\"document\",\"relationName\":\"alumnismallgroupTodocument\"},{\"name\":\"member\",\"kind\":\"object\",\"type\":\"member\",\"relationName\":\"alumnismallgroupTomember\"},{\"name\":\"permanentministryevent\",\"kind\":\"object\",\"type\":\"permanentministryevent\",\"relationName\":\"alumnismallgroupTopermanentministryevent\"},{\"name\":\"trainings\",\"kind\":\"object\",\"type\":\"trainings\",\"relationName\":\"alumnismallgroupTotrainings\"},{\"name\":\"userrole\",\"kind\":\"object\",\"type\":\"userrole\",\"relationName\":\"alumnismallgroupTouserrole\"}],\"dbName\":null},\"approvalrequest\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"approvalrequest_type\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"approvalrequest_status\"},{\"name\":\"requestedById\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"reviewedById\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"regionId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"universityId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"smallGroupId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"alumniGroupId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"trainingsId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"details\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"reviewedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"alumnismallgroup\",\"kind\":\"object\",\"type\":\"alumnismallgroup\",\"relationName\":\"alumnismallgroupToapprovalrequest\"},{\"name\":\"region\",\"kind\":\"object\",\"type\":\"region\",\"relationName\":\"approvalrequestToregion\"},{\"name\":\"user_approvalrequest_requestedByIdTouser\",\"kind\":\"object\",\"type\":\"user\",\"relationName\":\"approvalrequest_requestedByIdTouser\"},{\"name\":\"user_approvalrequest_reviewedByIdTouser\",\"kind\":\"object\",\"type\":\"user\",\"relationName\":\"approvalrequest_reviewedByIdTouser\"},{\"name\":\"smallgroup\",\"kind\":\"object\",\"type\":\"smallgroup\",\"relationName\":\"approvalrequestTosmallgroup\"},{\"name\":\"trainings\",\"kind\":\"object\",\"type\":\"trainings\",\"relationName\":\"approvalrequestTotrainings\"},{\"name\":\"university\",\"kind\":\"object\",\"type\":\"university\",\"relationName\":\"approvalrequestTouniversity\"}],\"dbName\":null},\"attendance\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"memberId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"trainingId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"permanentEventId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"attendance_status\"},{\"name\":\"recordedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"member\",\"kind\":\"object\",\"type\":\"member\",\"relationName\":\"attendanceTomember\"},{\"name\":\"permanentministryevent\",\"kind\":\"object\",\"type\":\"permanentministryevent\",\"relationName\":\"attendanceTopermanentministryevent\"},{\"name\":\"trainings\",\"kind\":\"object\",\"type\":\"trainings\",\"relationName\":\"attendanceTotrainings\"}],\"dbName\":null},\"auditlog\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"action\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"details\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"user\",\"relationName\":\"auditlogTouser\"}],\"dbName\":null},\"authenticator\":{\"fields\":[{\"name\":\"credentialID\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"providerAccountId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"credentialPublicKey\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"counter\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"credentialDeviceType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"credentialBackedUp\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"transports\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"user\",\"relationName\":\"authenticatorTouser\"}],\"dbName\":null},\"budget\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"period\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"allocatedAmount\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"regionId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"universityId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"smallGroupId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"alumniGroupId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"trainingsId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"alumnismallgroup\",\"kind\":\"object\",\"type\":\"alumnismallgroup\",\"relationName\":\"alumnismallgroupTobudget\"},{\"name\":\"region\",\"kind\":\"object\",\"type\":\"region\",\"relationName\":\"budgetToregion\"},{\"name\":\"smallgroup\",\"kind\":\"object\",\"type\":\"smallgroup\",\"relationName\":\"budgetTosmallgroup\"},{\"name\":\"trainings\",\"kind\":\"object\",\"type\":\"trainings\",\"relationName\":\"budgetTotrainings\"},{\"name\":\"university\",\"kind\":\"object\",\"type\":\"university\",\"relationName\":\"budgetTouniversity\"}],\"dbName\":null},\"cells\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sector_id\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"sectors\",\"kind\":\"object\",\"type\":\"sectors\",\"relationName\":\"cellsTosectors\"},{\"name\":\"villages\",\"kind\":\"object\",\"type\":\"villages\",\"relationName\":\"cellsTovillages\"}],\"dbName\":null},\"contribution\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"contributorId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"method\",\"kind\":\"enum\",\"type\":\"contribution_method\"},{\"name\":\"designationId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"contribution_status\"},{\"name\":\"transactionId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"paymentTransactionId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"memberId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"contributor\",\"kind\":\"object\",\"type\":\"contributor\",\"relationName\":\"contributionTocontributor\"},{\"name\":\"contributiondesignation\",\"kind\":\"object\",\"type\":\"contributiondesignation\",\"relationName\":\"contributionTocontributiondesignation\"},{\"name\":\"member\",\"kind\":\"object\",\"type\":\"member\",\"relationName\":\"contributionTomember\"},{\"name\":\"paymenttransaction\",\"kind\":\"object\",\"type\":\"paymenttransaction\",\"relationName\":\"contributionTopaymenttransaction\"},{\"name\":\"contributionreceipt\",\"kind\":\"object\",\"type\":\"contributionreceipt\",\"relationName\":\"contributionTocontributionreceipt\"}],\"dbName\":null},\"contributiondesignation\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"targetAmount\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"currentAmount\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"regionId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"universityId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"smallGroupId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"contribution\",\"kind\":\"object\",\"type\":\"contribution\",\"relationName\":\"contributionTocontributiondesignation\"},{\"name\":\"region\",\"kind\":\"object\",\"type\":\"region\",\"relationName\":\"contributiondesignationToregion\"},{\"name\":\"smallgroup\",\"kind\":\"object\",\"type\":\"smallgroup\",\"relationName\":\"contributiondesignationTosmallgroup\"},{\"name\":\"university\",\"kind\":\"object\",\"type\":\"university\",\"relationName\":\"contributiondesignationTouniversity\"}],\"dbName\":null},\"contributionreceipt\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"contributionId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"receiptNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"pdfPath\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"emailSent\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"emailSentAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"smsSent\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"smsSentAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"contribution\",\"kind\":\"object\",\"type\":\"contribution\",\"relationName\":\"contributionTocontributionreceipt\"}],\"dbName\":null},\"contributor\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"memberId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"contribution\",\"kind\":\"object\",\"type\":\"contribution\",\"relationName\":\"contributionTocontributor\"},{\"name\":\"member\",\"kind\":\"object\",\"type\":\"member\",\"relationName\":\"contributorTomember\"}],\"dbName\":null},\"districts\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"province_id\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"provinces\",\"kind\":\"object\",\"type\":\"provinces\",\"relationName\":\"districtsToprovinces\"},{\"name\":\"sectors\",\"kind\":\"object\",\"type\":\"sectors\",\"relationName\":\"districtsTosectors\"}],\"dbName\":null},\"document\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"url\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"uploadedById\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"regionId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"universityId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"smallGroupId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"alumniGroupId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"alumnismallgroup\",\"kind\":\"object\",\"type\":\"alumnismallgroup\",\"relationName\":\"alumnismallgroupTodocument\"},{\"name\":\"region\",\"kind\":\"object\",\"type\":\"region\",\"relationName\":\"documentToregion\"},{\"name\":\"smallgroup\",\"kind\":\"object\",\"type\":\"smallgroup\",\"relationName\":\"documentTosmallgroup\"},{\"name\":\"university\",\"kind\":\"object\",\"type\":\"university\",\"relationName\":\"documentTouniversity\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"user\",\"relationName\":\"documentTouser\"}],\"dbName\":null},\"member\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"firstname\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"secondname\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"gender\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"birthdate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"placeOfBirthDistrict\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"placeOfBirthSector\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"placeOfBirthCell\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"placeOfBirthVillage\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"localChurch\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"member_type\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"member_status\"},{\"name\":\"regionId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"universityId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"smallGroupId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"alumniGroupId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"graduationDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"faculty\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"professionalism\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"maritalStatus\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"placeOfBirthProvince\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"attendance\",\"kind\":\"object\",\"type\":\"attendance\",\"relationName\":\"attendanceTomember\"},{\"name\":\"contribution\",\"kind\":\"object\",\"type\":\"contribution\",\"relationName\":\"contributionTomember\"},{\"name\":\"contributor\",\"kind\":\"object\",\"type\":\"contributor\",\"relationName\":\"contributorTomember\"},{\"name\":\"alumnismallgroup\",\"kind\":\"object\",\"type\":\"alumnismallgroup\",\"relationName\":\"alumnismallgroupTomember\"},{\"name\":\"region\",\"kind\":\"object\",\"type\":\"region\",\"relationName\":\"memberToregion\"},{\"name\":\"smallgroup\",\"kind\":\"object\",\"type\":\"smallgroup\",\"relationName\":\"memberTosmallgroup\"},{\"name\":\"university\",\"kind\":\"object\",\"type\":\"university\",\"relationName\":\"memberTouniversity\"},{\"name\":\"movement\",\"kind\":\"object\",\"type\":\"movement\",\"relationName\":\"memberTomovement\"},{\"name\":\"staffprofile\",\"kind\":\"object\",\"type\":\"staffprofile\",\"relationName\":\"memberTostaffprofile\"},{\"name\":\"volunteerprofile\",\"kind\":\"object\",\"type\":\"volunteerprofile\",\"relationName\":\"memberTovolunteerprofile\"}],\"dbName\":null},\"movement\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"memberId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"fromGroupId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"toGroupId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"fromLocation\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"toLocation\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"reason\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"movedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"member\",\"kind\":\"object\",\"type\":\"member\",\"relationName\":\"memberTomovement\"}],\"dbName\":null},\"notification\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"notification_type\"},{\"name\":\"subject\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"message\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"notification_status\"},{\"name\":\"sentAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"user\",\"relationName\":\"notificationTouser\"}],\"dbName\":null},\"paymentgateway\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"provider\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"configuration\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"supportedMethods\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"paymenttransaction\",\"kind\":\"object\",\"type\":\"paymenttransaction\",\"relationName\":\"paymentgatewayTopaymenttransaction\"}],\"dbName\":null},\"paymenttransaction\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"externalId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"gatewayId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"currency\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phoneNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"payerName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"paymenttransaction_status\"},{\"name\":\"gatewayResponse\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"failureReason\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"webhookVerified\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"contribution\",\"kind\":\"object\",\"type\":\"contribution\",\"relationName\":\"contributionTopaymenttransaction\"},{\"name\":\"paymentgateway\",\"kind\":\"object\",\"type\":\"paymentgateway\",\"relationName\":\"paymentgatewayTopaymenttransaction\"}],\"dbName\":null},\"permanentministryevent\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"permanentministryevent_type\"},{\"name\":\"regionId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"universityId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"smallGroupId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"alumniGroupId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"attendance\",\"kind\":\"object\",\"type\":\"attendance\",\"relationName\":\"attendanceTopermanentministryevent\"},{\"name\":\"alumnismallgroup\",\"kind\":\"object\",\"type\":\"alumnismallgroup\",\"relationName\":\"alumnismallgroupTopermanentministryevent\"},{\"name\":\"region\",\"kind\":\"object\",\"type\":\"region\",\"relationName\":\"permanentministryeventToregion\"},{\"name\":\"smallgroup\",\"kind\":\"object\",\"type\":\"smallgroup\",\"relationName\":\"permanentministryeventTosmallgroup\"},{\"name\":\"university\",\"kind\":\"object\",\"type\":\"university\",\"relationName\":\"permanentministryeventTouniversity\"}],\"dbName\":null},\"provinces\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"districts\",\"kind\":\"object\",\"type\":\"districts\",\"relationName\":\"districtsToprovinces\"}],\"dbName\":null},\"region\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"alumnismallgroup\",\"kind\":\"object\",\"type\":\"alumnismallgroup\",\"relationName\":\"alumnismallgroupToregion\"},{\"name\":\"approvalrequest\",\"kind\":\"object\",\"type\":\"approvalrequest\",\"relationName\":\"approvalrequestToregion\"},{\"name\":\"budget\",\"kind\":\"object\",\"type\":\"budget\",\"relationName\":\"budgetToregion\"},{\"name\":\"contributiondesignation\",\"kind\":\"object\",\"type\":\"contributiondesignation\",\"relationName\":\"contributiondesignationToregion\"},{\"name\":\"document\",\"kind\":\"object\",\"type\":\"document\",\"relationName\":\"documentToregion\"},{\"name\":\"member\",\"kind\":\"object\",\"type\":\"member\",\"relationName\":\"memberToregion\"},{\"name\":\"permanentministryevent\",\"kind\":\"object\",\"type\":\"permanentministryevent\",\"relationName\":\"permanentministryeventToregion\"},{\"name\":\"smallgroup\",\"kind\":\"object\",\"type\":\"smallgroup\",\"relationName\":\"regionTosmallgroup\"},{\"name\":\"trainings\",\"kind\":\"object\",\"type\":\"trainings\",\"relationName\":\"regionTotrainings\"},{\"name\":\"university\",\"kind\":\"object\",\"type\":\"university\",\"relationName\":\"regionTouniversity\"},{\"name\":\"userrole\",\"kind\":\"object\",\"type\":\"userrole\",\"relationName\":\"regionTouserrole\"}],\"dbName\":null},\"sectors\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"district_id\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"cells\",\"kind\":\"object\",\"type\":\"cells\",\"relationName\":\"cellsTosectors\"},{\"name\":\"districts\",\"kind\":\"object\",\"type\":\"districts\",\"relationName\":\"districtsTosectors\"}],\"dbName\":null},\"session\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sessionToken\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expires\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"user\",\"relationName\":\"sessionTouser\"}],\"dbName\":null},\"smallgroup\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"universityId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"regionId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"approvalrequest\",\"kind\":\"object\",\"type\":\"approvalrequest\",\"relationName\":\"approvalrequestTosmallgroup\"},{\"name\":\"budget\",\"kind\":\"object\",\"type\":\"budget\",\"relationName\":\"budgetTosmallgroup\"},{\"name\":\"contributiondesignation\",\"kind\":\"object\",\"type\":\"contributiondesignation\",\"relationName\":\"contributiondesignationTosmallgroup\"},{\"name\":\"document\",\"kind\":\"object\",\"type\":\"document\",\"relationName\":\"documentTosmallgroup\"},{\"name\":\"member\",\"kind\":\"object\",\"type\":\"member\",\"relationName\":\"memberTosmallgroup\"},{\"name\":\"permanentministryevent\",\"kind\":\"object\",\"type\":\"permanentministryevent\",\"relationName\":\"permanentministryeventTosmallgroup\"},{\"name\":\"region\",\"kind\":\"object\",\"type\":\"region\",\"relationName\":\"regionTosmallgroup\"},{\"name\":\"university\",\"kind\":\"object\",\"type\":\"university\",\"relationName\":\"smallgroupTouniversity\"},{\"name\":\"trainings\",\"kind\":\"object\",\"type\":\"trainings\",\"relationName\":\"smallgroupTotrainings\"},{\"name\":\"userrole\",\"kind\":\"object\",\"type\":\"userrole\",\"relationName\":\"smallgroupTouserrole\"}],\"dbName\":null},\"staffprofile\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"memberId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"position\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"startDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"endDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"mentorship\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"member\",\"kind\":\"object\",\"type\":\"member\",\"relationName\":\"memberTostaffprofile\"}],\"dbName\":null},\"trainings\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"startDateTime\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"endDateTime\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"location\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"regionId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"universityId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"smallGroupId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"alumniGroupId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdById\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"approvalrequest\",\"kind\":\"object\",\"type\":\"approvalrequest\",\"relationName\":\"approvalrequestTotrainings\"},{\"name\":\"attendance\",\"kind\":\"object\",\"type\":\"attendance\",\"relationName\":\"attendanceTotrainings\"},{\"name\":\"budget\",\"kind\":\"object\",\"type\":\"budget\",\"relationName\":\"budgetTotrainings\"},{\"name\":\"alumnismallgroup\",\"kind\":\"object\",\"type\":\"alumnismallgroup\",\"relationName\":\"alumnismallgroupTotrainings\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"user\",\"relationName\":\"trainingsTouser\"},{\"name\":\"region\",\"kind\":\"object\",\"type\":\"region\",\"relationName\":\"regionTotrainings\"},{\"name\":\"smallgroup\",\"kind\":\"object\",\"type\":\"smallgroup\",\"relationName\":\"smallgroupTotrainings\"},{\"name\":\"university\",\"kind\":\"object\",\"type\":\"university\",\"relationName\":\"trainingsTouniversity\"}],\"dbName\":null},\"university\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"regionId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"approvalrequest\",\"kind\":\"object\",\"type\":\"approvalrequest\",\"relationName\":\"approvalrequestTouniversity\"},{\"name\":\"budget\",\"kind\":\"object\",\"type\":\"budget\",\"relationName\":\"budgetTouniversity\"},{\"name\":\"contributiondesignation\",\"kind\":\"object\",\"type\":\"contributiondesignation\",\"relationName\":\"contributiondesignationTouniversity\"},{\"name\":\"document\",\"kind\":\"object\",\"type\":\"document\",\"relationName\":\"documentTouniversity\"},{\"name\":\"member\",\"kind\":\"object\",\"type\":\"member\",\"relationName\":\"memberTouniversity\"},{\"name\":\"permanentministryevent\",\"kind\":\"object\",\"type\":\"permanentministryevent\",\"relationName\":\"permanentministryeventTouniversity\"},{\"name\":\"smallgroup\",\"kind\":\"object\",\"type\":\"smallgroup\",\"relationName\":\"smallgroupTouniversity\"},{\"name\":\"trainings\",\"kind\":\"object\",\"type\":\"trainings\",\"relationName\":\"trainingsTouniversity\"},{\"name\":\"region\",\"kind\":\"object\",\"type\":\"region\",\"relationName\":\"regionTouniversity\"},{\"name\":\"userrole\",\"kind\":\"object\",\"type\":\"userrole\",\"relationName\":\"universityTouserrole\"}],\"dbName\":null},\"user\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"username\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"emailVerified\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"image\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"account\",\"kind\":\"object\",\"type\":\"account\",\"relationName\":\"accountTouser\"},{\"name\":\"approvalrequest_approvalrequest_requestedByIdTouser\",\"kind\":\"object\",\"type\":\"approvalrequest\",\"relationName\":\"approvalrequest_requestedByIdTouser\"},{\"name\":\"approvalrequest_approvalrequest_reviewedByIdTouser\",\"kind\":\"object\",\"type\":\"approvalrequest\",\"relationName\":\"approvalrequest_reviewedByIdTouser\"},{\"name\":\"auditlog\",\"kind\":\"object\",\"type\":\"auditlog\",\"relationName\":\"auditlogTouser\"},{\"name\":\"authenticator\",\"kind\":\"object\",\"type\":\"authenticator\",\"relationName\":\"authenticatorTouser\"},{\"name\":\"document\",\"kind\":\"object\",\"type\":\"document\",\"relationName\":\"documentTouser\"},{\"name\":\"notification\",\"kind\":\"object\",\"type\":\"notification\",\"relationName\":\"notificationTouser\"},{\"name\":\"session\",\"kind\":\"object\",\"type\":\"session\",\"relationName\":\"sessionTouser\"},{\"name\":\"trainings\",\"kind\":\"object\",\"type\":\"trainings\",\"relationName\":\"trainingsTouser\"},{\"name\":\"userrole\",\"kind\":\"object\",\"type\":\"userrole\",\"relationName\":\"userTouserrole\"}],\"dbName\":null},\"userrole\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"regionId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"universityId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"smallGroupId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"alumniGroupId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"scope\",\"kind\":\"enum\",\"type\":\"userrole_scope\"},{\"name\":\"assignedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"alumnismallgroup\",\"kind\":\"object\",\"type\":\"alumnismallgroup\",\"relationName\":\"alumnismallgroupTouserrole\"},{\"name\":\"region\",\"kind\":\"object\",\"type\":\"region\",\"relationName\":\"regionTouserrole\"},{\"name\":\"smallgroup\",\"kind\":\"object\",\"type\":\"smallgroup\",\"relationName\":\"smallgroupTouserrole\"},{\"name\":\"university\",\"kind\":\"object\",\"type\":\"university\",\"relationName\":\"universityTouserrole\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"user\",\"relationName\":\"userTouserrole\"}],\"dbName\":null},\"verificationtoken\":{\"fields\":[{\"name\":\"identifier\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"token\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expires\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"villages\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"cell_id\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"cells\",\"kind\":\"object\",\"type\":\"cells\",\"relationName\":\"cellsTovillages\"}],\"dbName\":null},\"volunteerprofile\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"memberId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"skills\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"hours\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"commitmentLevel\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"onboardingDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"exitDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"member\",\"kind\":\"object\",\"type\":\"member\",\"relationName\":\"memberTovolunteerprofile\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

